   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pwm_ccu8.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_EnableClock,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_EnableClock:
  25              	.LFB157:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2019-07-29
   4:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  54:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  70:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  78:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  85:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  86:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  87:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  88:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  89:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  90:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  91:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  92:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2019-03-30:
  93:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_StartPrescaler(), XMC_CCU8_StartParityChecker(), XMC_CCU8_StopPrescaler()
  94:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_EnableMultipleClocks(), XMC_CCU8_EnableClock(), XMC_CCU8_DisableClock() to avoid 
  95:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_SetEvent(), XMC_CCU8_SLICE_ClearEvent() to avoid RMW access
  96:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SetSuspendMode(), XMC_CCU8_SLICE_GetPrescaler()
  97:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_GetTimerCompareMatchChannel1() and XMC_CCU8_SLICE_GetTimerCompareMatc
  98:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2019-07-29:
 100:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU4_SLICE_GetStatus()
 101:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 102:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
 103:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 104:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
 106:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
 107:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 109:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 110:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 111:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 112:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 113:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 114:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 116:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 117:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 118:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 119:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 120:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 121:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 122:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 123:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 124:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 126:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 129:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 130:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 131:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 132:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 133:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 134:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 135:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 136:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 137:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 138:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 139:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 140:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 141:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 142:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 143:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 144:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 145:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 146:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 147:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 148:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 149:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 150:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 151:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 152:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 153:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 154:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 155:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 156:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 157:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 158:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 159:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 160:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 161:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 162:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 163:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 164:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 165:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 166:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 167:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 168:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 169:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 170:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 171:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 172:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 173:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 174:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 175:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 176:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 177:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 178:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 179:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 180:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 181:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 182:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 183:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 184:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 185:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 186:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 187:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 188:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 189:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 190:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 191:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 192:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 193:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 194:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 195:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 196:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 197:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 198:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 199:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 200:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****      
 201:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 202:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 203:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 204:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 205:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 206:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 207:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 208:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 209:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 210:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 211:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 212:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 213:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 214:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 215:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 216:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 217:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 218:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 219:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 220:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 221:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 222:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 224:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 225:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 228:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 229:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 230:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 231:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 232:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 233:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 234:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 235:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 236:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 237:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 238:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 241:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 243:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 244:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 245:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 246:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 247:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 248:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 249:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 250:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 251:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 252:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 253:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 254:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 255:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 256:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 257:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 258:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 259:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 260:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 261:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 262:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 263:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 264:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 265:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 266:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 267:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 268:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 269:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 270:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 271:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 272:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 273:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 274:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 275:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 276:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 277:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 278:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 279:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 280:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 281:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 282:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 283:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 284:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 285:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 286:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 287:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 288:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 289:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 290:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 291:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 292:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 293:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 294:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 295:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 296:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 297:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 298:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 299:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 300:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 301:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 302:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 303:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 304:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 305:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 306:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 307:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 308:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 309:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 310:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 311:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 312:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 313:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 314:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 315:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 316:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 317:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 318:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 319:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 320:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 321:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 322:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 323:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 324:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 325:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 326:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 327:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 328:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 329:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 330:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 332:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 333:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 334:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 335:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 336:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 337:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 338:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 339:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 340:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 341:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 342:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 343:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 344:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 345:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 346:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 347:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 348:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 349:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 350:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 351:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 352:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 353:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 354:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 355:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 356:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 357:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 358:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 359:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 360:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 361:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 362:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 363:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 364:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 365:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 367:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 368:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 369:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 370:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 371:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 372:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 373:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 374:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 375:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 376:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 377:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 378:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 379:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 380:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 381:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 382:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 383:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 384:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 385:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 386:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 387:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 388:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 389:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 390:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 391:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 392:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 393:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 394:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 395:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 396:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 397:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 398:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 399:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 400:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 401:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 402:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 403:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 404:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 405:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 406:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 407:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 408:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 409:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 410:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 411:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 412:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 413:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 414:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 415:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 416:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 417:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 418:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 419:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 420:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 421:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 422:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 423:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 424:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 425:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 426:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 427:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 428:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 429:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 430:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 431:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 432:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 433:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 434:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 435:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 436:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 437:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 438:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 439:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 440:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 441:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 442:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 443:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 444:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 445:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 446:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 447:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 448:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 449:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 450:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 451:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 452:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 453:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 454:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 455:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 456:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 457:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 458:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 459:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 460:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 461:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 462:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 463:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 464:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 465:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 466:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 467:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 468:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 469:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 470:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 471:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 472:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 473:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 474:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 475:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 476:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 477:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 478:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 479:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 480:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 481:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 482:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 483:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 484:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 485:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 486:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 487:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 488:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 489:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 490:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 491:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 492:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 493:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 494:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 495:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 496:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 497:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 498:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 499:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 500:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 501:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 502:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 503:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 504:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 505:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 506:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 507:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 508:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 509:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 510:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 511:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 512:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 513:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 514:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 515:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 516:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 517:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 518:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 519:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 520:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 521:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 522:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 523:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 524:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 525:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 526:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 527:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 528:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 529:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 530:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 531:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 532:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 533:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 534:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 535:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 536:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 537:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 538:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 539:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 540:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 541:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 542:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 543:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 544:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 545:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 546:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 547:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 548:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 549:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 550:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 551:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 552:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 553:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 554:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 555:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 556:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 557:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 558:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 559:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 560:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 561:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 562:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 563:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 564:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 565:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 566:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 567:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 568:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 569:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 570:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 571:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 572:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 573:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 574:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 575:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 576:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 577:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 578:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 579:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 580:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 581:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 582:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 583:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 584:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 585:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 586:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 587:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 588:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 589:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 590:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 591:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 592:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 593:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 594:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 595:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 596:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 597:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 598:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 599:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 600:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 601:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 602:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 603:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 604:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 605:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 606:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 607:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 608:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 609:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 610:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 611:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 612:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 613:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 614:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 615:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 616:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 617:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 618:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 619:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 620:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 621:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 622:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 623:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 624:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 625:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 626:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 627:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 628:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 629:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 630:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 631:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 632:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 633:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 634:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 635:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 636:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 637:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 638:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 639:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 640:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 641:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 642:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 643:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 644:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 645:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 646:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 647:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 648:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 649:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 650:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 651:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 652:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 653:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 654:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 655:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 656:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 657:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 658:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 659:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 660:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 661:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 662:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 663:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 664:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 665:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 666:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 667:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 668:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 669:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 670:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 671:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 672:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 673:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 674:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 675:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 676:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 677:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 678:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 679:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 680:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 681:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 682:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 683:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 684:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 685:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 686:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 687:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 688:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 689:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 690:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 691:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 692:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 693:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 694:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 695:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 696:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 697:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 698:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 699:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 700:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 701:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 702:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 703:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 704:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 705:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 706:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 707:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 708:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 709:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 710:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 711:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 712:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 713:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 714:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 715:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 716:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 717:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 718:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 719:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 720:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 721:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 722:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 723:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 724:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 725:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 726:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 727:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 728:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 729:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 730:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 731:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 732:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 733:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 734:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 735:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 736:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 737:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 738:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 739:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 740:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 741:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 742:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 743:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 744:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 745:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 746:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 747:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 748:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 749:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 750:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 751:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 752:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 753:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 754:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 755:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 756:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 757:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 758:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 759:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 760:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 761:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 762:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 763:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 764:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 765:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 766:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 767:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 768:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 769:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 770:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 771:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 772:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 773:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 774:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 775:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 776:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 777:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 778:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 779:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 780:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 781:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 782:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 783:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 784:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 785:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 786:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 787:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 788:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 789:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 790:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 791:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 792:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 793:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 794:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 795:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 796:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 797:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 798:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 799:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 800:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 801:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 802:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 803:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 804:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 805:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 806:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 807:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 808:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 809:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 810:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 811:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 812:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 813:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 814:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 815:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 816:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 817:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 818:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 819:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 820:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 821:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 822:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 823:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 824:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 825:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 826:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 827:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 828:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 829:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 830:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 831:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects suspend mode
 832:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 833:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SUSPEND_MODE
 834:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 835:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_IGNORE = 0 << CCU8_GCTRL_SUSCFG_Pos, /**< Suspend request ignored. The modu
 836:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_STOPS_INMEDIATELLY = 1 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops all the running
 837:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_SAFE_STOP = 2 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops the block immediately an
 838:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_WAIT_ROLL_OVER = 3 << CCU8_GCTRL_SUSCFG_Pos /**< Waits for the roll over of
 839:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SUSPEND_MODE_t;
 840:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 841:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 842:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice status bit
 843:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */ 
 844:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS_BIT
 845:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 846:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_BIT_PASSIVE = false, /**< Passive */
 847:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_BIT_ACTIVE  = true   /**< Active  */
 848:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_BIT_t;
 849:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 850:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 851:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 852:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 853:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 854:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 855:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 856:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 857:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 858:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 859:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 860:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 861:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 862:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 863:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 864:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 865:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 866:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 867:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 868:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 869:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 870:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 871:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 872:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 873:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 874:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 875:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 876:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 877:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 878:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 879:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 880:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 881:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 882:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 883:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 884:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 885:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 886:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 887:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 888:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 889:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 890:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 891:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 892:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 893:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 894:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 895:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 896:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 897:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 898:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 899:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 900:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 901:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 902:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 903:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 904:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 905:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 906:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 907:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 908:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 909:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 910:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 911:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 912:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 913:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 914:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 915:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 916:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 917:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 918:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 919:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 920:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 921:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 922:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 923:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 924:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 925:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 926:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 927:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 928:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 929:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 930:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 931:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 932:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 933:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 934:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 935:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 936:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 937:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 938:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 939:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 940:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 941:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 942:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 943:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 944:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 945:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 946:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 947:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 948:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 949:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 950:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 951:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 952:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 953:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 954:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 955:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 956:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 957:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 958:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 959:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 960:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 961:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 962:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 963:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 964:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 965:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 966:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 967:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 968:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 969:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 970:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 971:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 972:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 973:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 974:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 975:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 976:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 977:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 978:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 979:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 980:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 981:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 982:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 983:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 984:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 985:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 986:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   #else
 987:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 988:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 989:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 990:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 991:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 992:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 993:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 994:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 995:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 996:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 997:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 998:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 999:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
1000:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
1001:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1002:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
1003:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
1004:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
1005:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
1006:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1007:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
1008:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   #endif
1009:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1010:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
1011:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1012:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
1013:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
1014:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
1015:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1016:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
1017:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1018:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
1019:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
1020:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1021:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1022:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
1023:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
1024:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1025:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
1026:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1027:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
1028:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
1029:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
1030:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
1031:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1032:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1033:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1034:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1035:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1036:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1037:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1038:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1039:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1040:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1041:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1042:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1043:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1044:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1045:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1046:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1047:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1048:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1049:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1050:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
1051:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1052:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
1053:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1054:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1055:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1056:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1057:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1058:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1059:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1060:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1061:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1062:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1063:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1064:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1065:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1066:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1067:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1068:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1069:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1070:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1071:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1072:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1073:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1074:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1075:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1076:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1077:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1078:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1079:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1080:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1081:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1082:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1083:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1084:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1085:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1086:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1087:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1088:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1089:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1090:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1091:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1092:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1093:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1094:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1095:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1096:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1097:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1098:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1099:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif 
1100:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  
1101:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1102:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1103:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1104:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1105:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1106:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1107:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1108:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1109:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1110:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1111:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1112:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1113:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1114:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1115:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1116:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1117:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1118:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1119:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1120:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1121:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1122:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1123:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1124:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1125:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1126:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1127:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1128:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1129:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1130:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1131:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1132:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1133:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1134:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1135:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1136:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1137:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1138:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1139:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1140:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1141:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1142:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1143:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1144:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1145:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1146:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1147:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1148:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1149:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1150:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1151:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1152:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1153:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1154:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1155:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1156:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1157:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1158:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1159:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1160:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1161:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1162:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1163:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1164:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1165:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1166:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1167:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1168:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1169:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1170:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1171:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1172:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1173:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1174:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1175:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1176:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1177:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1178:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1179:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1180:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1181:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1182:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1183:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1184:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1185:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1186:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1187:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPRB_Msk;
1188:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1189:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1190:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1191:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1192:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1193:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1194:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1195:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1196:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the parity function.<br>\n
1197:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this  API after XMC_CCU8_Init()
1198:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1199:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1200:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR> XMC_CCU8_StopParity
1201:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1202:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartParityChecker(XMC_CCU8_MODULE_t *const module)
1203:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1204:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1205:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPCH_Msk;
1206:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1207:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1208:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1209:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1210:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1211:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1212:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1213:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1214:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1215:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1216:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1217:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1218:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1219:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1220:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1221:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1222:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1223:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1224:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPRB_Msk;
1225:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1226:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1227:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1228:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1229:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1230:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1231:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1232:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1233:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the parity function.<br>\n
1234:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1235:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1236:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartParityChecker()<BR>
1237:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1238:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopParityChecker(XMC_CCU8_MODULE_t *const module)
1239:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1240:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1241:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPCH_Msk;
1242:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1243:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1244:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1245:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1246:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1247:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1248:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1249:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1250:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1251:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1252:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1253:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1254:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1255:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1256:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1257:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1258:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1259:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1260:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1261:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1262:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1263:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1264:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1265:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1266:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1267:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1268:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the parity checker.\n\n
1269:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1270:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1271:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_StopParityChecker()<BR> XMC_CCU8_EnableClock()<BR>  
1272:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1273:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsParityCheckerRunning(XMC_CCU8_MODULE_t *const module)
1274:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1275:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1276:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PCRB_Msk) == CCU8_GSTAT_PCRB_Msk));
1277:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1278:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1279:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1280:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1281:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1282:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1283:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1284:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1285:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1286:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1287:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1288:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1289:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1290:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1291:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1292:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1293:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1294:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1295:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1296:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1297:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1298:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1299:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1300:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1301:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) clock_mask;
1302:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1303:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1304:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1305:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1306:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode   Selects suspend mode
1307:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1308:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1309:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1310:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1311:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the entering in suspend mode for all the CCU8 slices.
1312:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1313:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1314:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1315:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1316:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SetSuspendMode(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SUSPEN
1317:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1318:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1319:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCTRL = (module->GCTRL & (uint32_t)~CCU8_GCTRL_SUSCFG_Msk) | mode;
1320:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1321:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1322:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1323:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1324:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1325:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1326:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1327:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1328:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1329:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1330:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1331:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1332:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1333:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1334:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1335:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1336:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1337:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1338:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1339:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1340:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1341:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1342:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1343:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1344:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1345:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1346:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1347:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1348:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1349:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1350:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1351:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1352:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1353:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1354:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1355:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1356:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1357:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1358:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1359:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1360:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1361:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1362:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1363:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1364:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1365:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1366:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1367:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1368:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1369:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1370:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1371:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1372:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1373:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1374:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1375:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1376:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1376 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
1377:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1378:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1379:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1380:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = ((uint32_t) 1 << slice_number);
  45              	 .loc 1 1380 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 DA60     	 str r2,[r3,#12]
1381:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  51              	 .loc 1 1381 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE157:
  67              	 .section .text.XMC_CCU8_SLICE_EnableTrap,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_CCU8_SLICE_EnableTrap:
  73              	.LFB166:
1382:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1383:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1384:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1385:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1386:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1387:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1388:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1389:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1390:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1391:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1392:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1393:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1394:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1395:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1396:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1397:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1398:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1399:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1400:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1401:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1402:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1403:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1404:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = ((uint32_t) 1 << slice_number);
1405:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1406:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1407:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1408:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1409:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1410:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1411:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output.
1412:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1413:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1414:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1415:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1416:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1417:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1418:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1419:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput()<BR>
1420:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1421:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput(XMC_CCU8_MODULE_t *const module,
1422:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1423:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1424:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Slice Number", (slice_number < 
1425:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1426:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK |= (uint32_t)(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1427:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1428:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1429:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1430:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1431:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1432:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1433:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1434:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1435:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1436:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output ::XMC_CCU8_SLICE_OUTPUT_t.
1437:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1438:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1439:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1440:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1441:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1442:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1443:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1444:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput()<BR>
1445:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1446:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput(XMC_CCU8_MODULE_t *const module
1447:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1448:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1449:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Number", (slice_number <
1450:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1451:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK &= (uint32_t)~(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1452:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1453:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1454:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1455:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1456:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1457:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1458:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1459:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal controlling the delay between the change at the CCU8 outputs and effective c
1460:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1461:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1462:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1463:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1464:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal is controlling the delay between the change at the CCU8 outputs and effecti
1465:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1466:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1467:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1468:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1469:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDelayInput(XMC_CCU8_MODULE_t *const module, con
1470:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1471:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1472:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCDS_Msk) | input;
1473:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1474:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1475:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1476:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1477:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal contains the driver parity information ::XMC_CCU8_PARITY_CHECKER_DRIVER_INPU
1478:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1479:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1480:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1481:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1482:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal contains the driver parity information.
1483:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal must be selected throughout the input selector mux of each slice. The signal must be 
1484:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1485:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1486:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker(), XMC_CCU8_SLICE_SetInput()<BR>.
1487:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1488:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDriverInput(XMC_CCU8_MODULE_t *const module, co
1489:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1490:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1491:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PISEL_Msk) | input;
1492:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1493:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1494:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1495:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1496:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param type odd or even parity ::XMC_CCU8_PARITY_CHECKER_TYPE_t.
1497:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1498:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1499:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1500:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1501:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects if we have an odd or even parity.
1502:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1503:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1504:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>.
1505:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1506:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetType(XMC_CCU8_MODULE_t *const module, const XMC
1507:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1508:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1509:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCTS_Msk) | type;
1510:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1511:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1512:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1513:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1514:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1515:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return status of parity checker. If >0 then an error is dectected
1516:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1517:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1518:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current value of the XOR chain.
1519:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1520:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1521:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1522:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1523:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint32_t XMC_CCU8_SLICE_ParityCheckerGetStatus(XMC_CCU8_MODULE_t *const module)
1524:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1525:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1526:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (module->GPCHK & CCU8_GPCHK_PCST_Msk);
1527:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1528:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1529:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1530:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1531:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1532:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1533:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1534:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1535:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1536:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1537:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1538:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1539:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1540:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1541:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1542:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1543:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1544:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1545:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1546:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1547:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1548:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1549:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1550:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1551:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1552:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1553:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1554:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1555:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1556:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1557:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1558:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1559:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1560:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1561:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1562:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1563:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1564:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1565:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1566:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1567:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1568:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1569:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1570:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1571:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1572:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1573:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1574:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1575:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1576:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1577:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1578:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1579:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1580:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1581:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1582:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1583:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1584:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1585:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1586:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1587:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1588:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1589:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1590:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1591:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1592:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1593:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1594:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1595:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1596:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1597:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1598:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1599:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  
1600:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1601:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1602:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1603:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1604:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1605:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1606:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1607:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1608:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1609:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1610:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1611:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1612:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1613:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1614:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1615:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1616:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1617:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1618:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1619:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1620:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1621:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1622:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1623:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1624:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1625:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1626:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1627:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1628:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1629:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1630:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1631:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1632:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1633:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1634:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1635:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1636:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1637:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1638:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1639:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1640:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1641:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1642:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1643:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1644:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1645:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1646:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1647:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1648:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      );
1649:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1650:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1651:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1652:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1653:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1654:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1655:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1656:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1657:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1658:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1659:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1660:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1661:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1662:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1663:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1664:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1665:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1666:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1667:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1668:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1669:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1670:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1671:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1672:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1673:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1674:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1675:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1676:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1677:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1678:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1679:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1680:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1681:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1682:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1683:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1684:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1685:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1686:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1687:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1688:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1689:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1690:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1691:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1692:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1693:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1694:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1695:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1696:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1697:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1698:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1699:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1700:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1701:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1702:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1703:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1704:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1705:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1706:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1707:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1708:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1709:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1710:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1711:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1712:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1713:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1714:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1715:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1716:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1717:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1718:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1719:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1720:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1721:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1722:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1723:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1724:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1725:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1726:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1727:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1728:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1729:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1730:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1731:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1732:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1733:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1734:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1735:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1736:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1737:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1738:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1739:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1740:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1741:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1742:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1743:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1744:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1745:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1746:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1747:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1748:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1749:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1750:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1751:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1752:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1753:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1754:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1755:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1756:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1757:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1758:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1759:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1760:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1761:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1762:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1763:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1764:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1765:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1766:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1767:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1768:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1769:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1770:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1771:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1772:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1773:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1774:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1775:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1776:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1777:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1778:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1779:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1780:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1781:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1782:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1783:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1784:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1785:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1786:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1787:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1788:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1789:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1790:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1791:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1792:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1793:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1794:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1795:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1796:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1797:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1798:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1799:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1800:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1801:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1802:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1803:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1804:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1805:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1806:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1807:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1808:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1809:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1810:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1811:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1812:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1813:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1814:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1815:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1816:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1817:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1818:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1819:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1820:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1821:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1822:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1823:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1824:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1825:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1826:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1827:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1828:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1829:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1830:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1831:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1832:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1833:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1834:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1835:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1836:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1837:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1838:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1839:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1840:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1841:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1842:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1843:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1844:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1845:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1846:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1847:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1848:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1849:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1850:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1851:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1852:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1853:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1854:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1855:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1856:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1857:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1858:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1859:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1860:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1861:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1862:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1863:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1864:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1865:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1866:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1867:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1868:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1869:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1870:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1871:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1872:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1873:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1874:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1875:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1876:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1877:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1878:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1879:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1880:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1881:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1882:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1883:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1884:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1885:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1886:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1887:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1888:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1889:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1890:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1891:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1892:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1893:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1894:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1895:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1896:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1897:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1898:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1899:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1900:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1901:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1902:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1903:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1904:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1905:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1906:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1907:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1908:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1909:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1910:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1911:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1912:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1913:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1914:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1915:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1916:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1917:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  74              	 .loc 1 1917 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 3960     	 str r1,[r7]
1918:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1919:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
  91              	 .loc 1 1919 0
  92 000a 7B68     	 ldr r3,[r7,#4]
  93 000c 5A69     	 ldr r2,[r3,#20]
  94 000e 3B68     	 ldr r3,[r7]
  95 0010 5B04     	 lsls r3,r3,#17
  96 0012 1A43     	 orrs r2,r2,r3
  97 0014 7B68     	 ldr r3,[r7,#4]
  98 0016 5A61     	 str r2,[r3,#20]
1920:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  99              	 .loc 1 1920 0
 100 0018 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 001a BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 001c 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 0020 7047     	 bx lr
 112              	 .cfi_endproc
 113              	.LFE166:
 115 0022 00BF     	 .section .text.XMC_CCU8_SLICE_IsTimerRunning,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_CCU8_SLICE_IsTimerRunning:
 121              	.LFB168:
1921:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1922:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1923:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1924:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1925:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1926:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1927:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1928:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1929:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1930:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1931:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1932:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1933:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1934:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1935:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1936:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1937:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1938:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1939:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1940:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1941:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1942:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1943:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1944:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1945:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1946:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1947:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1948:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1949:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1950:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1951:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1952:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1953:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1954:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1955:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1956:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1957:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1958:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1959:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 122              	 .loc 1 1959 0
 123              	 .cfi_startproc
 124              	 
 125              	 
 126              	 
 127 0000 80B4     	 push {r7}
 128              	.LCFI12:
 129              	 .cfi_def_cfa_offset 4
 130              	 .cfi_offset 7,-4
 131 0002 83B0     	 sub sp,sp,#12
 132              	.LCFI13:
 133              	 .cfi_def_cfa_offset 16
 134 0004 00AF     	 add r7,sp,#0
 135              	.LCFI14:
 136              	 .cfi_def_cfa_register 7
 137 0006 7860     	 str r0,[r7,#4]
1960:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1961:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
 138              	 .loc 1 1961 0
 139 0008 7B68     	 ldr r3,[r7,#4]
 140 000a 9B68     	 ldr r3,[r3,#8]
 141 000c 03F00103 	 and r3,r3,#1
 142 0010 002B     	 cmp r3,#0
 143 0012 14BF     	 ite ne
 144 0014 0123     	 movne r3,#1
 145 0016 0023     	 moveq r3,#0
 146 0018 DBB2     	 uxtb r3,r3
1962:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 147              	 .loc 1 1962 0
 148 001a 1846     	 mov r0,r3
 149 001c 0C37     	 adds r7,r7,#12
 150              	.LCFI15:
 151              	 .cfi_def_cfa_offset 4
 152 001e BD46     	 mov sp,r7
 153              	.LCFI16:
 154              	 .cfi_def_cfa_register 13
 155              	 
 156 0020 5DF8047B 	 ldr r7,[sp],#4
 157              	.LCFI17:
 158              	 .cfi_restore 7
 159              	 .cfi_def_cfa_offset 0
 160 0024 7047     	 bx lr
 161              	 .cfi_endproc
 162              	.LFE168:
 164 0026 00BF     	 .section .text.XMC_CCU8_SLICE_StartTimer,"ax",%progbits
 165              	 .align 2
 166              	 .thumb
 167              	 .thumb_func
 169              	XMC_CCU8_SLICE_StartTimer:
 170              	.LFB172:
1963:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1964:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1965:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1966:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1967:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1968:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1969:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1970:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1971:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1972:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1973:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1974:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1975:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1976:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1977:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1978:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1979:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1980:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1981:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1982:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1983:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1984:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1985:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1986:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1987:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1988:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1989:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1990:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1991:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1992:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1993:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1994:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1995:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1996:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1997:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1998:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1999:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2000:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2001:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2002:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2003:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
2004:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2005:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2006:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
2007:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
2008:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
2009:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2010:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2011:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2012:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2013:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
2014:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2015:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2016:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
2017:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2018:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2019:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2020:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2021:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2022:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2023:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2024:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
2025:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
2026:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
2027:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2028:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2029:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
2030:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2031:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
2032:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 171              	 .loc 1 2032 0
 172              	 .cfi_startproc
 173              	 
 174              	 
 175              	 
 176 0000 80B4     	 push {r7}
 177              	.LCFI18:
 178              	 .cfi_def_cfa_offset 4
 179              	 .cfi_offset 7,-4
 180 0002 83B0     	 sub sp,sp,#12
 181              	.LCFI19:
 182              	 .cfi_def_cfa_offset 16
 183 0004 00AF     	 add r7,sp,#0
 184              	.LCFI20:
 185              	 .cfi_def_cfa_register 7
 186 0006 7860     	 str r0,[r7,#4]
2033:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2034:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
 187              	 .loc 1 2034 0
 188 0008 7B68     	 ldr r3,[r7,#4]
 189 000a 0122     	 movs r2,#1
 190 000c DA60     	 str r2,[r3,#12]
2035:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 191              	 .loc 1 2035 0
 192 000e 0C37     	 adds r7,r7,#12
 193              	.LCFI21:
 194              	 .cfi_def_cfa_offset 4
 195 0010 BD46     	 mov sp,r7
 196              	.LCFI22:
 197              	 .cfi_def_cfa_register 13
 198              	 
 199 0012 5DF8047B 	 ldr r7,[sp],#4
 200              	.LCFI23:
 201              	 .cfi_restore 7
 202              	 .cfi_def_cfa_offset 0
 203 0016 7047     	 bx lr
 204              	 .cfi_endproc
 205              	.LFE172:
 207              	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
 208              	 .align 2
 209              	 .thumb
 210              	 .thumb_func
 212              	XMC_CCU8_SLICE_StopTimer:
 213              	.LFB173:
2036:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2037:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2038:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2039:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2040:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2041:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2042:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2043:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
2044:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
2045:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2046:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2047:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2048:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2049:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
2050:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 214              	 .loc 1 2050 0
 215              	 .cfi_startproc
 216              	 
 217              	 
 218              	 
 219 0000 80B4     	 push {r7}
 220              	.LCFI24:
 221              	 .cfi_def_cfa_offset 4
 222              	 .cfi_offset 7,-4
 223 0002 83B0     	 sub sp,sp,#12
 224              	.LCFI25:
 225              	 .cfi_def_cfa_offset 16
 226 0004 00AF     	 add r7,sp,#0
 227              	.LCFI26:
 228              	 .cfi_def_cfa_register 7
 229 0006 7860     	 str r0,[r7,#4]
2051:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2052:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
 230              	 .loc 1 2052 0
 231 0008 7B68     	 ldr r3,[r7,#4]
 232 000a 0122     	 movs r2,#1
 233 000c 1A61     	 str r2,[r3,#16]
2053:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 234              	 .loc 1 2053 0
 235 000e 0C37     	 adds r7,r7,#12
 236              	.LCFI27:
 237              	 .cfi_def_cfa_offset 4
 238 0010 BD46     	 mov sp,r7
 239              	.LCFI28:
 240              	 .cfi_def_cfa_register 13
 241              	 
 242 0012 5DF8047B 	 ldr r7,[sp],#4
 243              	.LCFI29:
 244              	 .cfi_restore 7
 245              	 .cfi_def_cfa_offset 0
 246 0016 7047     	 bx lr
 247              	 .cfi_endproc
 248              	.LFE173:
 250              	 .section .text.XMC_CCU8_SLICE_ClearTimer,"ax",%progbits
 251              	 .align 2
 252              	 .thumb
 253              	 .thumb_func
 255              	XMC_CCU8_SLICE_ClearTimer:
 256              	.LFB174:
2054:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2055:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2056:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2057:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2058:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2059:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2060:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2061:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
2062:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
2063:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
2064:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2065:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2066:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2067:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2068:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
2069:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 257              	 .loc 1 2069 0
 258              	 .cfi_startproc
 259              	 
 260              	 
 261              	 
 262 0000 80B4     	 push {r7}
 263              	.LCFI30:
 264              	 .cfi_def_cfa_offset 4
 265              	 .cfi_offset 7,-4
 266 0002 83B0     	 sub sp,sp,#12
 267              	.LCFI31:
 268              	 .cfi_def_cfa_offset 16
 269 0004 00AF     	 add r7,sp,#0
 270              	.LCFI32:
 271              	 .cfi_def_cfa_register 7
 272 0006 7860     	 str r0,[r7,#4]
2070:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2071:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
 273              	 .loc 1 2071 0
 274 0008 7B68     	 ldr r3,[r7,#4]
 275 000a 0222     	 movs r2,#2
 276 000c 1A61     	 str r2,[r3,#16]
2072:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 277              	 .loc 1 2072 0
 278 000e 0C37     	 adds r7,r7,#12
 279              	.LCFI33:
 280              	 .cfi_def_cfa_offset 4
 281 0010 BD46     	 mov sp,r7
 282              	.LCFI34:
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 0012 5DF8047B 	 ldr r7,[sp],#4
 286              	.LCFI35:
 287              	 .cfi_restore 7
 288              	 .cfi_def_cfa_offset 0
 289 0016 7047     	 bx lr
 290              	 .cfi_endproc
 291              	.LFE174:
 293              	 .section .text.XMC_CCU8_SLICE_GetTimerPeriodMatch,"ax",%progbits
 294              	 .align 2
 295              	 .thumb
 296              	 .thumb_func
 298              	XMC_CCU8_SLICE_GetTimerPeriodMatch:
 299              	.LFB179:
2073:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2074:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2075:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2076:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2077:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2078:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2079:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2080:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
2081:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2082:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2083:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2084:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2085:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
2086:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2087:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2088:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
2089:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2090:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2091:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2092:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2093:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2094:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
2095:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
2096:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2097:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2098:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
2099:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
2100:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
2101:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
2102:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2103:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2104:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2105:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2106:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
2107:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2108:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2109:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
2110:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2111:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2112:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2113:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2114:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
2115:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2116:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2117:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2118:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2119:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
2120:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
2121:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
2122:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
2123:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2124:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2125:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
2126:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2127:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
2128:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2129:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2130:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2131:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2132:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
2133:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
2134:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2135:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2136:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
2137:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
2138:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
2139:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
2140:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2141:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2142:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
2143:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2144:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
2145:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
2146:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2147:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
2148:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
2149:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2150:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2151:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2152:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
2153:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2154:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2155:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2156:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2157:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
2158:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
2159:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
2160:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
2161:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
2162:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
2163:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2164:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2165:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
2166:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2167:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
2168:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2169:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2170:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2171:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2172:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
2173:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
2174:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2175:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2176:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
2177:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2178:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2179:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
2180:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2181:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
2182:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
2183:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2184:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2185:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
2186:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2187:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2188:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2189:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
2190:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
2191:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2192:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2193:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2194:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2195:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
2196:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
2197:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
2198:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
2199:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
2200:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2201:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2202:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
2203:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2204:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
2205:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2206:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2207:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2208:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2209:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
2210:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2211:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2212:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2213:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
2214:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
2215:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2216:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2217:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
2218:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
2219:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
2220:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2221:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2222:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2223:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
2224:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2225:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
2226:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 300              	 .loc 1 2226 0
 301              	 .cfi_startproc
 302              	 
 303              	 
 304              	 
 305 0000 80B4     	 push {r7}
 306              	.LCFI36:
 307              	 .cfi_def_cfa_offset 4
 308              	 .cfi_offset 7,-4
 309 0002 83B0     	 sub sp,sp,#12
 310              	.LCFI37:
 311              	 .cfi_def_cfa_offset 16
 312 0004 00AF     	 add r7,sp,#0
 313              	.LCFI38:
 314              	 .cfi_def_cfa_register 7
 315 0006 7860     	 str r0,[r7,#4]
2227:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
2228:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
 316              	 .loc 1 2228 0
 317 0008 7B68     	 ldr r3,[r7,#4]
 318 000a 1B6B     	 ldr r3,[r3,#48]
 319 000c 9BB2     	 uxth r3,r3
2229:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 320              	 .loc 1 2229 0
 321 000e 1846     	 mov r0,r3
 322 0010 0C37     	 adds r7,r7,#12
 323              	.LCFI39:
 324              	 .cfi_def_cfa_offset 4
 325 0012 BD46     	 mov sp,r7
 326              	.LCFI40:
 327              	 .cfi_def_cfa_register 13
 328              	 
 329 0014 5DF8047B 	 ldr r7,[sp],#4
 330              	.LCFI41:
 331              	 .cfi_restore 7
 332              	 .cfi_def_cfa_offset 0
 333 0018 7047     	 bx lr
 334              	 .cfi_endproc
 335              	.LFE179:
 337 001a 00BF     	 .section .text.XMC_CCU8_EnableShadowTransfer,"ax",%progbits
 338              	 .align 2
 339              	 .thumb
 340              	 .thumb_func
 342              	XMC_CCU8_EnableShadowTransfer:
 343              	.LFB184:
2230:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2231:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2232:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
2233:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2234:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2235:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2236:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2237:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2238:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
2239:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
2240:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2241:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
2242:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
2243:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
2244:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2245:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2246:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2247:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2248:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
2249:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2250:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
2251:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2252:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2253:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2254:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2255:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2256:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2257:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2258:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2259:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2260:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2261:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2262:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2263:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2264:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2265:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2266:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2267:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2268:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2269:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2270:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2271:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2272:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2273:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2274:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2275:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2276:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2277:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2278:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2279:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2280:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2281:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2282:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2283:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2284:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2285:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2286:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2287:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2288:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2289:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2290:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2291:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2292:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2293:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2294:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2295:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2296:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2297:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2298:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2299:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2300:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2301:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2302:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2303:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2304:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2305:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2306:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2307:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2308:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2309:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2310:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2311:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2312:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2313:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2314:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2315:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2316:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2317:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2318:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2319:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2320:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2321:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2322:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2323:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return 
2324:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2325:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2326:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2327:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR1 register.\n\n
2328:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2329:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2330:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel1().
2331:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2332:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice)
2333:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2334:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2335:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR1;
2336:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2337:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2338:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2339:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2340:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return Timer compare value
2341:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2342:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2343:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2344:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR2 register.\n\n
2345:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2346:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2347:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel2().
2348:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2349:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice)
2350:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2351:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2352:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR2;
2353:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2354:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2355:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2356:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2357:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2358:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2359:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2360:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2361:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2362:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2363:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2364:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2365:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2366:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2367:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2368:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2369:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2370:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2371:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2372:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2373:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2374:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2375:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2376:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2377:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 344              	 .loc 1 2377 0
 345              	 .cfi_startproc
 346              	 
 347              	 
 348              	 
 349 0000 80B4     	 push {r7}
 350              	.LCFI42:
 351              	 .cfi_def_cfa_offset 4
 352              	 .cfi_offset 7,-4
 353 0002 83B0     	 sub sp,sp,#12
 354              	.LCFI43:
 355              	 .cfi_def_cfa_offset 16
 356 0004 00AF     	 add r7,sp,#0
 357              	.LCFI44:
 358              	 .cfi_def_cfa_register 7
 359 0006 7860     	 str r0,[r7,#4]
 360 0008 3960     	 str r1,[r7]
2378:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2379:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
 361              	 .loc 1 2379 0
 362 000a 7B68     	 ldr r3,[r7,#4]
 363 000c 3A68     	 ldr r2,[r7]
 364 000e 1A61     	 str r2,[r3,#16]
2380:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 365              	 .loc 1 2380 0
 366 0010 0C37     	 adds r7,r7,#12
 367              	.LCFI45:
 368              	 .cfi_def_cfa_offset 4
 369 0012 BD46     	 mov sp,r7
 370              	.LCFI46:
 371              	 .cfi_def_cfa_register 13
 372              	 
 373 0014 5DF8047B 	 ldr r7,[sp],#4
 374              	.LCFI47:
 375              	 .cfi_restore 7
 376              	 .cfi_def_cfa_offset 0
 377 0018 7047     	 bx lr
 378              	 .cfi_endproc
 379              	.LFE184:
 381 001a 00BF     	 .section .text.XMC_CCU8_SLICE_GetTimerValue,"ax",%progbits
 382              	 .align 2
 383              	 .thumb
 384              	 .thumb_func
 386              	XMC_CCU8_SLICE_GetTimerValue:
 387              	.LFB185:
2381:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2382:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2383:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2384:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2385:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2386:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2387:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2388:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2389:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2390:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2391:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2392:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2393:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2394:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2395:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 388              	 .loc 1 2395 0
 389              	 .cfi_startproc
 390              	 
 391              	 
 392              	 
 393 0000 80B4     	 push {r7}
 394              	.LCFI48:
 395              	 .cfi_def_cfa_offset 4
 396              	 .cfi_offset 7,-4
 397 0002 83B0     	 sub sp,sp,#12
 398              	.LCFI49:
 399              	 .cfi_def_cfa_offset 16
 400 0004 00AF     	 add r7,sp,#0
 401              	.LCFI50:
 402              	 .cfi_def_cfa_register 7
 403 0006 7860     	 str r0,[r7,#4]
2396:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2397:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
 404              	 .loc 1 2397 0
 405 0008 7B68     	 ldr r3,[r7,#4]
 406 000a 1B6F     	 ldr r3,[r3,#112]
 407 000c 9BB2     	 uxth r3,r3
2398:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 408              	 .loc 1 2398 0
 409 000e 1846     	 mov r0,r3
 410 0010 0C37     	 adds r7,r7,#12
 411              	.LCFI51:
 412              	 .cfi_def_cfa_offset 4
 413 0012 BD46     	 mov sp,r7
 414              	.LCFI52:
 415              	 .cfi_def_cfa_register 13
 416              	 
 417 0014 5DF8047B 	 ldr r7,[sp],#4
 418              	.LCFI53:
 419              	 .cfi_restore 7
 420              	 .cfi_def_cfa_offset 0
 421 0018 7047     	 bx lr
 422              	 .cfi_endproc
 423              	.LFE185:
 425 001a 00BF     	 .section .text.XMC_CCU8_SLICE_EnableEvent,"ax",%progbits
 426              	 .align 2
 427              	 .thumb
 428              	 .thumb_func
 430              	XMC_CCU8_SLICE_EnableEvent:
 431              	.LFB195:
2399:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2400:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2401:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2402:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2403:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2404:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2405:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2406:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2407:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2408:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2409:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2410:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2411:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2412:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2413:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2414:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2415:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2416:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2417:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2418:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2419:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2420:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2421:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2422:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2423:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2424:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2425:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2426:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2427:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2428:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2429:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2430:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2431:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2432:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2433:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2434:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2435:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2436:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2437:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2438:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2439:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2440:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2441:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2442:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2443:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2444:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2445:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2446:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2447:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2448:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2449:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2450:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2451:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2452:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2453:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2454:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2455:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2456:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2457:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2458:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2459:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2460:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2461:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2462:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2463:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2464:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2465:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2466:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2467:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2468:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2469:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2470:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2471:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2472:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2473:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2474:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2475:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2476:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2477:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2478:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2479:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2480:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2481:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2482:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2483:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2484:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2485:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2486:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2487:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2488:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2489:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2490:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2491:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2492:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2493:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2494:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2495:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2496:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2497:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2498:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2499:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2500:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2501:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2502:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2503:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2504:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2505:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2506:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2507:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2508:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2509:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2510:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2511:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2512:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2513:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2514:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2515:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2516:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2517:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2518:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2519:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2520:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2521:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2522:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2523:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2524:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2525:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2526:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2527:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2528:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2529:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2530:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
2531:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2532:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2533:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2534:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2535:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t
2536:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2537:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2538:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2539:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2540:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2541:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider, by configuring the CC8yPSC and CC8yFPC registers.
2542:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
2543:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_StopPrescaler().
2544:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2545:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2546:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue().
2547:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2548:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
2549:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2550:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2551:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2552:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2553:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_PRESCALER_t Prescaler divider value. <BR>
2554:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2555:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2556:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current prescaler value.\n\n
2557:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Used to detrmine the clock frequency of the CCU8 slice XMC_SCU_CLOCK_GetCcuClockFrequency() / XM
2558:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2559:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2560:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2561:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2562:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_PRESCALER_t XMC_CCU8_SLICE_GetPrescaler(XMC_CCU8_SLICE_t *const slic
2563:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2564:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2565:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2566:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (XMC_CCU8_SLICE_PRESCALER_t)slice->PSC;
2567:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2568:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2569:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2570:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2571:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param cmp_val Prescaler divider compare value
2572:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2573:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2574:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2575:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2576:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2577:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC8yFPCS register.\n
2578:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
2579:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
2580:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
2581:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the value, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask.
2582:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2583:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2584:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2585:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2586:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU8_SLICE_t *const slice,
2587:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                      const uint8_t cmp_val)
2588:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2589:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU8_IsVa
2590:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   /* First, write to the shadow register */
2591:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->FPCS = (uint32_t) cmp_val;
2592:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2593:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2594:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2595:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2596:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode is needed.
2597:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2598:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2599:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2600:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2601:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the multichannel mode, by setting CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch_n
2602:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
2603:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
2604:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
2605:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
2606:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
2607:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2608:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2609:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultiChannelMode()<BR>  XMC_CCU8_SetMultiChannelShadowTransferMode().
2610:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2611:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2612:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_COMPARE_CHANNEL_t c
2613:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2614:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2615:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CHA
2616:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2617:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num;
2618:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2619:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2620:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2621:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2622:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode needs to be disabled.
2623:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2624:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2625:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2626:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2627:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the multichannel mode, by clearing CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch
2628:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the slices to the normal operation mode. This takes the slice number as input and
2629:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * configures the multi channel mode for it.
2630:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2631:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2632:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableMultiChannelMode().
2633:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2634:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2635:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                             const XMC_CCU8_SLICE_COMPARE_CHANNEL_t 
2636:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2637:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2638:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CH
2639:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2640:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num);
2641:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2642:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2643:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2644:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2645:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
2646:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Use ::XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
2647:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                             using a bit wise OR operation.
2648:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2649:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2650:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2651:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2652:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
2653:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
2654:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU8x.MCSS
2655:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2656:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2657:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2658:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** */
2659:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
2660:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2661:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2662:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2663:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
2664:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                Range: [0,3]
2665:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2666:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t  Returns the Capture register value.
2667:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *              Range: [0 to 0x1FFFFF]
2668:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2669:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2670:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC8yCV[\b reg
2671:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
2672:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
2673:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
2674:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to find out if there is a new captured value present.
2675:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2676:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2677:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetLastCapturedTimerValue().
2678:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2679:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
2680:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2681:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2682:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2683:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set  The capture register set, which must be evaluated
2684:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
2685:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2686:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_STATUS_t Returns XMC_CCU8_STATUS_OK if there was new value present in the capture re
2687:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   returns XMC_CCU8_STATUS_ERROR if there was no new value present in the capture
2688:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2689:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2690:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest captured timer value, by reading CC8yCV registers.\n\n
2691:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
2692:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 8 capt
2693:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * evaluated.\n
2694:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
2695:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * capture registers have been evaluated.
2696:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2697:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2698:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetCaptureregisterValue().
2699:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2700:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
2701:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
2702:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            uint32_t *val_ptr);
2703:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2704:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2705:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2706:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2707:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2708:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2709:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2710:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2711:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC8yINTE register.\n\
2712:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2713:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2714:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2715:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2716:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableMultipleEvents()<BR>  XMC_CCU8_SLIC
2717:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2718:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2719:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE
2720:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 432              	 .loc 1 2720 0
 433              	 .cfi_startproc
 434              	 
 435              	 
 436              	 
 437 0000 80B4     	 push {r7}
 438              	.LCFI54:
 439              	 .cfi_def_cfa_offset 4
 440              	 .cfi_offset 7,-4
 441 0002 83B0     	 sub sp,sp,#12
 442              	.LCFI55:
 443              	 .cfi_def_cfa_offset 16
 444 0004 00AF     	 add r7,sp,#0
 445              	.LCFI56:
 446              	 .cfi_def_cfa_register 7
 447 0006 7860     	 str r0,[r7,#4]
 448 0008 0B46     	 mov r3,r1
 449 000a FB70     	 strb r3,[r7,#3]
2721:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2722:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2723:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2724:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 450              	 .loc 1 2724 0
 451 000c 7B68     	 ldr r3,[r7,#4]
 452 000e D3F8A420 	 ldr r2,[r3,#164]
 453 0012 FB78     	 ldrb r3,[r7,#3]
 454 0014 0121     	 movs r1,#1
 455 0016 01FA03F3 	 lsl r3,r1,r3
 456 001a 1A43     	 orrs r2,r2,r3
 457 001c 7B68     	 ldr r3,[r7,#4]
 458 001e C3F8A420 	 str r2,[r3,#164]
2725:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 459              	 .loc 1 2725 0
 460 0022 0C37     	 adds r7,r7,#12
 461              	.LCFI57:
 462              	 .cfi_def_cfa_offset 4
 463 0024 BD46     	 mov sp,r7
 464              	.LCFI58:
 465              	 .cfi_def_cfa_register 13
 466              	 
 467 0026 5DF8047B 	 ldr r7,[sp],#4
 468              	.LCFI59:
 469              	 .cfi_restore 7
 470              	 .cfi_def_cfa_offset 0
 471 002a 7047     	 bx lr
 472              	 .cfi_endproc
 473              	.LFE195:
 475              	 .section .text.XMC_CCU8_SLICE_ClearEvent,"ax",%progbits
 476              	 .align 2
 477              	 .thumb
 478              	 .thumb_func
 480              	XMC_CCU8_SLICE_ClearEvent:
 481              	.LFB200:
2726:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2727:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2728:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2729:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2730:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2731:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  using a bit wise OR operation.
2732:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2733:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2734:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2735:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2736:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC8yINTE re
2737:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2738:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
2739:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2740:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2741:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_Disable
2742:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2743:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2744:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint1
2745:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2746:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2747:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE = (uint32_t) mask;
2748:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2749:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2750:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2751:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2752:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2753:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2754:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2755:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2756:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2757:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC8yINTE register.\n\n
2758:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Prevents the event from being asserted.
2759:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2760:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2761:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2762:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2763:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2764:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLIC
2765:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2766:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2767:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event))
2768:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2769:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
2770:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2771:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2772:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2773:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2774:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2775:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2776:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             using a bit wise OR operation.
2777:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2778:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2779:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2780:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2781:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC8yINTE reg
2782:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prevents selected events of the slice from being asserted.
2783:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2784:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2785:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2786:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableEvent().
2787:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2788:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint
2789:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2790:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2791:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~((uint32_t) mask);
2792:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2793:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2794:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2795:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2796:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2797:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2798:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2799:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2800:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2801:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Manually asserts the requested event, by setting CC8ySWS register.\n\n
2802:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2803:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
2804:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2805:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2806:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2807:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2808:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_IR
2809:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2810:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2811:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2812:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2813:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWS = ((uint32_t) 1) << ((uint32_t) event);
2814:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2815:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2816:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2817:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2818:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Asserted event which must be acknowledged.
2819:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2820:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2821:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2822:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2823:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Acknowledges an asserted event, by setting CC8ySWR with respective event flag.\n\n
2824:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2825:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2826:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent()<BR>  XMC_CCU8_SLICE_GetEvent().
2827:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2828:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2829:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_
2830:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 482              	 .loc 1 2830 0
 483              	 .cfi_startproc
 484              	 
 485              	 
 486              	 
 487 0000 80B4     	 push {r7}
 488              	.LCFI60:
 489              	 .cfi_def_cfa_offset 4
 490              	 .cfi_offset 7,-4
 491 0002 83B0     	 sub sp,sp,#12
 492              	.LCFI61:
 493              	 .cfi_def_cfa_offset 16
 494 0004 00AF     	 add r7,sp,#0
 495              	.LCFI62:
 496              	 .cfi_def_cfa_register 7
 497 0006 7860     	 str r0,[r7,#4]
 498 0008 0B46     	 mov r3,r1
 499 000a FB70     	 strb r3,[r7,#3]
2831:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2832:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2833:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWR = ((uint32_t) 1) << ((uint32_t) event);
 500              	 .loc 1 2833 0
 501 000c FB78     	 ldrb r3,[r7,#3]
 502 000e 0122     	 movs r2,#1
 503 0010 9A40     	 lsls r2,r2,r3
 504 0012 7B68     	 ldr r3,[r7,#4]
 505 0014 C3F8B020 	 str r2,[r3,#176]
2834:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 506              	 .loc 1 2834 0
 507 0018 0C37     	 adds r7,r7,#12
 508              	.LCFI63:
 509              	 .cfi_def_cfa_offset 4
 510 001a BD46     	 mov sp,r7
 511              	.LCFI64:
 512              	 .cfi_def_cfa_register 13
 513              	 
 514 001c 5DF8047B 	 ldr r7,[sp],#4
 515              	.LCFI65:
 516              	 .cfi_restore 7
 517              	 .cfi_def_cfa_offset 0
 518 0020 7047     	 bx lr
 519              	 .cfi_endproc
 520              	.LFE200:
 522 0022 00BF     	 .section .text.XMC_CCU8_SLICE_GetEvent,"ax",%progbits
 523              	 .align 2
 524              	 .thumb
 525              	 .thumb_func
 527              	XMC_CCU8_SLICE_GetEvent:
 528              	.LFB201:
2835:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2836:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2837:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2838:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event to be evaluated for assertion
2839:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2840:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *         bool  Returns true if event is set else false is returned.
2841:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2842:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2843:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Evaluates if a given event is asserted or not, by reading CC8yINTS register.\n\n
2844:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Return true if the event is asserted. For a event to be asserted it has to be
2845:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * first enabled. Only if that event is enabled the call to this API is valid.
2846:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the Event is enabled and has not yet occurred then a false is returned.
2847:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2848:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2849:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2850:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2851:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_GetEvent(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SL
2852:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 529              	 .loc 1 2852 0
 530              	 .cfi_startproc
 531              	 
 532              	 
 533              	 
 534 0000 80B4     	 push {r7}
 535              	.LCFI66:
 536              	 .cfi_def_cfa_offset 4
 537              	 .cfi_offset 7,-4
 538 0002 83B0     	 sub sp,sp,#12
 539              	.LCFI67:
 540              	 .cfi_def_cfa_offset 16
 541 0004 00AF     	 add r7,sp,#0
 542              	.LCFI68:
 543              	 .cfi_def_cfa_register 7
 544 0006 7860     	 str r0,[r7,#4]
 545 0008 0B46     	 mov r3,r1
 546 000a FB70     	 strb r3,[r7,#3]
2853:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2854:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2855:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(((uint32_t)(slice->INTS & ((uint32_t)1 << event))) != 0U);
 547              	 .loc 1 2855 0
 548 000c 7B68     	 ldr r3,[r7,#4]
 549 000e D3F8A020 	 ldr r2,[r3,#160]
 550 0012 FB78     	 ldrb r3,[r7,#3]
 551 0014 22FA03F3 	 lsr r3,r2,r3
 552 0018 03F00103 	 and r3,r3,#1
 553 001c 002B     	 cmp r3,#0
 554 001e 14BF     	 ite ne
 555 0020 0123     	 movne r3,#1
 556 0022 0023     	 moveq r3,#0
 557 0024 DBB2     	 uxtb r3,r3
2856:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   }
 558              	 .loc 1 2856 0
 559 0026 1846     	 mov r0,r3
 560 0028 0C37     	 adds r7,r7,#12
 561              	.LCFI69:
 562              	 .cfi_def_cfa_offset 4
 563 002a BD46     	 mov sp,r7
 564              	.LCFI70:
 565              	 .cfi_def_cfa_register 13
 566              	 
 567 002c 5DF8047B 	 ldr r7,[sp],#4
 568              	.LCFI71:
 569              	 .cfi_restore 7
 570              	 .cfi_def_cfa_offset 0
 571 0030 7047     	 bx lr
 572              	 .cfi_endproc
 573              	.LFE201:
 575 0032 00BF     	 .section .text.XMC_CCU8_SLICE_SetShadowTransferMode,"ax",%progbits
 576              	 .align 2
 577              	 .thumb
 578              	 .thumb_func
 580              	XMC_CCU8_SLICE_SetShadowTransferMode:
 581              	.LFB206:
2857:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2858:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2859:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2860:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event which must be bound to a service request line
2861:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param sr The Service request line which is bound to the \b event
2862:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2863:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2864:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2865:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2866:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Binds requested event to a service request line, by configuring CC8ySRS register with respective
2867:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2868:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API binds the requested event with the requested service
2869:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2870:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2871:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2872:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2873:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2874:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
2875:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
2876:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_SR_ID_t sr);
2877:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2878:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2879:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2880:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out Output signal for which the passive level needs to be set.
2881:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param level Output passive level for the \b out signal
2882:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2883:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2884:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2885:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2886:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the passive level for the slice output, by setting CC8yPSL register.\n\n
2887:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Defines the passive level for the timer slice output pin. Selects either level high is passive
2888:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * or level low is passive. This is the level of the output before the compare match is value chang
2889:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2890:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2891:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2892:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2893:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
2894:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
2895:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level);
2896:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2897:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2898:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2899:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to dead time configuration data
2900:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2901:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2902:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2903:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2904:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initializes Dead time configuration for the slice outputs, by configuring CC8yDC1R, CC8yDC2R, CC
2905:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This routine programs dead time delays (rising & falling) and dead time clock prescaler.
2906:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the choice of dead time for channel1, channel2, ST1, Inverted ST1, ST2, Inverted
2907:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * programmed by this routine.
2908:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2909:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2910:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureDeadTime()<BR>  XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_S
2911:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2912:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2913:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
2914:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config);
2915:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2916:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2917:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2918:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2919:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2920:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2921:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2922:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in asymmetric compare mode, by setting CC8yCHC.ASE bit.\n\n
2923:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In asymmetric compare mode, the compare channels 1 & 2 are grouped to generate the PWM.This woul
2924:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generate an inverted PWM at OUT0 & OUT1.
2925:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Edge Aligned mode (counting up), the Status bit is set when a compare match of
2926:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Compare channel-1 occurs and cleared when a compare match event of Compare channel-2 occurs.\n
2927:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Center Aligned mode, the status bit is set when a compare match event of Compare channel-1 oc
2928:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * counting up and cleared when a compare match event of Compare channel-2 occurs while counting do
2929:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2930:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2931:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * External count direction function is enabled then the asymmetric mode of operation is not possib
2932:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2933:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2934:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableSymmetricCompareMode()<BR> 
2935:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2936:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableAsymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2937:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2938:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableAsymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSl
2939:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC |= (uint32_t) CCU8_CC8_CHC_ASE_Msk;
2940:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2941:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2942:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2943:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2944:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2945:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2946:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2947:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2948:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in symmetric(standard) compare mode, by clearing CC8yCHC.AS
2949:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In symmetric compare mode, the compare channels 1 & 2 are independent of each other & each chann
2950:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * PWM & inverted PWM at OUT0, OUT1, OUT2 & OUT3.
2951:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2952:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2953:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableAsymmetricCompareMode().
2954:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2955:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableSymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2956:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2957:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableSymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSli
2958:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC &= ~((uint32_t) CCU8_CC8_CHC_ASE_Msk);
2959:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2960:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2961:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2962:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2963:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask The Dead Time configuration mask.
2964:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Do a bitwise OR operation on the following values depending on the need.
2965:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x1:  Dead Time Enable for Compare Channel 1
2966:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x2:  Dead Time Enable for Compare Channel 2
2967:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x4:  Dead Time Enable for CC8yST1 path is enabled.
2968:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x8:  Dead Time Enable for Inverted CC8yST1 path is enabled.
2969:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x10: Dead Time Enable for CC8yST2 path is enabled.
2970:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x20: Dead Time Enable for Inverted CC8yST2 path is enabled.
2971:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0x3F]
2972:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2973:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2974:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Activates or deactivates dead time for compare channel and ST path, by configuring CC8y.DC1R, CC
2975:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8y.DTC registers.\n\n
2976:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Use the provided masks to enable/disable the dead time for the compare channels and the ST signa
2977:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to deactivate the dead time for all the options by passing a 0x0 as the mask.
2978:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the choice of dead time for channel1, channel2, ST1, Inverted ST1, ST2, Inverted
2979:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * programmed by this routine.
2980:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2981:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2982:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DeadTimeInit()<BR> XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_SetDead
2983:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2984:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2985:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureDeadTime(XMC_CCU8_SLICE_t *const slice, const uint8_t mask);
2986:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2987:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2988:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2989:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Compare channel number
2990:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param rise_value Programs rising edge delay
2991:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0xFF]
2992:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param fall_value Programs falling edge delay
2993:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0xFF]
2994:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2995:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2996:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2997:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2998:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the dead time for rising and falling edges, by updating CC8y.DC1R, CC8y.DC1R register
2999:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will Configure the delay that is need either when the value changes from 0 to 1 (rising
3000:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * value changes from 1 to 0(falling edge). Directly accessed registers are CC8yDC1R, CC8yDC2R.
3001:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3002:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
3003:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DeadTimeInit()<BR> XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_Configu
3004:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
3005:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
3006:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetDeadTimeValue(XMC_CCU8_SLICE_t *const slice,
3007:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
3008:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const uint8_t rise_value,
3009:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const uint8_t fall_value);
3010:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
3011:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
3012:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
3013:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param div_val    Prescaler divider value
3014:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
3015:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
3016:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3017:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
3018:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures clock division factor for dead time generator, by configuring CC8yDTC.DTCC bit. 
3019:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The Clock divider works on the timer clock. It is possible to scale the timer clock for the dead
3020:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generator by a factor of 1/2/4/8. This selection is passed as an argument to the API.
3021:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3022:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
3023:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DeadTimeInit()<BR> XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_Configu
3024:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
3025:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
3026:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetDeadTimePrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_DTC_DI
3027:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
3028:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
3029:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
3030:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel which channel status has to be give as out
3031:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
3032:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
3033:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3034:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
3035:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures status ST1, ST2 mapping to STy, by configuring CC8yTC.STOS bits.\n\n
3036:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This routine defines the output STy as a function of ST1 or ST2 or both ST1 & ST2.
3037:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to make the CCU8x.STy signal to reflect the CC8y.ST1/CC8y.ST2 or a function of th
3038:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3039:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
3040:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
3041:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
3042:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOutput(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_ST
3043:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
3044:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
3045:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
3046:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
3047:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3048:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
3049:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
3050:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3051:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
3052:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Cascades the shadow transfer operation throughout the CCU8 timer slices, by setting CSE bit in S
3053:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3054:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The shadow transfer enable bits needs to be set in all timer slices, that are being used in the 
3055:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * at the same time. The shadow transfer enable bits, also need to be set for all slices even if th
3056:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * some slices were not updated. It is possible to to cascade with the adjacent slices only. CC80 s
3057:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * master to start the operation.
3058:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
3059:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
3060:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() must be called to enable the shadow transfer of the all the slic
3061:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * cascaded.
3062:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
3063:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
3064:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfer()<BR>.
3065:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series 
3066:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
3067:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableCascadedShadowTransfer(XMC_CCU8_SLICE_t *const slice)
3068:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
3069:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableCascadedShadowTransfer:Invalid Slice Pointer", XMC_CCU8_IsValidS
3070:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->STC |= (uint32_t) CCU8_CC8_STC_CSE_Msk;
3071:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
3072:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
3073:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
3074:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
3075:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3076:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
3077:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
3078:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3079:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
3080:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the cascaded the shadow transfer operation, by clearing CSE bit in STC register.\n\n
3081:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3082:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If in any slice the cascaded mode disabled, other slices from there onwards does not update the 
3083:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
3084:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
3085:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableCascadedShadowTransfer()<BR>.
3086:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series 
3087:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
3088:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableCascadedShadowTransfer(XMC_CCU8_SLICE_t *const slice)
3089:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
3090:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableCascadedShadowTransfer:Invalid Slice Pointer", XMC_CCU8_IsValid
3091:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->STC &= ~(uint32_t) CCU8_CC8_STC_CSE_Msk;
3092:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
3093:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** 
3094:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
3095:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
3096:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_mode mode to be configured
3097:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Use :: XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t enum items for mode
3098:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
3099:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
3100:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3101:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
3102:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures when the shadow transfer has to occur, by setting STM bit in STC register.\n\n
3103:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
3104:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After requesting for shadow transfer mode using XMC_CCU8_EnableShadowTransfer(), actual transfer
3105:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * selection done using this API (i.e. on period and One match, on Period match only, on One match 
3106:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3107:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
3108:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is effective when the timer is configured in centre aligned mode.
3109:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
3110:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
3111:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer()<BR>
3112:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series 
3113:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
3114:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetShadowTransferMode(XMC_CCU8_SLICE_t *const slice,
3115:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                           const XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
3116:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 582              	 .loc 1 3116 0
 583              	 .cfi_startproc
 584              	 
 585              	 
 586              	 
 587 0000 80B4     	 push {r7}
 588              	.LCFI72:
 589              	 .cfi_def_cfa_offset 4
 590              	 .cfi_offset 7,-4
 591 0002 83B0     	 sub sp,sp,#12
 592              	.LCFI73:
 593              	 .cfi_def_cfa_offset 16
 594 0004 00AF     	 add r7,sp,#0
 595              	.LCFI74:
 596              	 .cfi_def_cfa_register 7
 597 0006 7860     	 str r0,[r7,#4]
 598 0008 0B46     	 mov r3,r1
 599 000a FB70     	 strb r3,[r7,#3]
3117:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetShadowTransferMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
3118:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->STC = ((slice->STC) & (uint32_t)~CCU8_CC8_STC_STM_Msk) |
 600              	 .loc 1 3118 0
 601 000c 7B68     	 ldr r3,[r7,#4]
 602 000e D3F8B430 	 ldr r3,[r3,#180]
 603 0012 23F00602 	 bic r2,r3,#6
3119:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                ((shadow_transfer_mode << CCU8_CC8_STC_STM_Pos) & (uint32_t)CCU8_CC8_STC_STM_Msk);
 604              	 .loc 1 3119 0
 605 0016 FB78     	 ldrb r3,[r7,#3]
 606 0018 5B00     	 lsls r3,r3,#1
 607 001a 03F00603 	 and r3,r3,#6
3118:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h ****                ((shadow_transfer_mode << CCU8_CC8_STC_STM_Pos) & (uint32_t)CCU8_CC8_STC_STM_Msk);
 608              	 .loc 1 3118 0
 609 001e 1A43     	 orrs r2,r2,r3
 610 0020 7B68     	 ldr r3,[r7,#4]
 611 0022 C3F8B420 	 str r2,[r3,#180]
3120:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 612              	 .loc 1 3120 0
 613 0026 0C37     	 adds r7,r7,#12
 614              	.LCFI75:
 615              	 .cfi_def_cfa_offset 4
 616 0028 BD46     	 mov sp,r7
 617              	.LCFI76:
 618              	 .cfi_def_cfa_register 13
 619              	 
 620 002a 5DF8047B 	 ldr r7,[sp],#4
 621              	.LCFI77:
 622              	 .cfi_restore 7
 623              	 .cfi_def_cfa_offset 0
 624 002e 7047     	 bx lr
 625              	 .cfi_endproc
 626              	.LFE206:
 628              	 .section .text.PWM_CCU8_GetAppVersion,"ax",%progbits
 629              	 .align 2
 630              	 .global PWM_CCU8_GetAppVersion
 631              	 .thumb
 632              	 .thumb_func
 634              	PWM_CCU8_GetAppVersion:
 635              	.LFB248:
 636              	 .file 2 "../Dave/Generated/PWM_CCU8/pwm_ccu8.c"
   1:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**
   2:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @file pwm_ccu8.c
   3:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @date 2019-09-23
   4:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
   5:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * NOTE:
   6:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
   8:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @cond
   9:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  10:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * PWM_CCU8 v4.1.30 - PWM APP using one timer slice of CCU8, with external events and dead time sup
  11:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *                   to generate up to 4 PWM outputs.
  12:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  13:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * Copyright (c) 2015 - 2019, Infineon Technologies AG
  14:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * All rights reserved.
  15:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  16:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * following conditions are met:
  18:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  19:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   disclaimer.
  21:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  22:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   disclaimer in the documentation and/or other materials provided with the distribution.
  24:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  25:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  28:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  36:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  39:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  40:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * Change History
  41:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * --------------
  42:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  43:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-02-14:
  44:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Initial version for DAVEv4
  45:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  46:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-05-20:
  47:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - PWM_CCU8_AcknowledgeInterrupt() api is renamed as PWM_CCU8_ClearEvent().
  48:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  49:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-06-20:
  50:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Copyright information updated.
  51:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  52:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-08-13:
  53:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for selection of compare channel in external load event using API "XMC_CCU8_
  54:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for selection of shadow transfer mode using API "XMC_CCU8_SLICE_SetShadowTra
  55:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for selection of immediate shadow transfer using
  56:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *       API "XMC_CCU8_SLICE_WriteImmediateAfterShadowTransfer" in XMC14* devices
  57:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for automatic shadow transfer using
  58:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *       API "XMC_CCU8_SLICE_EnableAutomaticShadowTransferRequest" in XMC14* devices
  59:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  60:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2016-03-21:
  61:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Bug Fix: Trap enable configuration is corrected in PWM_CCU8_lConfigure_Events() API.
  62:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  63:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2016-10-28:
  64:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Changed PWM_CCU8_Stop() to set the ST output to the passive value after stopping the timer
  65:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  66:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2019-09-23:
  67:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Fixed escaping of '%' in XMC_DEBUG()
  68:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  69:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @endcond
  70:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  71:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  */
  72:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  73:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  74:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * HEADER FILES
  75:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  76:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #include "pwm_ccu8.h"
  77:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  78:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  79:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * PRIVATE FUNCTION PROTOTYPES
  80:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  81:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* Initialize the App Interrupts */
  82:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_Interrupt(PWM_CCU8_t* handle_ptr);
  83:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  84:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* Initialize the App events and configurations */
  85:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lConfigure_Events(PWM_CCU8_t* handle_ptr);
  86:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  87:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* Initialize the App pin configurations */
  88:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_GPIO(PWM_CCU8_t* handle_ptr);
  89:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  90:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  91:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * MACROS
  92:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  93:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  94:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  95:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * LOCAL DATA
  96:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  97:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  98:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  99:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * LOCAL ROUTINES
 100:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
 101:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 102:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 103:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * API IMPLEMENTATION
 104:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
 105:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 106:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* API to retrieve App version info */
 107:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** DAVE_APP_VERSION_t PWM_CCU8_GetAppVersion(void)
 108:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 637              	 .loc 2 108 0
 638              	 .cfi_startproc
 639              	 
 640              	 
 641              	 
 642 0000 80B4     	 push {r7}
 643              	.LCFI78:
 644              	 .cfi_def_cfa_offset 4
 645              	 .cfi_offset 7,-4
 646 0002 83B0     	 sub sp,sp,#12
 647              	.LCFI79:
 648              	 .cfi_def_cfa_offset 16
 649 0004 00AF     	 add r7,sp,#0
 650              	.LCFI80:
 651              	 .cfi_def_cfa_register 7
 109:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   DAVE_APP_VERSION_t version;
 110:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 111:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   version.major = PWM_CCU8_MAJOR_VERSION;
 652              	 .loc 2 111 0
 653 0006 0423     	 movs r3,#4
 654 0008 3B70     	 strb r3,[r7]
 112:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   version.minor = PWM_CCU8_MINOR_VERSION;
 655              	 .loc 2 112 0
 656 000a 0123     	 movs r3,#1
 657 000c 7B70     	 strb r3,[r7,#1]
 113:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   version.patch = PWM_CCU8_PATCH_VERSION;
 658              	 .loc 2 113 0
 659 000e 1E23     	 movs r3,#30
 660 0010 BB70     	 strb r3,[r7,#2]
 114:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 115:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return version;
 661              	 .loc 2 115 0
 662 0012 3B1D     	 adds r3,r7,#4
 663 0014 3A46     	 mov r2,r7
 664 0016 1268     	 ldr r2,[r2]
 665 0018 1146     	 mov r1,r2
 666 001a 1980     	 strh r1,[r3]
 667 001c 0233     	 adds r3,r3,#2
 668 001e 120C     	 lsrs r2,r2,#16
 669 0020 1A70     	 strb r2,[r3]
 670 0022 0023     	 movs r3,#0
 671 0024 3A79     	 ldrb r2,[r7,#4]
 672 0026 62F30703 	 bfi r3,r2,#0,#8
 673 002a 7A79     	 ldrb r2,[r7,#5]
 674 002c 62F30F23 	 bfi r3,r2,#8,#8
 675 0030 BA79     	 ldrb r2,[r7,#6]
 676 0032 62F31743 	 bfi r3,r2,#16,#8
 116:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 677              	 .loc 2 116 0
 678 0036 1846     	 mov r0,r3
 679 0038 0C37     	 adds r7,r7,#12
 680              	.LCFI81:
 681              	 .cfi_def_cfa_offset 4
 682 003a BD46     	 mov sp,r7
 683              	.LCFI82:
 684              	 .cfi_def_cfa_register 13
 685              	 
 686 003c 5DF8047B 	 ldr r7,[sp],#4
 687              	.LCFI83:
 688              	 .cfi_restore 7
 689              	 .cfi_def_cfa_offset 0
 690 0040 7047     	 bx lr
 691              	 .cfi_endproc
 692              	.LFE248:
 694 0042 00BF     	 .section .text.PWM_CCU8_Init,"ax",%progbits
 695              	 .align 2
 696              	 .global PWM_CCU8_Init
 697              	 .thumb
 698              	 .thumb_func
 700              	PWM_CCU8_Init:
 701              	.LFB249:
 117:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 118:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* This function initializes the app */
 119:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_Init(PWM_CCU8_t* handle_ptr)
 120:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 702              	 .loc 2 120 0
 703              	 .cfi_startproc
 704              	 
 705              	 
 706 0000 80B5     	 push {r7,lr}
 707              	.LCFI84:
 708              	 .cfi_def_cfa_offset 8
 709              	 .cfi_offset 7,-8
 710              	 .cfi_offset 14,-4
 711 0002 86B0     	 sub sp,sp,#24
 712              	.LCFI85:
 713              	 .cfi_def_cfa_offset 32
 714 0004 00AF     	 add r7,sp,#0
 715              	.LCFI86:
 716              	 .cfi_def_cfa_register 7
 717 0006 7860     	 str r0,[r7,#4]
 121:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 122:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   GLOBAL_CCU8_STATUS_t status_ccu8_global;
 123:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_module;
 124:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t prescalar;
 125:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 126:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 718              	 .loc 2 126 0
 719 0008 0123     	 movs r3,#1
 720 000a FB75     	 strb r3,[r7,#23]
 127:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status_ccu8_global = GLOBAL_CCU8_STATUS_FAILURE;
 721              	 .loc 2 127 0
 722 000c 0123     	 movs r3,#1
 723 000e BB75     	 strb r3,[r7,#22]
 128:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_Init:handle_ptr is NULL", (handle_ptr != NULL));
 129:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 130:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED == handle_ptr->state)
 724              	 .loc 2 130 0
 725 0010 7B68     	 ldr r3,[r7,#4]
 726 0012 1B7F     	 ldrb r3,[r3,#28]
 727 0014 002B     	 cmp r3,#0
 728 0016 40F0A480 	 bne .L21
 131:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 132:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* Initialize consumed Apps */
 133:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status_ccu8_global = GLOBAL_CCU8_Init(handle_ptr->config_ptr->global_ccu8_handle);
 729              	 .loc 2 133 0
 730 001a 7B68     	 ldr r3,[r7,#4]
 731 001c 1B68     	 ldr r3,[r3]
 732 001e D3F88C30 	 ldr r3,[r3,#140]
 733 0022 1846     	 mov r0,r3
 734 0024 FFF7FEFF 	 bl GLOBAL_CCU8_Init
 735 0028 0346     	 mov r3,r0
 736 002a BB75     	 strb r3,[r7,#22]
 134:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 135:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* Initialize CCU8x_CC8y slice */
 136:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (GLOBAL_CCU8_STATUS_SUCCESS == status_ccu8_global)
 737              	 .loc 2 136 0
 738 002c BB7D     	 ldrb r3,[r7,#22]
 739 002e 002B     	 cmp r3,#0
 740 0030 40F09380 	 bne .L22
 137:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 138:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_Init:Initilizing slice");
 139:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 140:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Configure CCU8x_CC8y slice as timer */
 141:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_CompareInit(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ccu8_cc8_slice
 741              	 .loc 2 141 0
 742 0034 7B68     	 ldr r3,[r7,#4]
 743 0036 9A68     	 ldr r2,[r3,#8]
 744 0038 7B68     	 ldr r3,[r7,#4]
 745 003a 1B68     	 ldr r3,[r3]
 746 003c 9B6C     	 ldr r3,[r3,#72]
 747 003e 1046     	 mov r0,r2
 748 0040 1946     	 mov r1,r3
 749 0042 FFF7FEFF 	 bl XMC_CCU8_SLICE_CompareInit
 142:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Set period match value of the timer  */
 143:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->period
 750              	 .loc 2 143 0
 751 0046 7B68     	 ldr r3,[r7,#4]
 752 0048 9A68     	 ldr r2,[r3,#8]
 753 004a 7B68     	 ldr r3,[r7,#4]
 754 004c 1B68     	 ldr r3,[r3]
 755 004e 5B88     	 ldrh r3,[r3,#2]
 756 0050 1046     	 mov r0,r2
 757 0052 1946     	 mov r1,r3
 758 0054 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 144:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 145:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Set timer compare match value for channel 1 */
 146:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 759              	 .loc 2 146 0
 760 0058 7B68     	 ldr r3,[r7,#4]
 761 005a 9A68     	 ldr r2,[r3,#8]
 147:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare1_value);
 762              	 .loc 2 147 0
 763 005c 7B68     	 ldr r3,[r7,#4]
 764 005e 1B68     	 ldr r3,[r3]
 146:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare1_value);
 765              	 .loc 2 146 0
 766 0060 9B88     	 ldrh r3,[r3,#4]
 767 0062 1046     	 mov r0,r2
 768 0064 0021     	 movs r1,#0
 769 0066 1A46     	 mov r2,r3
 770 0068 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 148:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Set timer compare match value for channel 2 */
 149:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 771              	 .loc 2 149 0
 772 006c 7B68     	 ldr r3,[r7,#4]
 773 006e 9A68     	 ldr r2,[r3,#8]
 150:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare2_value);
 774              	 .loc 2 150 0
 775 0070 7B68     	 ldr r3,[r7,#4]
 776 0072 1B68     	 ldr r3,[r3]
 149:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare2_value);
 777              	 .loc 2 149 0
 778 0074 DB88     	 ldrh r3,[r3,#6]
 779 0076 1046     	 mov r0,r2
 780 0078 0121     	 movs r1,#1
 781 007a 1A46     	 mov r2,r3
 782 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 151:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 152:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((1U == handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->mcm_ch1_enable) || (1U
 783              	 .loc 2 152 0
 784 0080 7B68     	 ldr r3,[r7,#4]
 785 0082 1B68     	 ldr r3,[r3]
 786 0084 9B6C     	 ldr r3,[r3,#72]
 787 0086 DB78     	 ldrb r3,[r3,#3]
 788 0088 03F00203 	 and r3,r3,#2
 789 008c DBB2     	 uxtb r3,r3
 790 008e 002B     	 cmp r3,#0
 791 0090 08D1     	 bne .L23
 153:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           == handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->mcm_ch2_enable))
 792              	 .loc 2 153 0 discriminator 1
 793 0092 7B68     	 ldr r3,[r7,#4]
 794 0094 1B68     	 ldr r3,[r3]
 795 0096 9B6C     	 ldr r3,[r3,#72]
 796 0098 DB78     	 ldrb r3,[r3,#3]
 797 009a 03F00403 	 and r3,r3,#4
 798 009e DBB2     	 uxtb r3,r3
 152:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           == handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->mcm_ch2_enable))
 799              	 .loc 2 152 0 discriminator 1
 800 00a0 002B     	 cmp r3,#0
 801 00a2 08D0     	 beq .L24
 802              	.L23:
 154:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 155:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SetMultiChannelShadowTransferMode(handle_ptr->ccu8_module_ptr,
 803              	 .loc 2 155 0
 804 00a4 7B68     	 ldr r3,[r7,#4]
 805 00a6 5A68     	 ldr r2,[r3,#4]
 156:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    (uint32_t) handle_ptr->config_ptr->mcm_shadow_tx
 806              	 .loc 2 156 0
 807 00a8 7B68     	 ldr r3,[r7,#4]
 808 00aa 1B68     	 ldr r3,[r3]
 809 00ac DB6B     	 ldr r3,[r3,#60]
 155:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    (uint32_t) handle_ptr->config_ptr->mcm_shadow_tx
 810              	 .loc 2 155 0
 811 00ae 1046     	 mov r0,r2
 812 00b0 1946     	 mov r1,r3
 813 00b2 FFF7FEFF 	 bl XMC_CCU8_SetMultiChannelShadowTransferMode
 814              	.L24:
 157:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 158:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 159:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #if (UC_SERIES != XMC45) /*STC register not available on XMC45xx devices */
 160:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetShadowTransferMode(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->shad
 815              	 .loc 2 160 0
 816 00b6 7B68     	 ldr r3,[r7,#4]
 817 00b8 9A68     	 ldr r2,[r3,#8]
 818 00ba 7B68     	 ldr r3,[r7,#4]
 819 00bc 1B68     	 ldr r3,[r3]
 820 00be 93F84430 	 ldrb r3,[r3,#68]
 821 00c2 1046     	 mov r0,r2
 822 00c4 1946     	 mov r1,r3
 823 00c6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetShadowTransferMode
 161:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #endif
 162:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 163:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #if (UC_SERIES == XMC14) /*below feature available in XMC14xx devices */
 164:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_WriteImmediateAfterShadowTransfer(handle_ptr->ccu8_slice_ptr,
 165:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                        handle_ptr->config_ptr->immediate_write);
 166:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_EnableAutomaticShadowTransferRequest(handle_ptr->ccu8_slice_ptr,
 167:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                           handle_ptr->config_ptr->automatic_shadow_
 168:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if((bool)true == handle_ptr->config_ptr->cascaded_shadow_txfr_enable)
 169:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 170:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_EnableCascadedShadowTransfer(handle_ptr->ccu8_slice_ptr);
 171:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 172:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #endif
 173:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 174:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Transfer value from shadow timer registers to actual timer registers */
 175:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 824              	 .loc 2 175 0
 825 00ca 7B68     	 ldr r3,[r7,#4]
 826 00cc 5A68     	 ldr r2,[r3,#4]
 827 00ce 7B68     	 ldr r3,[r7,#4]
 828 00d0 1B69     	 ldr r3,[r3,#16]
 829 00d2 1046     	 mov r0,r2
 830 00d4 1946     	 mov r1,r3
 831 00d6 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 176:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->dither_shadow_txfr_msk
 832              	 .loc 2 176 0
 833 00da 7B68     	 ldr r3,[r7,#4]
 834 00dc 5A68     	 ldr r2,[r3,#4]
 835 00de 7B68     	 ldr r3,[r7,#4]
 836 00e0 5B69     	 ldr r3,[r3,#20]
 837 00e2 1046     	 mov r0,r2
 838 00e4 1946     	 mov r1,r3
 839 00e6 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 177:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 178:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_DeadTimeInit(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->dt_config_ptr
 840              	 .loc 2 178 0
 841 00ea 7B68     	 ldr r3,[r7,#4]
 842 00ec 9A68     	 ldr r2,[r3,#8]
 843 00ee 7B68     	 ldr r3,[r7,#4]
 844 00f0 1B68     	 ldr r3,[r3]
 845 00f2 1B6C     	 ldr r3,[r3,#64]
 846 00f4 1046     	 mov r0,r2
 847 00f6 1946     	 mov r1,r3
 848 00f8 FFF7FEFF 	 bl XMC_CCU8_SLICE_DeadTimeInit
 179:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 180:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Configure events */
 181:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       PWM_CCU8_lConfigure_Events(handle_ptr);
 849              	 .loc 2 181 0
 850 00fc 7868     	 ldr r0,[r7,#4]
 851 00fe FFF7FEFF 	 bl PWM_CCU8_lConfigure_Events
 182:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 183:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Enable the interrupts */
 184:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       PWM_CCU8_lInit_Interrupt(handle_ptr);
 852              	 .loc 2 184 0
 853 0102 7868     	 ldr r0,[r7,#4]
 854 0104 FFF7FEFF 	 bl PWM_CCU8_lInit_Interrupt
 185:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 186:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /*Initializes the GPIO*/
 187:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       PWM_CCU8_lInit_GPIO(handle_ptr);
 855              	 .loc 2 187 0
 856 0108 7868     	 ldr r0,[r7,#4]
 857 010a FFF7FEFF 	 bl PWM_CCU8_lInit_GPIO
 188:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 189:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_module = handle_ptr->config_ptr->global_ccu8_handle->module_frequency;
 858              	 .loc 2 189 0
 859 010e 7B68     	 ldr r3,[r7,#4]
 860 0110 1B68     	 ldr r3,[r3]
 861 0112 D3F88C30 	 ldr r3,[r3,#140]
 862 0116 1B68     	 ldr r3,[r3]
 863 0118 3B61     	 str r3,[r7,#16]
 190:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       prescalar = (uint32_t) handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->prescaler_initval;
 864              	 .loc 2 190 0
 865 011a 7B68     	 ldr r3,[r7,#4]
 866 011c 1B68     	 ldr r3,[r3]
 867 011e 9B6C     	 ldr r3,[r3,#72]
 868 0120 1B7B     	 ldrb r3,[r3,#12]
 869 0122 C3F30303 	 ubfx r3,r3,#0,#4
 870 0126 DBB2     	 uxtb r3,r3
 871 0128 FB60     	 str r3,[r7,#12]
 191:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_module = frequency_module / ((uint32_t) 1 << prescalar);
 872              	 .loc 2 191 0
 873 012a FB68     	 ldr r3,[r7,#12]
 874 012c 3A69     	 ldr r2,[r7,#16]
 875 012e 22FA03F3 	 lsr r3,r2,r3
 876 0132 3B61     	 str r3,[r7,#16]
 192:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       handle_ptr->frequency_tclk = frequency_module;
 877              	 .loc 2 192 0
 878 0134 7B68     	 ldr r3,[r7,#4]
 879 0136 3A69     	 ldr r2,[r7,#16]
 880 0138 1A62     	 str r2,[r3,#32]
 193:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 194:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       handle_ptr->state = PWM_CCU8_STATE_INITIALIZED;
 881              	 .loc 2 194 0
 882 013a 7B68     	 ldr r3,[r7,#4]
 883 013c 0122     	 movs r2,#1
 884 013e 1A77     	 strb r2,[r3,#28]
 195:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       status = PWM_CCU8_STATUS_SUCCESS;
 885              	 .loc 2 195 0
 886 0140 0023     	 movs r3,#0
 887 0142 FB75     	 strb r3,[r7,#23]
 196:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 197:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Start the PWM generation if start at initialization is enabled */
 198:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((bool) true == handle_ptr->config_ptr->start_control)
 888              	 .loc 2 198 0
 889 0144 7B68     	 ldr r3,[r7,#4]
 890 0146 1B68     	 ldr r3,[r3]
 891 0148 1B78     	 ldrb r3,[r3]
 892 014a 002B     	 cmp r3,#0
 893 014c 0BD0     	 beq .L27
 199:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 200:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_Start(handle_ptr);
 894              	 .loc 2 200 0
 895 014e 7868     	 ldr r0,[r7,#4]
 896 0150 FFF7FEFF 	 bl PWM_CCU8_Start
 897 0154 0346     	 mov r3,r0
 898 0156 FB75     	 strb r3,[r7,#23]
 899 0158 05E0     	 b .L27
 900              	.L22:
 201:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 202:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 203:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 204:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 205:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 206:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       handle_ptr->state = PWM_CCU8_STATE_UNINITIALIZED;
 901              	 .loc 2 206 0
 902 015a 7B68     	 ldr r3,[r7,#4]
 903 015c 0022     	 movs r2,#0
 904 015e 1A77     	 strb r2,[r3,#28]
 905 0160 01E0     	 b .L27
 906              	.L21:
 207:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 208:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 209:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 210:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   else
 211:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 212:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status = PWM_CCU8_STATUS_ALREADY_INITIALIZED;
 907              	 .loc 2 212 0
 908 0162 0223     	 movs r3,#2
 909 0164 FB75     	 strb r3,[r7,#23]
 910              	.L27:
 213:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init:PWM_CCU8_STATUS_ALREADY_INITIALIZED");
 214:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 215:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 216:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 911              	 .loc 2 216 0
 912 0166 FB7D     	 ldrb r3,[r7,#23]
 217:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_Init() api */
 913              	 .loc 2 217 0
 914 0168 1846     	 mov r0,r3
 915 016a 1837     	 adds r7,r7,#24
 916              	.LCFI87:
 917              	 .cfi_def_cfa_offset 8
 918 016c BD46     	 mov sp,r7
 919              	.LCFI88:
 920              	 .cfi_def_cfa_register 13
 921              	 
 922 016e 80BD     	 pop {r7,pc}
 923              	 .cfi_endproc
 924              	.LFE249:
 926              	 .section .text.PWM_CCU8_lInit_Interrupt,"ax",%progbits
 927              	 .align 2
 928              	 .thumb
 929              	 .thumb_func
 931              	PWM_CCU8_lInit_Interrupt:
 932              	.LFB250:
 218:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 219:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_Interrupt(PWM_CCU8_t* handle_ptr)
 220:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 933              	 .loc 2 220 0
 934              	 .cfi_startproc
 935              	 
 936              	 
 937 0000 80B5     	 push {r7,lr}
 938              	.LCFI89:
 939              	 .cfi_def_cfa_offset 8
 940              	 .cfi_offset 7,-8
 941              	 .cfi_offset 14,-4
 942 0002 82B0     	 sub sp,sp,#8
 943              	.LCFI90:
 944              	 .cfi_def_cfa_offset 16
 945 0004 00AF     	 add r7,sp,#0
 946              	.LCFI91:
 947              	 .cfi_def_cfa_register 7
 948 0006 7860     	 str r0,[r7,#4]
 221:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 222:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Enable events. Bind event to corresponding service request node. */
 223:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 224:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH,
 949              	 .loc 2 224 0
 950 0008 7B68     	 ldr r3,[r7,#4]
 951 000a 9A68     	 ldr r2,[r3,#8]
 225:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_per_match);
 952              	 .loc 2 225 0
 953 000c 7B68     	 ldr r3,[r7,#4]
 954 000e 1B68     	 ldr r3,[r3]
 224:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_per_match);
 955              	 .loc 2 224 0
 956 0010 5B7C     	 ldrb r3,[r3,#17]
 957 0012 1046     	 mov r0,r2
 958 0014 0021     	 movs r1,#0
 959 0016 1A46     	 mov r2,r3
 960 0018 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 226:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 961              	 .loc 2 226 0
 962 001c 7B68     	 ldr r3,[r7,#4]
 963 001e 9A68     	 ldr r2,[r3,#8]
 227:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp1_match_up);
 964              	 .loc 2 227 0
 965 0020 7B68     	 ldr r3,[r7,#4]
 966 0022 1B68     	 ldr r3,[r3]
 226:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 967              	 .loc 2 226 0
 968 0024 9B7C     	 ldrb r3,[r3,#18]
 969 0026 1046     	 mov r0,r2
 970 0028 0221     	 movs r1,#2
 971 002a 1A46     	 mov r2,r3
 972 002c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 228:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 973              	 .loc 2 228 0
 974 0030 7B68     	 ldr r3,[r7,#4]
 975 0032 9A68     	 ldr r2,[r3,#8]
 229:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp1_match_down);
 976              	 .loc 2 229 0
 977 0034 7B68     	 ldr r3,[r7,#4]
 978 0036 1B68     	 ldr r3,[r3]
 228:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 979              	 .loc 2 228 0
 980 0038 DB7C     	 ldrb r3,[r3,#19]
 981 003a 1046     	 mov r0,r2
 982 003c 0321     	 movs r1,#3
 983 003e 1A46     	 mov r2,r3
 984 0040 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 230:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 985              	 .loc 2 230 0
 986 0044 7B68     	 ldr r3,[r7,#4]
 987 0046 9A68     	 ldr r2,[r3,#8]
 231:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp2_match_up);
 988              	 .loc 2 231 0
 989 0048 7B68     	 ldr r3,[r7,#4]
 990 004a 1B68     	 ldr r3,[r3]
 230:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 991              	 .loc 2 230 0
 992 004c 1B7D     	 ldrb r3,[r3,#20]
 993 004e 1046     	 mov r0,r2
 994 0050 0421     	 movs r1,#4
 995 0052 1A46     	 mov r2,r3
 996 0054 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 232:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 997              	 .loc 2 232 0
 998 0058 7B68     	 ldr r3,[r7,#4]
 999 005a 9A68     	 ldr r2,[r3,#8]
 233:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp2_match_down);
 1000              	 .loc 2 233 0
 1001 005c 7B68     	 ldr r3,[r7,#4]
 1002 005e 1B68     	 ldr r3,[r3]
 232:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 1003              	 .loc 2 232 0
 1004 0060 5B7D     	 ldrb r3,[r3,#21]
 1005 0062 1046     	 mov r0,r2
 1006 0064 0521     	 movs r1,#5
 1007 0066 1A46     	 mov r2,r3
 1008 0068 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 234:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH,
 1009              	 .loc 2 234 0
 1010 006c 7B68     	 ldr r3,[r7,#4]
 1011 006e 9A68     	 ldr r2,[r3,#8]
 235:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_one_match_down);
 1012              	 .loc 2 235 0
 1013 0070 7B68     	 ldr r3,[r7,#4]
 1014 0072 1B68     	 ldr r3,[r3]
 234:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH,
 1015              	 .loc 2 234 0
 1016 0074 9B7D     	 ldrb r3,[r3,#22]
 1017 0076 1046     	 mov r0,r2
 1018 0078 0121     	 movs r1,#1
 1019 007a 1A46     	 mov r2,r3
 1020 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 236:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT0,
 1021              	 .loc 2 236 0
 1022 0080 7B68     	 ldr r3,[r7,#4]
 1023 0082 9A68     	 ldr r2,[r3,#8]
 237:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_e0);
 1024              	 .loc 2 237 0
 1025 0084 7B68     	 ldr r3,[r7,#4]
 1026 0086 1B68     	 ldr r3,[r3]
 236:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT0,
 1027              	 .loc 2 236 0
 1028 0088 DB7D     	 ldrb r3,[r3,#23]
 1029 008a 1046     	 mov r0,r2
 1030 008c 0821     	 movs r1,#8
 1031 008e 1A46     	 mov r2,r3
 1032 0090 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 238:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT1,
 1033              	 .loc 2 238 0
 1034 0094 7B68     	 ldr r3,[r7,#4]
 1035 0096 9A68     	 ldr r2,[r3,#8]
 239:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_e1);
 1036              	 .loc 2 239 0
 1037 0098 7B68     	 ldr r3,[r7,#4]
 1038 009a 1B68     	 ldr r3,[r3]
 238:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT1,
 1039              	 .loc 2 238 0
 1040 009c 1B7E     	 ldrb r3,[r3,#24]
 1041 009e 1046     	 mov r0,r2
 1042 00a0 0921     	 movs r1,#9
 1043 00a2 1A46     	 mov r2,r3
 1044 00a4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 240:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2,
 1045              	 .loc 2 240 0
 1046 00a8 7B68     	 ldr r3,[r7,#4]
 1047 00aa 9A68     	 ldr r2,[r3,#8]
 241:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_e2);
 1048              	 .loc 2 241 0
 1049 00ac 7B68     	 ldr r3,[r7,#4]
 1050 00ae 1B68     	 ldr r3,[r3]
 240:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2,
 1051              	 .loc 2 240 0
 1052 00b0 5B7E     	 ldrb r3,[r3,#25]
 1053 00b2 1046     	 mov r0,r2
 1054 00b4 0A21     	 movs r1,#10
 1055 00b6 1A46     	 mov r2,r3
 1056 00b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 242:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 243:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_per_match)
 1057              	 .loc 2 243 0
 1058 00bc 7B68     	 ldr r3,[r7,#4]
 1059 00be 1B68     	 ldr r3,[r3]
 1060 00c0 1B7A     	 ldrb r3,[r3,#8]
 1061 00c2 002B     	 cmp r3,#0
 1062 00c4 05D0     	 beq .L30
 244:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 245:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt period match enable");
 246:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH);
 1063              	 .loc 2 246 0
 1064 00c6 7B68     	 ldr r3,[r7,#4]
 1065 00c8 9B68     	 ldr r3,[r3,#8]
 1066 00ca 1846     	 mov r0,r3
 1067 00cc 0021     	 movs r1,#0
 1068 00ce FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1069              	.L30:
 247:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 248:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 249:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp1_match_up)
 1070              	 .loc 2 249 0
 1071 00d2 7B68     	 ldr r3,[r7,#4]
 1072 00d4 1B68     	 ldr r3,[r3]
 1073 00d6 5B7A     	 ldrb r3,[r3,#9]
 1074 00d8 002B     	 cmp r3,#0
 1075 00da 05D0     	 beq .L31
 250:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 251:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch1 up enable");
 252:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_C
 1076              	 .loc 2 252 0
 1077 00dc 7B68     	 ldr r3,[r7,#4]
 1078 00de 9B68     	 ldr r3,[r3,#8]
 1079 00e0 1846     	 mov r0,r3
 1080 00e2 0221     	 movs r1,#2
 1081 00e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1082              	.L31:
 253:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 254:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 255:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp1_match_down)
 1083              	 .loc 2 255 0
 1084 00e8 7B68     	 ldr r3,[r7,#4]
 1085 00ea 1B68     	 ldr r3,[r3]
 1086 00ec 9B7A     	 ldrb r3,[r3,#10]
 1087 00ee 002B     	 cmp r3,#0
 1088 00f0 05D0     	 beq .L32
 256:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 257:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch1 down enable");
 258:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN
 1089              	 .loc 2 258 0
 1090 00f2 7B68     	 ldr r3,[r7,#4]
 1091 00f4 9B68     	 ldr r3,[r3,#8]
 1092 00f6 1846     	 mov r0,r3
 1093 00f8 0321     	 movs r1,#3
 1094 00fa FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1095              	.L32:
 259:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 260:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 261:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp2_match_up)
 1096              	 .loc 2 261 0
 1097 00fe 7B68     	 ldr r3,[r7,#4]
 1098 0100 1B68     	 ldr r3,[r3]
 1099 0102 DB7A     	 ldrb r3,[r3,#11]
 1100 0104 002B     	 cmp r3,#0
 1101 0106 05D0     	 beq .L33
 262:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 263:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch2 up enable");
 264:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_C
 1102              	 .loc 2 264 0
 1103 0108 7B68     	 ldr r3,[r7,#4]
 1104 010a 9B68     	 ldr r3,[r3,#8]
 1105 010c 1846     	 mov r0,r3
 1106 010e 0421     	 movs r1,#4
 1107 0110 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1108              	.L33:
 265:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 266:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 267:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp2_match_down)
 1109              	 .loc 2 267 0
 1110 0114 7B68     	 ldr r3,[r7,#4]
 1111 0116 1B68     	 ldr r3,[r3]
 1112 0118 1B7B     	 ldrb r3,[r3,#12]
 1113 011a 002B     	 cmp r3,#0
 1114 011c 05D0     	 beq .L34
 268:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 269:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch2 down enable");
 270:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN
 1115              	 .loc 2 270 0
 1116 011e 7B68     	 ldr r3,[r7,#4]
 1117 0120 9B68     	 ldr r3,[r3,#8]
 1118 0122 1846     	 mov r0,r3
 1119 0124 0521     	 movs r1,#5
 1120 0126 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1121              	.L34:
 271:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 272:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 273:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_one_match_down)
 1122              	 .loc 2 273 0
 1123 012a 7B68     	 ldr r3,[r7,#4]
 1124 012c 1B68     	 ldr r3,[r3]
 1125 012e 5B7B     	 ldrb r3,[r3,#13]
 1126 0130 002B     	 cmp r3,#0
 1127 0132 05D0     	 beq .L35
 274:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 275:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt one match enable");
 276:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH);
 1128              	 .loc 2 276 0
 1129 0134 7B68     	 ldr r3,[r7,#4]
 1130 0136 9B68     	 ldr r3,[r3,#8]
 1131 0138 1846     	 mov r0,r3
 1132 013a 0121     	 movs r1,#1
 1133 013c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1134              	.L35:
 277:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 278:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 279:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_e0)
 1135              	 .loc 2 279 0
 1136 0140 7B68     	 ldr r3,[r7,#4]
 1137 0142 1B68     	 ldr r3,[r3]
 1138 0144 9B7B     	 ldrb r3,[r3,#14]
 1139 0146 002B     	 cmp r3,#0
 1140 0148 05D0     	 beq .L36
 280:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 281:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt event 0 enable");
 282:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT0);
 1141              	 .loc 2 282 0
 1142 014a 7B68     	 ldr r3,[r7,#4]
 1143 014c 9B68     	 ldr r3,[r3,#8]
 1144 014e 1846     	 mov r0,r3
 1145 0150 0821     	 movs r1,#8
 1146 0152 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1147              	.L36:
 283:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 284:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 285:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_e1)
 1148              	 .loc 2 285 0
 1149 0156 7B68     	 ldr r3,[r7,#4]
 1150 0158 1B68     	 ldr r3,[r3]
 1151 015a DB7B     	 ldrb r3,[r3,#15]
 1152 015c 002B     	 cmp r3,#0
 1153 015e 05D0     	 beq .L37
 286:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 287:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt event 1 enable");
 288:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT1);
 1154              	 .loc 2 288 0
 1155 0160 7B68     	 ldr r3,[r7,#4]
 1156 0162 9B68     	 ldr r3,[r3,#8]
 1157 0164 1846     	 mov r0,r3
 1158 0166 0921     	 movs r1,#9
 1159 0168 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1160              	.L37:
 289:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 290:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 291:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_e2)
 1161              	 .loc 2 291 0
 1162 016c 7B68     	 ldr r3,[r7,#4]
 1163 016e 1B68     	 ldr r3,[r3]
 1164 0170 1B7C     	 ldrb r3,[r3,#16]
 1165 0172 002B     	 cmp r3,#0
 1166 0174 05D0     	 beq .L29
 292:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 293:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt event 2 enable");
 294:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2);
 1167              	 .loc 2 294 0
 1168 0176 7B68     	 ldr r3,[r7,#4]
 1169 0178 9B68     	 ldr r3,[r3,#8]
 1170 017a 1846     	 mov r0,r3
 1171 017c 0A21     	 movs r1,#10
 1172 017e FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1173              	.L29:
 295:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 296:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 1174              	 .loc 2 296 0
 1175 0182 0837     	 adds r7,r7,#8
 1176              	.LCFI92:
 1177              	 .cfi_def_cfa_offset 8
 1178 0184 BD46     	 mov sp,r7
 1179              	.LCFI93:
 1180              	 .cfi_def_cfa_register 13
 1181              	 
 1182 0186 80BD     	 pop {r7,pc}
 1183              	 .cfi_endproc
 1184              	.LFE250:
 1186              	 .section .text.PWM_CCU8_lInit_GPIO,"ax",%progbits
 1187              	 .align 2
 1188              	 .thumb
 1189              	 .thumb_func
 1191              	PWM_CCU8_lInit_GPIO:
 1192              	.LFB251:
 297:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_GPIO(PWM_CCU8_t* handle_ptr)
 298:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1193              	 .loc 2 298 0
 1194              	 .cfi_startproc
 1195              	 
 1196              	 
 1197 0000 80B5     	 push {r7,lr}
 1198              	.LCFI94:
 1199              	 .cfi_def_cfa_offset 8
 1200              	 .cfi_offset 7,-8
 1201              	 .cfi_offset 14,-4
 1202 0002 82B0     	 sub sp,sp,#8
 1203              	.LCFI95:
 1204              	 .cfi_def_cfa_offset 16
 1205 0004 00AF     	 add r7,sp,#0
 1206              	.LCFI96:
 1207              	 .cfi_def_cfa_register 7
 1208 0006 7860     	 str r0,[r7,#4]
 299:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch1_out0_enable)
 1209              	 .loc 2 299 0
 1210 0008 7B68     	 ldr r3,[r7,#4]
 1211 000a 1B68     	 ldr r3,[r3]
 1212 000c 93F84C30 	 ldrb r3,[r3,#76]
 1213 0010 002B     	 cmp r3,#0
 1214 0012 0ED0     	 beq .L40
 300:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 301:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch1_out0_ptr, handle_ptr->config_ptr->gpio_ch1_out0_
 1215              	 .loc 2 301 0
 1216 0014 7B68     	 ldr r3,[r7,#4]
 1217 0016 1B68     	 ldr r3,[r3]
 1218 0018 196D     	 ldr r1,[r3,#80]
 1219 001a 7B68     	 ldr r3,[r7,#4]
 1220 001c 1B68     	 ldr r3,[r3]
 1221 001e 93F85420 	 ldrb r2,[r3,#84]
 302:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out0_config_ptr);
 1222              	 .loc 2 302 0
 1223 0022 7B68     	 ldr r3,[r7,#4]
 1224 0024 1B68     	 ldr r3,[r3]
 301:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out0_config_ptr);
 1225              	 .loc 2 301 0
 1226 0026 9B6D     	 ldr r3,[r3,#88]
 1227 0028 0846     	 mov r0,r1
 1228 002a 1146     	 mov r1,r2
 1229 002c 1A46     	 mov r2,r3
 1230 002e FFF7FEFF 	 bl XMC_GPIO_Init
 1231              	.L40:
 303:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 304:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 305:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch1_out1_enable)
 1232              	 .loc 2 305 0
 1233 0032 7B68     	 ldr r3,[r7,#4]
 1234 0034 1B68     	 ldr r3,[r3]
 1235 0036 93F85C30 	 ldrb r3,[r3,#92]
 1236 003a 002B     	 cmp r3,#0
 1237 003c 0ED0     	 beq .L41
 306:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 307:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch1_out1_ptr, handle_ptr->config_ptr->gpio_ch1_out1_
 1238              	 .loc 2 307 0
 1239 003e 7B68     	 ldr r3,[r7,#4]
 1240 0040 1B68     	 ldr r3,[r3]
 1241 0042 196E     	 ldr r1,[r3,#96]
 1242 0044 7B68     	 ldr r3,[r7,#4]
 1243 0046 1B68     	 ldr r3,[r3]
 1244 0048 93F86420 	 ldrb r2,[r3,#100]
 308:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out1_config_ptr);
 1245              	 .loc 2 308 0
 1246 004c 7B68     	 ldr r3,[r7,#4]
 1247 004e 1B68     	 ldr r3,[r3]
 307:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out1_config_ptr);
 1248              	 .loc 2 307 0
 1249 0050 9B6E     	 ldr r3,[r3,#104]
 1250 0052 0846     	 mov r0,r1
 1251 0054 1146     	 mov r1,r2
 1252 0056 1A46     	 mov r2,r3
 1253 0058 FFF7FEFF 	 bl XMC_GPIO_Init
 1254              	.L41:
 309:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 310:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 311:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch2_out2_enable)
 1255              	 .loc 2 311 0
 1256 005c 7B68     	 ldr r3,[r7,#4]
 1257 005e 1B68     	 ldr r3,[r3]
 1258 0060 93F86C30 	 ldrb r3,[r3,#108]
 1259 0064 002B     	 cmp r3,#0
 1260 0066 0ED0     	 beq .L42
 312:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 313:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch2_out2_ptr, handle_ptr->config_ptr->gpio_ch2_out2_
 1261              	 .loc 2 313 0
 1262 0068 7B68     	 ldr r3,[r7,#4]
 1263 006a 1B68     	 ldr r3,[r3]
 1264 006c 196F     	 ldr r1,[r3,#112]
 1265 006e 7B68     	 ldr r3,[r7,#4]
 1266 0070 1B68     	 ldr r3,[r3]
 1267 0072 93F87420 	 ldrb r2,[r3,#116]
 314:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out2_config_ptr);
 1268              	 .loc 2 314 0
 1269 0076 7B68     	 ldr r3,[r7,#4]
 1270 0078 1B68     	 ldr r3,[r3]
 313:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out2_config_ptr);
 1271              	 .loc 2 313 0
 1272 007a 9B6F     	 ldr r3,[r3,#120]
 1273 007c 0846     	 mov r0,r1
 1274 007e 1146     	 mov r1,r2
 1275 0080 1A46     	 mov r2,r3
 1276 0082 FFF7FEFF 	 bl XMC_GPIO_Init
 1277              	.L42:
 315:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 316:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 317:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch2_out3_enable)
 1278              	 .loc 2 317 0
 1279 0086 7B68     	 ldr r3,[r7,#4]
 1280 0088 1B68     	 ldr r3,[r3]
 1281 008a 93F87C30 	 ldrb r3,[r3,#124]
 1282 008e 002B     	 cmp r3,#0
 1283 0090 10D0     	 beq .L39
 318:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 319:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch2_out3_ptr, handle_ptr->config_ptr->gpio_ch2_out3_
 1284              	 .loc 2 319 0
 1285 0092 7B68     	 ldr r3,[r7,#4]
 1286 0094 1B68     	 ldr r3,[r3]
 1287 0096 D3F88010 	 ldr r1,[r3,#128]
 1288 009a 7B68     	 ldr r3,[r7,#4]
 1289 009c 1B68     	 ldr r3,[r3]
 1290 009e 93F88420 	 ldrb r2,[r3,#132]
 320:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out3_config_ptr);
 1291              	 .loc 2 320 0
 1292 00a2 7B68     	 ldr r3,[r7,#4]
 1293 00a4 1B68     	 ldr r3,[r3]
 319:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out3_config_ptr);
 1294              	 .loc 2 319 0
 1295 00a6 D3F88830 	 ldr r3,[r3,#136]
 1296 00aa 0846     	 mov r0,r1
 1297 00ac 1146     	 mov r1,r2
 1298 00ae 1A46     	 mov r2,r3
 1299 00b0 FFF7FEFF 	 bl XMC_GPIO_Init
 1300              	.L39:
 321:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 322:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 1301              	 .loc 2 322 0
 1302 00b4 0837     	 adds r7,r7,#8
 1303              	.LCFI97:
 1304              	 .cfi_def_cfa_offset 8
 1305 00b6 BD46     	 mov sp,r7
 1306              	.LCFI98:
 1307              	 .cfi_def_cfa_register 13
 1308              	 
 1309 00b8 80BD     	 pop {r7,pc}
 1310              	 .cfi_endproc
 1311              	.LFE251:
 1313 00ba 00BF     	 .section .text.PWM_CCU8_lConfigure_Events,"ax",%progbits
 1314              	 .align 2
 1315              	 .thumb
 1316              	 .thumb_func
 1318              	PWM_CCU8_lConfigure_Events:
 1319              	.LFB252:
 323:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 324:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lConfigure_Events(PWM_CCU8_t* handle_ptr)
 325:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1320              	 .loc 2 325 0
 1321              	 .cfi_startproc
 1322              	 
 1323              	 
 1324 0000 80B5     	 push {r7,lr}
 1325              	.LCFI99:
 1326              	 .cfi_def_cfa_offset 8
 1327              	 .cfi_offset 7,-8
 1328              	 .cfi_offset 14,-4
 1329 0002 84B0     	 sub sp,sp,#16
 1330              	.LCFI100:
 1331              	 .cfi_def_cfa_offset 24
 1332 0004 02AF     	 add r7,sp,#8
 1333              	.LCFI101:
 1334              	 .cfi_def_cfa 7,16
 1335 0006 7860     	 str r0,[r7,#4]
 326:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Configure slice to a external event 0 */
 327:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ConfigureEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_EVENT_0,
 1336              	 .loc 2 327 0
 1337 0008 7B68     	 ldr r3,[r7,#4]
 1338 000a 9A68     	 ldr r2,[r3,#8]
 328:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event0_config_ptr);
 1339              	 .loc 2 328 0
 1340 000c 7B68     	 ldr r3,[r7,#4]
 1341 000e 1B68     	 ldr r3,[r3]
 327:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event0_config_ptr);
 1342              	 .loc 2 327 0
 1343 0010 DB69     	 ldr r3,[r3,#28]
 1344 0012 1046     	 mov r0,r2
 1345 0014 0121     	 movs r1,#1
 1346 0016 1A46     	 mov r2,r3
 1347 0018 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 329:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 330:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Configure slice to a external event 1 */
 331:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ConfigureEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_EVENT_1,
 1348              	 .loc 2 331 0
 1349 001c 7B68     	 ldr r3,[r7,#4]
 1350 001e 9A68     	 ldr r2,[r3,#8]
 332:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event1_config_ptr);
 1351              	 .loc 2 332 0
 1352 0020 7B68     	 ldr r3,[r7,#4]
 1353 0022 1B68     	 ldr r3,[r3]
 331:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event1_config_ptr);
 1354              	 .loc 2 331 0
 1355 0024 1B6A     	 ldr r3,[r3,#32]
 1356 0026 1046     	 mov r0,r2
 1357 0028 0221     	 movs r1,#2
 1358 002a 1A46     	 mov r2,r3
 1359 002c FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 333:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 334:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Configure slice to a external event 2 */
 335:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ConfigureEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_EVENT_2,
 1360              	 .loc 2 335 0
 1361 0030 7B68     	 ldr r3,[r7,#4]
 1362 0032 9A68     	 ldr r2,[r3,#8]
 336:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event2_config_ptr);
 1363              	 .loc 2 336 0
 1364 0034 7B68     	 ldr r3,[r7,#4]
 1365 0036 1B68     	 ldr r3,[r3]
 335:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event2_config_ptr);
 1366              	 .loc 2 335 0
 1367 0038 5B6A     	 ldr r3,[r3,#36]
 1368 003a 1046     	 mov r0,r2
 1369 003c 0321     	 movs r1,#3
 1370 003e 1A46     	 mov r2,r3
 1371 0040 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 337:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 338:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal controls start of the timer */
 339:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_start_event)
 1372              	 .loc 2 339 0
 1373 0044 7B68     	 ldr r3,[r7,#4]
 1374 0046 1B68     	 ldr r3,[r3]
 1375 0048 93F82830 	 ldrb r3,[r3,#40]
 1376 004c 002B     	 cmp r3,#0
 1377 004e 0ED0     	 beq .L45
 340:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 341:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StartConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_start_event,
 1378              	 .loc 2 341 0
 1379 0050 7B68     	 ldr r3,[r7,#4]
 1380 0052 9968     	 ldr r1,[r3,#8]
 1381 0054 7B68     	 ldr r3,[r7,#4]
 1382 0056 1B68     	 ldr r3,[r3]
 1383 0058 93F82820 	 ldrb r2,[r3,#40]
 342:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                handle_ptr->config_ptr->ext_start_mode);
 1384              	 .loc 2 342 0
 1385 005c 7B68     	 ldr r3,[r7,#4]
 1386 005e 1B68     	 ldr r3,[r3]
 341:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                handle_ptr->config_ptr->ext_start_mode);
 1387              	 .loc 2 341 0
 1388 0060 93F82930 	 ldrb r3,[r3,#41]
 1389 0064 0846     	 mov r0,r1
 1390 0066 1146     	 mov r1,r2
 1391 0068 1A46     	 mov r2,r3
 1392 006a FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
 1393              	.L45:
 343:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 344:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 345:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal can stop the timer */
 346:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_stop_event)
 1394              	 .loc 2 346 0
 1395 006e 7B68     	 ldr r3,[r7,#4]
 1396 0070 1B68     	 ldr r3,[r3]
 1397 0072 93F82A30 	 ldrb r3,[r3,#42]
 1398 0076 002B     	 cmp r3,#0
 1399 0078 0ED0     	 beq .L46
 347:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 348:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StopConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_stop_event,
 1400              	 .loc 2 348 0
 1401 007a 7B68     	 ldr r3,[r7,#4]
 1402 007c 9968     	 ldr r1,[r3,#8]
 1403 007e 7B68     	 ldr r3,[r7,#4]
 1404 0080 1B68     	 ldr r3,[r3]
 1405 0082 93F82A20 	 ldrb r2,[r3,#42]
 349:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_stop_mode);
 1406              	 .loc 2 349 0
 1407 0086 7B68     	 ldr r3,[r7,#4]
 1408 0088 1B68     	 ldr r3,[r3]
 348:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_stop_mode);
 1409              	 .loc 2 348 0
 1410 008a 93F82B30 	 ldrb r3,[r3,#43]
 1411 008e 0846     	 mov r0,r1
 1412 0090 1146     	 mov r1,r2
 1413 0092 1A46     	 mov r2,r3
 1414 0094 FFF7FEFF 	 bl XMC_CCU8_SLICE_StopConfig
 1415              	.L46:
 350:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 351:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 352:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal can change the timer counting direction */
 353:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_count_dir_event)
 1416              	 .loc 2 353 0
 1417 0098 7B68     	 ldr r3,[r7,#4]
 1418 009a 1B68     	 ldr r3,[r3]
 1419 009c 93F82C30 	 ldrb r3,[r3,#44]
 1420 00a0 002B     	 cmp r3,#0
 1421 00a2 09D0     	 beq .L47
 354:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 355:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_DirectionConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_count_di
 1422              	 .loc 2 355 0
 1423 00a4 7B68     	 ldr r3,[r7,#4]
 1424 00a6 9A68     	 ldr r2,[r3,#8]
 1425 00a8 7B68     	 ldr r3,[r7,#4]
 1426 00aa 1B68     	 ldr r3,[r3]
 1427 00ac 93F82C30 	 ldrb r3,[r3,#44]
 1428 00b0 1046     	 mov r0,r2
 1429 00b2 1946     	 mov r1,r3
 1430 00b4 FFF7FEFF 	 bl XMC_CCU8_SLICE_DirectionConfig
 1431              	.L47:
 356:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 357:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal can stop the timer and the timer value remains same */
 358:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_gate_event)
 1432              	 .loc 2 358 0
 1433 00b8 7B68     	 ldr r3,[r7,#4]
 1434 00ba 1B68     	 ldr r3,[r3]
 1435 00bc 93F82D30 	 ldrb r3,[r3,#45]
 1436 00c0 002B     	 cmp r3,#0
 1437 00c2 09D0     	 beq .L48
 359:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 360:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_GateConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_gate_event);
 1438              	 .loc 2 360 0
 1439 00c4 7B68     	 ldr r3,[r7,#4]
 1440 00c6 9A68     	 ldr r2,[r3,#8]
 1441 00c8 7B68     	 ldr r3,[r7,#4]
 1442 00ca 1B68     	 ldr r3,[r3]
 1443 00cc 93F82D30 	 ldrb r3,[r3,#45]
 1444 00d0 1046     	 mov r0,r2
 1445 00d2 1946     	 mov r1,r3
 1446 00d4 FFF7FEFF 	 bl XMC_CCU8_SLICE_GateConfig
 1447              	.L48:
 361:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 362:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Timer increments on external signal */
 363:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_count_event)
 1448              	 .loc 2 363 0
 1449 00d8 7B68     	 ldr r3,[r7,#4]
 1450 00da 1B68     	 ldr r3,[r3]
 1451 00dc 93F82E30 	 ldrb r3,[r3,#46]
 1452 00e0 002B     	 cmp r3,#0
 1453 00e2 09D0     	 beq .L49
 364:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 365:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_CountConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_count_event)
 1454              	 .loc 2 365 0
 1455 00e4 7B68     	 ldr r3,[r7,#4]
 1456 00e6 9A68     	 ldr r2,[r3,#8]
 1457 00e8 7B68     	 ldr r3,[r7,#4]
 1458 00ea 1B68     	 ldr r3,[r3]
 1459 00ec 93F82E30 	 ldrb r3,[r3,#46]
 1460 00f0 1046     	 mov r0,r2
 1461 00f2 1946     	 mov r1,r3
 1462 00f4 FFF7FEFF 	 bl XMC_CCU8_SLICE_CountConfig
 1463              	.L49:
 366:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 367:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Timer gets loaded with compare register value or period register value on external signal */
 368:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_load_event)
 1464              	 .loc 2 368 0
 1465 00f8 7B68     	 ldr r3,[r7,#4]
 1466 00fa 1B68     	 ldr r3,[r3]
 1467 00fc 93F82F30 	 ldrb r3,[r3,#47]
 1468 0100 002B     	 cmp r3,#0
 1469 0102 13D0     	 beq .L50
 369:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 370:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_LoadConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_load_event);
 1470              	 .loc 2 370 0
 1471 0104 7B68     	 ldr r3,[r7,#4]
 1472 0106 9A68     	 ldr r2,[r3,#8]
 1473 0108 7B68     	 ldr r3,[r7,#4]
 1474 010a 1B68     	 ldr r3,[r3]
 1475 010c 93F82F30 	 ldrb r3,[r3,#47]
 1476 0110 1046     	 mov r0,r2
 1477 0112 1946     	 mov r1,r3
 1478 0114 FFF7FEFF 	 bl XMC_CCU8_SLICE_LoadConfig
 371:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_LoadSelector(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_load_select
 1479              	 .loc 2 371 0
 1480 0118 7B68     	 ldr r3,[r7,#4]
 1481 011a 9A68     	 ldr r2,[r3,#8]
 1482 011c 7B68     	 ldr r3,[r7,#4]
 1483 011e 1B68     	 ldr r3,[r3]
 1484 0120 93F83030 	 ldrb r3,[r3,#48]
 1485 0124 1046     	 mov r0,r2
 1486 0126 1946     	 mov r1,r3
 1487 0128 FFF7FEFF 	 bl XMC_CCU8_SLICE_LoadSelector
 1488              	.L50:
 372:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 373:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal PWM signal (ST bit) output gets modulated by external signal */
 374:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_mod_event)
 1489              	 .loc 2 374 0
 1490 012c 7B68     	 ldr r3,[r7,#4]
 1491 012e 1B68     	 ldr r3,[r3]
 1492 0130 93F83130 	 ldrb r3,[r3,#49]
 1493 0134 002B     	 cmp r3,#0
 1494 0136 11D0     	 beq .L51
 375:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 376:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_ModulationConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_mod_eve
 1495              	 .loc 2 376 0
 1496 0138 7B68     	 ldr r3,[r7,#4]
 1497 013a 9868     	 ldr r0,[r3,#8]
 1498 013c 7B68     	 ldr r3,[r7,#4]
 1499 013e 1B68     	 ldr r3,[r3]
 1500 0140 93F83110 	 ldrb r1,[r3,#49]
 377:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_mode, XMC_CCU8_SLICE_MODULATION
 1501              	 .loc 2 377 0
 1502 0144 7B68     	 ldr r3,[r7,#4]
 1503 0146 1B68     	 ldr r3,[r3]
 376:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_mode, XMC_CCU8_SLICE_MODULATION
 1504              	 .loc 2 376 0
 1505 0148 93F83220 	 ldrb r2,[r3,#50]
 378:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_sync);
 1506              	 .loc 2 378 0
 1507 014c 7B68     	 ldr r3,[r7,#4]
 1508 014e 1B68     	 ldr r3,[r3]
 376:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_mode, XMC_CCU8_SLICE_MODULATION
 1509              	 .loc 2 376 0
 1510 0150 93F83330 	 ldrb r3,[r3,#51]
 1511 0154 0093     	 str r3,[sp]
 1512 0156 0323     	 movs r3,#3
 1513 0158 FFF7FEFF 	 bl XMC_CCU8_SLICE_ModulationConfig
 1514              	.L51:
 379:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 380:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 381:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* PWM signal (ST bit) output gets modulated by external signal */
 382:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_2 == handle_ptr->config_ptr->ext_trap_event)
 1515              	 .loc 2 382 0
 1516 015c 7B68     	 ldr r3,[r7,#4]
 1517 015e 1B68     	 ldr r3,[r3]
 1518 0160 93F83730 	 ldrb r3,[r3,#55]
 1519 0164 032B     	 cmp r3,#3
 1520 0166 1AD1     	 bne .L52
 383:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 384:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_TrapConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_trap_exit,
 1521              	 .loc 2 384 0
 1522 0168 7B68     	 ldr r3,[r7,#4]
 1523 016a 9968     	 ldr r1,[r3,#8]
 1524 016c 7B68     	 ldr r3,[r7,#4]
 1525 016e 1B68     	 ldr r3,[r3]
 1526 0170 93F83920 	 ldrb r2,[r3,#57]
 385:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_trap_sync);
 1527              	 .loc 2 385 0
 1528 0174 7B68     	 ldr r3,[r7,#4]
 1529 0176 1B68     	 ldr r3,[r3]
 384:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_trap_sync);
 1530              	 .loc 2 384 0
 1531 0178 93F83830 	 ldrb r3,[r3,#56]
 1532 017c 0846     	 mov r0,r1
 1533 017e 1146     	 mov r1,r2
 1534 0180 1A46     	 mov r2,r3
 1535 0182 FFF7FEFF 	 bl XMC_CCU8_SLICE_TrapConfig
 386:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if ((bool) true == handle_ptr->config_ptr->ext_trap_enable)
 1536              	 .loc 2 386 0
 1537 0186 7B68     	 ldr r3,[r7,#4]
 1538 0188 1B68     	 ldr r3,[r3]
 1539 018a 93F83630 	 ldrb r3,[r3,#54]
 1540 018e 002B     	 cmp r3,#0
 1541 0190 05D0     	 beq .L52
 387:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 388:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_EnableTrap(
 1542              	 .loc 2 388 0
 1543 0192 7B68     	 ldr r3,[r7,#4]
 1544 0194 9B68     	 ldr r3,[r3,#8]
 1545 0196 1846     	 mov r0,r3
 1546 0198 0F21     	 movs r1,#15
 1547 019a FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
 1548              	.L52:
 389:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           handle_ptr->ccu8_slice_ptr,
 390:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           (uint32_t)(XMC_CCU8_SLICE_OUTPUT_0 | XMC_CCU8_SLICE_OUTPUT_1 | XMC_CCU8_SLICE_OUTPUT_2 | 
 391:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 		  );
 392:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 393:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 394:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 395:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_override_edge_event) || (XMC_CCU8_S
 1549              	 .loc 2 395 0
 1550 019e 7B68     	 ldr r3,[r7,#4]
 1551 01a0 1B68     	 ldr r3,[r3]
 1552 01a2 93F83430 	 ldrb r3,[r3,#52]
 1553 01a6 002B     	 cmp r3,#0
 1554 01a8 05D1     	 bne .L53
 396:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       != handle_ptr->config_ptr->ext_override_level_event))
 1555              	 .loc 2 396 0 discriminator 1
 1556 01aa 7B68     	 ldr r3,[r7,#4]
 1557 01ac 1B68     	 ldr r3,[r3]
 1558 01ae 93F83530 	 ldrb r3,[r3,#53]
 395:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       != handle_ptr->config_ptr->ext_override_level_event))
 1559              	 .loc 2 395 0 discriminator 1
 1560 01b2 002B     	 cmp r3,#0
 1561 01b4 11D0     	 beq .L44
 1562              	.L53:
 397:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 398:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(handle_ptr->ccu8_slice_ptr,
 1563              	 .loc 2 398 0
 1564 01b6 7B68     	 ldr r3,[r7,#4]
 1565 01b8 9968     	 ldr r1,[r3,#8]
 399:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1566              	 .loc 2 399 0
 1567 01ba 7B68     	 ldr r3,[r7,#4]
 1568 01bc 1B68     	 ldr r3,[r3]
 398:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1569              	 .loc 2 398 0
 1570 01be 1A6A     	 ldr r2,[r3,#32]
 400:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event2_config_ptr);
 1571              	 .loc 2 400 0
 1572 01c0 7B68     	 ldr r3,[r7,#4]
 1573 01c2 1B68     	 ldr r3,[r3]
 398:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1574              	 .loc 2 398 0
 1575 01c4 5B6A     	 ldr r3,[r3,#36]
 1576 01c6 0846     	 mov r0,r1
 1577 01c8 1146     	 mov r1,r2
 1578 01ca 1A46     	 mov r2,r3
 1579 01cc FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 401:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StatusBitOverrideConfig(handle_ptr->ccu8_slice_ptr);
 1580              	 .loc 2 401 0
 1581 01d0 7B68     	 ldr r3,[r7,#4]
 1582 01d2 9B68     	 ldr r3,[r3,#8]
 1583 01d4 1846     	 mov r0,r3
 1584 01d6 FFF7FEFF 	 bl XMC_CCU8_SLICE_StatusBitOverrideConfig
 1585              	.L44:
 402:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 403:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 404:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 1586              	 .loc 2 404 0
 1587 01da 0837     	 adds r7,r7,#8
 1588              	.LCFI102:
 1589              	 .cfi_def_cfa_offset 8
 1590 01dc BD46     	 mov sp,r7
 1591              	.LCFI103:
 1592              	 .cfi_def_cfa_register 13
 1593              	 
 1594 01de 80BD     	 pop {r7,pc}
 1595              	 .cfi_endproc
 1596              	.LFE252:
 1598              	 .section .text.PWM_CCU8_Start,"ax",%progbits
 1599              	 .align 2
 1600              	 .global PWM_CCU8_Start
 1601              	 .thumb
 1602              	 .thumb_func
 1604              	PWM_CCU8_Start:
 1605              	.LFB253:
 405:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 406:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Starts the CCU8_CC8 slice. This needs to be called even if external start is configured.*/
 407:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_Start(PWM_CCU8_t* handle_ptr)
 408:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1606              	 .loc 2 408 0
 1607              	 .cfi_startproc
 1608              	 
 1609              	 
 1610 0000 80B5     	 push {r7,lr}
 1611              	.LCFI104:
 1612              	 .cfi_def_cfa_offset 8
 1613              	 .cfi_offset 7,-8
 1614              	 .cfi_offset 14,-4
 1615 0002 84B0     	 sub sp,sp,#16
 1616              	.LCFI105:
 1617              	 .cfi_def_cfa_offset 24
 1618 0004 00AF     	 add r7,sp,#0
 1619              	.LCFI106:
 1620              	 .cfi_def_cfa_register 7
 1621 0006 7860     	 str r0,[r7,#4]
 409:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 410:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 411:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 1622              	 .loc 2 411 0
 1623 0008 0123     	 movs r3,#1
 1624 000a FB73     	 strb r3,[r7,#15]
 412:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_Start:handle_ptr NULL", (handle_ptr != NULL));
 413:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((PWM_CCU8_STATE_INITIALIZED == handle_ptr->state) || (PWM_CCU8_STATE_STOPPED == handle_ptr->s
 1625              	 .loc 2 413 0
 1626 000c 7B68     	 ldr r3,[r7,#4]
 1627 000e 1B7F     	 ldrb r3,[r3,#28]
 1628 0010 012B     	 cmp r3,#1
 1629 0012 03D0     	 beq .L56
 1630              	 .loc 2 413 0 is_stmt 0 discriminator 1
 1631 0014 7B68     	 ldr r3,[r7,#4]
 1632 0016 1B7F     	 ldrb r3,[r3,#28]
 1633 0018 032B     	 cmp r3,#3
 1634 001a 17D1     	 bne .L57
 1635              	.L56:
 414:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 415:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* clear IDLE mode for the slice; Start timer */
 416:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_EnableClock(handle_ptr->ccu8_module_ptr, handle_ptr->slice_number);
 1636              	 .loc 2 416 0 is_stmt 1
 1637 001c 7B68     	 ldr r3,[r7,#4]
 1638 001e 5A68     	 ldr r2,[r3,#4]
 1639 0020 7B68     	 ldr r3,[r7,#4]
 1640 0022 5B7B     	 ldrb r3,[r3,#13]
 1641 0024 1046     	 mov r0,r2
 1642 0026 1946     	 mov r1,r3
 1643 0028 FFF7FEFF 	 bl XMC_CCU8_EnableClock
 417:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 418:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (XMC_CCU8_SLICE_EVENT_NONE == handle_ptr->config_ptr->ext_start_event)
 1644              	 .loc 2 418 0
 1645 002c 7B68     	 ldr r3,[r7,#4]
 1646 002e 1B68     	 ldr r3,[r3]
 1647 0030 93F82830 	 ldrb r3,[r3,#40]
 1648 0034 002B     	 cmp r3,#0
 1649 0036 04D1     	 bne .L58
 419:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 420:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_StartTimer(handle_ptr->ccu8_slice_ptr);
 1650              	 .loc 2 420 0
 1651 0038 7B68     	 ldr r3,[r7,#4]
 1652 003a 9B68     	 ldr r3,[r3,#8]
 1653 003c 1846     	 mov r0,r3
 1654 003e FFF7FEFF 	 bl XMC_CCU8_SLICE_StartTimer
 1655              	.L58:
 421:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 422:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 423:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     handle_ptr->state = PWM_CCU8_STATE_RUNNING;
 1656              	 .loc 2 423 0
 1657 0042 7B68     	 ldr r3,[r7,#4]
 1658 0044 0222     	 movs r2,#2
 1659 0046 1A77     	 strb r2,[r3,#28]
 424:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status = PWM_CCU8_STATUS_SUCCESS;
 1660              	 .loc 2 424 0
 1661 0048 0023     	 movs r3,#0
 1662 004a FB73     	 strb r3,[r7,#15]
 1663              	.L57:
 425:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Start:start PWM");
 426:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 427:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 1664              	 .loc 2 427 0
 1665 004c FB7B     	 ldrb r3,[r7,#15]
 428:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_Start() api */
 1666              	 .loc 2 428 0
 1667 004e 1846     	 mov r0,r3
 1668 0050 1037     	 adds r7,r7,#16
 1669              	.LCFI107:
 1670              	 .cfi_def_cfa_offset 8
 1671 0052 BD46     	 mov sp,r7
 1672              	.LCFI108:
 1673              	 .cfi_def_cfa_register 13
 1674              	 
 1675 0054 80BD     	 pop {r7,pc}
 1676              	 .cfi_endproc
 1677              	.LFE253:
 1679 0056 00BF     	 .section .text.PWM_CCU8_Stop,"ax",%progbits
 1680              	 .align 2
 1681              	 .global PWM_CCU8_Stop
 1682              	 .thumb
 1683              	 .thumb_func
 1685              	PWM_CCU8_Stop:
 1686              	.LFB254:
 429:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 430:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Stops the CCU8_CC8 slice. */
 431:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_Stop(PWM_CCU8_t* handle_ptr)
 432:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1687              	 .loc 2 432 0
 1688              	 .cfi_startproc
 1689              	 
 1690              	 
 1691 0000 80B5     	 push {r7,lr}
 1692              	.LCFI109:
 1693              	 .cfi_def_cfa_offset 8
 1694              	 .cfi_offset 7,-8
 1695              	 .cfi_offset 14,-4
 1696 0002 84B0     	 sub sp,sp,#16
 1697              	.LCFI110:
 1698              	 .cfi_def_cfa_offset 24
 1699 0004 00AF     	 add r7,sp,#0
 1700              	.LCFI111:
 1701              	 .cfi_def_cfa_register 7
 1702 0006 7860     	 str r0,[r7,#4]
 433:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 434:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 435:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 1703              	 .loc 2 435 0
 1704 0008 0123     	 movs r3,#1
 1705 000a FB73     	 strb r3,[r7,#15]
 436:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_Stop:handle_ptr NULL", (handle_ptr != NULL));
 437:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 1706              	 .loc 2 437 0
 1707 000c 7B68     	 ldr r3,[r7,#4]
 1708 000e 1B7F     	 ldrb r3,[r3,#28]
 1709 0010 002B     	 cmp r3,#0
 1710 0012 0ED0     	 beq .L61
 438:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 439:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StopTimer(handle_ptr->ccu8_slice_ptr);
 1711              	 .loc 2 439 0
 1712 0014 7B68     	 ldr r3,[r7,#4]
 1713 0016 9B68     	 ldr r3,[r3,#8]
 1714 0018 1846     	 mov r0,r3
 1715 001a FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 440:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_ClearTimer(handle_ptr->ccu8_slice_ptr);
 1716              	 .loc 2 440 0
 1717 001e 7B68     	 ldr r3,[r7,#4]
 1718 0020 9B68     	 ldr r3,[r3,#8]
 1719 0022 1846     	 mov r0,r3
 1720 0024 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearTimer
 441:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 442:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     handle_ptr->state = PWM_CCU8_STATE_STOPPED;
 1721              	 .loc 2 442 0
 1722 0028 7B68     	 ldr r3,[r7,#4]
 1723 002a 0322     	 movs r2,#3
 1724 002c 1A77     	 strb r2,[r3,#28]
 443:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status = PWM_CCU8_STATUS_SUCCESS;
 1725              	 .loc 2 443 0
 1726 002e 0023     	 movs r3,#0
 1727 0030 FB73     	 strb r3,[r7,#15]
 1728              	.L61:
 444:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Stop:stop PWM");
 445:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 446:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 1729              	 .loc 2 446 0
 1730 0032 FB7B     	 ldrb r3,[r7,#15]
 447:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 448:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_Stop() api */
 1731              	 .loc 2 448 0
 1732 0034 1846     	 mov r0,r3
 1733 0036 1037     	 adds r7,r7,#16
 1734              	.LCFI112:
 1735              	 .cfi_def_cfa_offset 8
 1736 0038 BD46     	 mov sp,r7
 1737              	.LCFI113:
 1738              	 .cfi_def_cfa_register 13
 1739              	 
 1740 003a 80BD     	 pop {r7,pc}
 1741              	 .cfi_endproc
 1742              	.LFE254:
 1744              	 .section .text.PWM_CCU8_GetTimerValue,"ax",%progbits
 1745              	 .align 2
 1746              	 .global PWM_CCU8_GetTimerValue
 1747              	 .thumb
 1748              	 .thumb_func
 1750              	PWM_CCU8_GetTimerValue:
 1751              	.LFB255:
 449:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 450:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Gets the timer value of  CCU8_CC8 slice. */
 451:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** uint32_t PWM_CCU8_GetTimerValue(PWM_CCU8_t* handle_ptr)
 452:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1752              	 .loc 2 452 0
 1753              	 .cfi_startproc
 1754              	 
 1755              	 
 1756 0000 80B5     	 push {r7,lr}
 1757              	.LCFI114:
 1758              	 .cfi_def_cfa_offset 8
 1759              	 .cfi_offset 7,-8
 1760              	 .cfi_offset 14,-4
 1761 0002 84B0     	 sub sp,sp,#16
 1762              	.LCFI115:
 1763              	 .cfi_def_cfa_offset 24
 1764 0004 00AF     	 add r7,sp,#0
 1765              	.LCFI116:
 1766              	 .cfi_def_cfa_register 7
 1767 0006 7860     	 str r0,[r7,#4]
 453:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t timer_value;
 454:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_GetTimerValue:handle_ptr NULL", (handle_ptr != NULL));
 455:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   timer_value = (uint32_t) XMC_CCU8_SLICE_GetTimerValue(handle_ptr->ccu8_slice_ptr);
 1768              	 .loc 2 455 0
 1769 0008 7B68     	 ldr r3,[r7,#4]
 1770 000a 9B68     	 ldr r3,[r3,#8]
 1771 000c 1846     	 mov r0,r3
 1772 000e FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerValue
 1773 0012 0346     	 mov r3,r0
 1774 0014 FB60     	 str r3,[r7,#12]
 456:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_GetTimerValue:timer value");
 457:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (timer_value);
 1775              	 .loc 2 457 0
 1776 0016 FB68     	 ldr r3,[r7,#12]
 458:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_GetTimerValue() api */
 1777              	 .loc 2 458 0
 1778 0018 1846     	 mov r0,r3
 1779 001a 1037     	 adds r7,r7,#16
 1780              	.LCFI117:
 1781              	 .cfi_def_cfa_offset 8
 1782 001c BD46     	 mov sp,r7
 1783              	.LCFI118:
 1784              	 .cfi_def_cfa_register 13
 1785              	 
 1786 001e 80BD     	 pop {r7,pc}
 1787              	 .cfi_endproc
 1788              	.LFE255:
 1790              	 .section .text.PWM_CCU8_GetTimerStatus,"ax",%progbits
 1791              	 .align 2
 1792              	 .global PWM_CCU8_GetTimerStatus
 1793              	 .thumb
 1794              	 .thumb_func
 1796              	PWM_CCU8_GetTimerStatus:
 1797              	.LFB256:
 459:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 460:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Gets the status of  CCU8_CC8 slice. */
 461:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** bool PWM_CCU8_GetTimerStatus(PWM_CCU8_t* handle_ptr)
 462:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1798              	 .loc 2 462 0
 1799              	 .cfi_startproc
 1800              	 
 1801              	 
 1802 0000 80B5     	 push {r7,lr}
 1803              	.LCFI119:
 1804              	 .cfi_def_cfa_offset 8
 1805              	 .cfi_offset 7,-8
 1806              	 .cfi_offset 14,-4
 1807 0002 84B0     	 sub sp,sp,#16
 1808              	.LCFI120:
 1809              	 .cfi_def_cfa_offset 24
 1810 0004 00AF     	 add r7,sp,#0
 1811              	.LCFI121:
 1812              	 .cfi_def_cfa_register 7
 1813 0006 7860     	 str r0,[r7,#4]
 463:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   bool status_timer;
 464:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_GetTimerStatus:handle_ptr NULL", (handle_ptr != NULL));
 465:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status_timer = XMC_CCU8_SLICE_IsTimerRunning(handle_ptr->ccu8_slice_ptr);
 1814              	 .loc 2 465 0
 1815 0008 7B68     	 ldr r3,[r7,#4]
 1816 000a 9B68     	 ldr r3,[r3,#8]
 1817 000c 1846     	 mov r0,r3
 1818 000e FFF7FEFF 	 bl XMC_CCU8_SLICE_IsTimerRunning
 1819 0012 0346     	 mov r3,r0
 1820 0014 FB73     	 strb r3,[r7,#15]
 466:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status_timer);
 1821              	 .loc 2 466 0
 1822 0016 FB7B     	 ldrb r3,[r7,#15]
 467:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 468:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_GetStatus() api */
 1823              	 .loc 2 468 0
 1824 0018 1846     	 mov r0,r3
 1825 001a 1037     	 adds r7,r7,#16
 1826              	.LCFI122:
 1827              	 .cfi_def_cfa_offset 8
 1828 001c BD46     	 mov sp,r7
 1829              	.LCFI123:
 1830              	 .cfi_def_cfa_register 13
 1831              	 
 1832 001e 80BD     	 pop {r7,pc}
 1833              	 .cfi_endproc
 1834              	.LFE256:
 1836              	 .section .text.PWM_CCU8_SetFreqSymmetric,"ax",%progbits
 1837              	 .align 2
 1838              	 .global PWM_CCU8_SetFreqSymmetric
 1839              	 .thumb
 1840              	 .thumb_func
 1842              	PWM_CCU8_SetFreqSymmetric:
 1843              	.LFB257:
 469:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 470:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 471:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency for CCU8_CC8 slice Symmetric Mode. */
 472:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqSymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_hz)
 473:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1844              	 .loc 2 473 0
 1845              	 .cfi_startproc
 1846              	 
 1847              	 
 1848 0000 80B5     	 push {r7,lr}
 1849              	.LCFI124:
 1850              	 .cfi_def_cfa_offset 8
 1851              	 .cfi_offset 7,-8
 1852              	 .cfi_offset 14,-4
 1853 0002 88B0     	 sub sp,sp,#32
 1854              	.LCFI125:
 1855              	 .cfi_def_cfa_offset 40
 1856 0004 00AF     	 add r7,sp,#0
 1857              	.LCFI126:
 1858              	 .cfi_def_cfa_register 7
 1859 0006 7860     	 str r0,[r7,#4]
 1860 0008 3960     	 str r1,[r7]
 474:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 475:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 476:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 477:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t duty_ch1;
 478:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t duty_ch2;
 479:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint16_t compare_ch1;
 480:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint16_t compare_ch2;
 481:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 482:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 1861              	 .loc 2 482 0
 1862 000a 0123     	 movs r3,#1
 1863 000c FB77     	 strb r3,[r7,#31]
 483:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 1864              	 .loc 2 483 0
 1865 000e 0023     	 movs r3,#0
 1866 0010 7B61     	 str r3,[r7,#20]
 484:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqSymmetric:handle_ptr NULL", (handle_ptr != NULL));
 485:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 1867              	 .loc 2 485 0
 1868 0012 7B68     	 ldr r3,[r7,#4]
 1869 0014 1B7F     	 ldrb r3,[r3,#28]
 1870 0016 002B     	 cmp r3,#0
 1871 0018 6BD0     	 beq .L68
 486:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 487:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 1872              	 .loc 2 487 0
 1873 001a 3B68     	 ldr r3,[r7]
 1874 001c 002B     	 cmp r3,#0
 1875 001e 68D0     	 beq .L68
 488:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 489:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetPwmFreq:cannot set frequency 0Hz");
 490:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 491:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 492:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 493:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 1876              	 .loc 2 493 0
 1877 0020 7B68     	 ldr r3,[r7,#4]
 1878 0022 1B6A     	 ldr r3,[r3,#32]
 1879 0024 7B61     	 str r3,[r7,#20]
 494:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 1880              	 .loc 2 494 0
 1881 0026 7A69     	 ldr r2,[r7,#20]
 1882 0028 3B68     	 ldr r3,[r7]
 1883 002a B2FBF3F3 	 udiv r3,r2,r3
 1884 002e BB61     	 str r3,[r7,#24]
 495:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 496:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 1885              	 .loc 2 496 0
 1886 0030 7B68     	 ldr r3,[r7,#4]
 1887 0032 1B68     	 ldr r3,[r3]
 1888 0034 9B6C     	 ldr r3,[r3,#72]
 1889 0036 1B78     	 ldrb r3,[r3]
 1890 0038 03F00103 	 and r3,r3,#1
 1891 003c DBB2     	 uxtb r3,r3
 1892 003e 002B     	 cmp r3,#0
 1893 0040 02D0     	 beq .L69
 497:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 498:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = period >> 1U;/*divide by 2*/
 1894              	 .loc 2 498 0
 1895 0042 BB69     	 ldr r3,[r7,#24]
 1896 0044 5B08     	 lsrs r3,r3,#1
 1897 0046 BB61     	 str r3,[r7,#24]
 1898              	.L69:
 499:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 500:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 501:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 1899              	 .loc 2 501 0
 1900 0048 BB69     	 ldr r3,[r7,#24]
 1901 004a 002B     	 cmp r3,#0
 1902 004c 51D0     	 beq .L68
 1903              	 .loc 2 501 0 is_stmt 0 discriminator 1
 1904 004e BB69     	 ldr r3,[r7,#24]
 1905 0050 B3F5803F 	 cmp r3,#65536
 1906 0054 4DD2     	 bcs .L68
 502:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 503:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         /*Calculate the current duty cycle in no-timer concatenation mode*/
 504:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = handle_ptr->sym_duty1;
 1907              	 .loc 2 504 0 is_stmt 1
 1908 0056 7B68     	 ldr r3,[r7,#4]
 1909 0058 5B6A     	 ldr r3,[r3,#36]
 1910 005a 3B61     	 str r3,[r7,#16]
 505:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = handle_ptr->sym_duty2;
 1911              	 .loc 2 505 0
 1912 005c 7B68     	 ldr r3,[r7,#4]
 1913 005e 9B6A     	 ldr r3,[r3,#40]
 1914 0060 FB60     	 str r3,[r7,#12]
 506:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 507:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = (PWM_CCU8_DUTY_FULL_SCALE - duty_ch1);
 1915              	 .loc 2 507 0
 1916 0062 3B69     	 ldr r3,[r7,#16]
 1917 0064 C3F51C53 	 rsb r3,r3,#9984
 1918 0068 1033     	 adds r3,r3,#16
 1919 006a 3B61     	 str r3,[r7,#16]
 508:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = duty_ch1 * period;
 1920              	 .loc 2 508 0
 1921 006c 3B69     	 ldr r3,[r7,#16]
 1922 006e BA69     	 ldr r2,[r7,#24]
 1923 0070 02FB03F3 	 mul r3,r2,r3
 1924 0074 3B61     	 str r3,[r7,#16]
 509:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = duty_ch1 / PWM_CCU8_DUTY_FULL_SCALE;
 1925              	 .loc 2 509 0
 1926 0076 3B69     	 ldr r3,[r7,#16]
 1927 0078 204A     	 ldr r2,.L71
 1928 007a A2FB0323 	 umull r2,r3,r2,r3
 1929 007e 5B0B     	 lsrs r3,r3,#13
 1930 0080 3B61     	 str r3,[r7,#16]
 510:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 511:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = (PWM_CCU8_DUTY_FULL_SCALE - duty_ch2);
 1931              	 .loc 2 511 0
 1932 0082 FB68     	 ldr r3,[r7,#12]
 1933 0084 C3F51C53 	 rsb r3,r3,#9984
 1934 0088 1033     	 adds r3,r3,#16
 1935 008a FB60     	 str r3,[r7,#12]
 512:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = duty_ch2 * period;
 1936              	 .loc 2 512 0
 1937 008c FB68     	 ldr r3,[r7,#12]
 1938 008e BA69     	 ldr r2,[r7,#24]
 1939 0090 02FB03F3 	 mul r3,r2,r3
 1940 0094 FB60     	 str r3,[r7,#12]
 513:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = duty_ch2 / PWM_CCU8_DUTY_FULL_SCALE;
 1941              	 .loc 2 513 0
 1942 0096 FB68     	 ldr r3,[r7,#12]
 1943 0098 184A     	 ldr r2,.L71
 1944 009a A2FB0323 	 umull r2,r3,r2,r3
 1945 009e 5B0B     	 lsrs r3,r3,#13
 1946 00a0 FB60     	 str r3,[r7,#12]
 514:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 515:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = (uint16_t) duty_ch1;
 1947              	 .loc 2 515 0
 1948 00a2 3B69     	 ldr r3,[r7,#16]
 1949 00a4 7B81     	 strh r3,[r7,#10]
 516:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = (uint16_t) duty_ch2;
 1950              	 .loc 2 516 0
 1951 00a6 FB68     	 ldr r3,[r7,#12]
 1952 00a8 3B81     	 strh r3,[r7,#8]
 517:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 518:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 1953              	 .loc 2 518 0
 1954 00aa 7B68     	 ldr r3,[r7,#4]
 1955 00ac 9A68     	 ldr r2,[r3,#8]
 1956 00ae BB69     	 ldr r3,[r7,#24]
 1957 00b0 9BB2     	 uxth r3,r3
 1958 00b2 013B     	 subs r3,r3,#1
 1959 00b4 9BB2     	 uxth r3,r3
 1960 00b6 1046     	 mov r0,r2
 1961 00b8 1946     	 mov r1,r3
 1962 00ba FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 519:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 1963              	 .loc 2 519 0
 1964 00be 7B68     	 ldr r3,[r7,#4]
 1965 00c0 9A68     	 ldr r2,[r3,#8]
 1966 00c2 7B89     	 ldrh r3,[r7,#10]
 1967 00c4 1046     	 mov r0,r2
 1968 00c6 0021     	 movs r1,#0
 1969 00c8 1A46     	 mov r2,r3
 1970 00ca FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 520:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 1971              	 .loc 2 520 0
 1972 00ce 7B68     	 ldr r3,[r7,#4]
 1973 00d0 9A68     	 ldr r2,[r3,#8]
 1974 00d2 3B89     	 ldrh r3,[r7,#8]
 1975 00d4 1046     	 mov r0,r2
 1976 00d6 0121     	 movs r1,#1
 1977 00d8 1A46     	 mov r2,r3
 1978 00da FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 521:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 1979              	 .loc 2 521 0
 1980 00de 7B68     	 ldr r3,[r7,#4]
 1981 00e0 5A68     	 ldr r2,[r3,#4]
 1982 00e2 7B68     	 ldr r3,[r7,#4]
 1983 00e4 1B69     	 ldr r3,[r3,#16]
 1984 00e6 1046     	 mov r0,r2
 1985 00e8 1946     	 mov r1,r3
 1986 00ea FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 522:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetPwmFreq:frequency set");
 523:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 1987              	 .loc 2 523 0
 1988 00ee 0023     	 movs r3,#0
 1989 00f0 FB77     	 strb r3,[r7,#31]
 1990              	.L68:
 524:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 525:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 526:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 527:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 1991              	 .loc 2 527 0
 1992 00f2 FB7F     	 ldrb r3,[r7,#31]
 528:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 529:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_SetFreqSymmetric() api */
 1993              	 .loc 2 529 0
 1994 00f4 1846     	 mov r0,r3
 1995 00f6 2037     	 adds r7,r7,#32
 1996              	.LCFI127:
 1997              	 .cfi_def_cfa_offset 8
 1998 00f8 BD46     	 mov sp,r7
 1999              	.LCFI128:
 2000              	 .cfi_def_cfa_register 13
 2001              	 
 2002 00fa 80BD     	 pop {r7,pc}
 2003              	.L72:
 2004              	 .align 2
 2005              	.L71:
 2006 00fc 5917B7D1 	 .word -776530087
 2007              	 .cfi_endproc
 2008              	.LFE257:
 2010              	 .section .text.PWM_CCU8_SetDutyCycleSymmetric,"ax",%progbits
 2011              	 .align 2
 2012              	 .global PWM_CCU8_SetDutyCycleSymmetric
 2013              	 .thumb
 2014              	 .thumb_func
 2016              	PWM_CCU8_SetDutyCycleSymmetric:
 2017              	.LFB258:
 530:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 531:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 532:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 533:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the duty cycle (uint32_t) for CCU8_CC8 slice. */
 534:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetDutyCycleSymmetric(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_COMPARE_CHA
 535:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                  uint32_t duty_cycle)
 536:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2018              	 .loc 2 536 0
 2019              	 .cfi_startproc
 2020              	 
 2021              	 
 2022 0000 80B5     	 push {r7,lr}
 2023              	.LCFI129:
 2024              	 .cfi_def_cfa_offset 8
 2025              	 .cfi_offset 7,-8
 2026              	 .cfi_offset 14,-4
 2027 0002 88B0     	 sub sp,sp,#32
 2028              	.LCFI130:
 2029              	 .cfi_def_cfa_offset 40
 2030 0004 00AF     	 add r7,sp,#0
 2031              	.LCFI131:
 2032              	 .cfi_def_cfa_register 7
 2033 0006 F860     	 str r0,[r7,#12]
 2034 0008 0B46     	 mov r3,r1
 2035 000a 7A60     	 str r2,[r7,#4]
 2036 000c FB72     	 strb r3,[r7,#11]
 537:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 538:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 539:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare;
 540:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 541:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2037              	 .loc 2 541 0
 2038 000e 0123     	 movs r3,#1
 2039 0010 FB77     	 strb r3,[r7,#31]
 542:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDutyCycleSymmetric:handle_ptr NULL", (handle_ptr != NULL));
 543:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2040              	 .loc 2 543 0
 2041 0012 FB68     	 ldr r3,[r7,#12]
 2042 0014 1B7F     	 ldrb r3,[r3,#28]
 2043 0016 002B     	 cmp r3,#0
 2044 0018 36D0     	 beq .L74
 544:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 545:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* duty cycle has to be in between 0 and 100 */
 546:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if ((duty_cycle > PWM_CCU8_SYM_DUTY_MAX))
 2045              	 .loc 2 546 0
 2046 001a 7B68     	 ldr r3,[r7,#4]
 2047 001c 42F21072 	 movw r2,#10000
 2048 0020 9342     	 cmp r3,r2
 2049 0022 31D8     	 bhi .L74
 547:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 548:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetDutyCycleSymmetric:Cannot set duty cycle > 100%%");
 549:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 550:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 551:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 552:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = (uint32_t) XMC_CCU8_SLICE_GetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr) + 1U;
 2050              	 .loc 2 552 0
 2051 0024 FB68     	 ldr r3,[r7,#12]
 2052 0026 9B68     	 ldr r3,[r3,#8]
 2053 0028 1846     	 mov r0,r3
 2054 002a FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerPeriodMatch
 2055 002e 0346     	 mov r3,r0
 2056 0030 0133     	 adds r3,r3,#1
 2057 0032 BB61     	 str r3,[r7,#24]
 553:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 554:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Duty Cycle(symmetric) = ((PR + 1)- CR) / (PR + 1) */
 555:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       compare = ((period * (PWM_CCU8_DUTY_FULL_SCALE - duty_cycle)) / PWM_CCU8_DUTY_FULL_SCALE);
 2058              	 .loc 2 555 0
 2059 0034 7B68     	 ldr r3,[r7,#4]
 2060 0036 C3F51C53 	 rsb r3,r3,#9984
 2061 003a 1033     	 adds r3,r3,#16
 2062 003c BA69     	 ldr r2,[r7,#24]
 2063 003e 02FB03F3 	 mul r3,r2,r3
 2064 0042 144A     	 ldr r2,.L78
 2065 0044 A2FB0323 	 umull r2,r3,r2,r3
 2066 0048 5B0B     	 lsrs r3,r3,#13
 2067 004a 7B61     	 str r3,[r7,#20]
 556:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 557:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, channel, (uint16_t) compare);
 2068              	 .loc 2 557 0
 2069 004c FB68     	 ldr r3,[r7,#12]
 2070 004e 9968     	 ldr r1,[r3,#8]
 2071 0050 7B69     	 ldr r3,[r7,#20]
 2072 0052 9BB2     	 uxth r3,r3
 2073 0054 FA7A     	 ldrb r2,[r7,#11]
 2074 0056 0846     	 mov r0,r1
 2075 0058 1146     	 mov r1,r2
 2076 005a 1A46     	 mov r2,r3
 2077 005c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 558:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2078              	 .loc 2 558 0
 2079 0060 FB68     	 ldr r3,[r7,#12]
 2080 0062 5A68     	 ldr r2,[r3,#4]
 2081 0064 FB68     	 ldr r3,[r7,#12]
 2082 0066 1B69     	 ldr r3,[r3,#16]
 2083 0068 1046     	 mov r0,r2
 2084 006a 1946     	 mov r1,r3
 2085 006c FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 559:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 560:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2086              	 .loc 2 560 0
 2087 0070 FB7A     	 ldrb r3,[r7,#11]
 2088 0072 002B     	 cmp r3,#0
 2089 0074 03D1     	 bne .L75
 561:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 562:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty1 = duty_cycle;
 2090              	 .loc 2 562 0
 2091 0076 FB68     	 ldr r3,[r7,#12]
 2092 0078 7A68     	 ldr r2,[r7,#4]
 2093 007a 5A62     	 str r2,[r3,#36]
 2094 007c 02E0     	 b .L76
 2095              	.L75:
 563:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 564:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 565:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 566:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty2 = duty_cycle;
 2096              	 .loc 2 566 0
 2097 007e FB68     	 ldr r3,[r7,#12]
 2098 0080 7A68     	 ldr r2,[r7,#4]
 2099 0082 9A62     	 str r2,[r3,#40]
 2100              	.L76:
 567:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 568:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 569:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetDutyCycleSymmetric:dutycycle set");
 570:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       status = PWM_CCU8_STATUS_SUCCESS;
 2101              	 .loc 2 570 0
 2102 0084 0023     	 movs r3,#0
 2103 0086 FB77     	 strb r3,[r7,#31]
 2104              	.L74:
 571:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 572:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 573:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2105              	 .loc 2 573 0
 2106 0088 FB7F     	 ldrb r3,[r7,#31]
 574:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_SetDutyCycleSymmetric() api */
 2107              	 .loc 2 574 0
 2108 008a 1846     	 mov r0,r3
 2109 008c 2037     	 adds r7,r7,#32
 2110              	.LCFI132:
 2111              	 .cfi_def_cfa_offset 8
 2112 008e BD46     	 mov sp,r7
 2113              	.LCFI133:
 2114              	 .cfi_def_cfa_register 13
 2115              	 
 2116 0090 80BD     	 pop {r7,pc}
 2117              	.L79:
 2118 0092 00BF     	 .align 2
 2119              	.L78:
 2120 0094 5917B7D1 	 .word -776530087
 2121              	 .cfi_endproc
 2122              	.LFE258:
 2124              	 .section .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric,"ax",%progbits
 2125              	 .align 2
 2126              	 .global PWM_CCU8_SetFreqAndDutyCycleSymmetric
 2127              	 .thumb
 2128              	 .thumb_func
 2130              	PWM_CCU8_SetFreqAndDutyCycleSymmetric:
 2131              	.LFB259:
 575:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 576:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 577:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 578:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency and duty cycle for CCU8_CC8 slice Symmetric Mode. */
 579:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqAndDutyCycleSymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_h
 580:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                         uint32_t duty_ch2)
 581:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2132              	 .loc 2 581 0
 2133              	 .cfi_startproc
 2134              	 
 2135              	 
 2136 0000 80B5     	 push {r7,lr}
 2137              	.LCFI134:
 2138              	 .cfi_def_cfa_offset 8
 2139              	 .cfi_offset 7,-8
 2140              	 .cfi_offset 14,-4
 2141 0002 8AB0     	 sub sp,sp,#40
 2142              	.LCFI135:
 2143              	 .cfi_def_cfa_offset 48
 2144 0004 00AF     	 add r7,sp,#0
 2145              	.LCFI136:
 2146              	 .cfi_def_cfa_register 7
 2147 0006 F860     	 str r0,[r7,#12]
 2148 0008 B960     	 str r1,[r7,#8]
 2149 000a 7A60     	 str r2,[r7,#4]
 2150 000c 3B60     	 str r3,[r7]
 582:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 583:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 584:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 585:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 586:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 587:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 588:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 589:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2151              	 .loc 2 589 0
 2152 000e 0123     	 movs r3,#1
 2153 0010 87F82730 	 strb r3,[r7,#39]
 590:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 2154              	 .loc 2 590 0
 2155 0014 0023     	 movs r3,#0
 2156 0016 FB61     	 str r3,[r7,#28]
 591:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqAndDutyCycleSymmetric:handle_ptr NULL", (handle_ptr != NULL));
 592:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2157              	 .loc 2 592 0
 2158 0018 FB68     	 ldr r3,[r7,#12]
 2159 001a 1B7F     	 ldrb r3,[r3,#28]
 2160 001c 002B     	 cmp r3,#0
 2161 001e 6CD0     	 beq .L81
 593:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 594:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 2162              	 .loc 2 594 0
 2163 0020 BB68     	 ldr r3,[r7,#8]
 2164 0022 002B     	 cmp r3,#0
 2165 0024 69D0     	 beq .L81
 595:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 596:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleSymmetric:cannot set frequency 0Hz");
 597:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 598:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else if ((duty_ch1 > PWM_CCU8_SYM_DUTY_MAX) || (duty_ch2 > PWM_CCU8_SYM_DUTY_MAX))
 2166              	 .loc 2 598 0
 2167 0026 7B68     	 ldr r3,[r7,#4]
 2168 0028 42F21072 	 movw r2,#10000
 2169 002c 9342     	 cmp r3,r2
 2170 002e 64D8     	 bhi .L81
 2171              	 .loc 2 598 0 is_stmt 0 discriminator 1
 2172 0030 3B68     	 ldr r3,[r7]
 2173 0032 42F21072 	 movw r2,#10000
 2174 0036 9342     	 cmp r3,r2
 2175 0038 5FD8     	 bhi .L81
 599:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 600:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleSymmetric:duty > 100%%");
 601:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 602:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 603:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 604:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 2176              	 .loc 2 604 0 is_stmt 1
 2177 003a FB68     	 ldr r3,[r7,#12]
 2178 003c 1B6A     	 ldr r3,[r3,#32]
 2179 003e FB61     	 str r3,[r7,#28]
 605:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 2180              	 .loc 2 605 0
 2181 0040 FA69     	 ldr r2,[r7,#28]
 2182 0042 BB68     	 ldr r3,[r7,#8]
 2183 0044 B2FBF3F3 	 udiv r3,r2,r3
 2184 0048 3B62     	 str r3,[r7,#32]
 606:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 607:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 2185              	 .loc 2 607 0
 2186 004a FB68     	 ldr r3,[r7,#12]
 2187 004c 1B68     	 ldr r3,[r3]
 2188 004e 9B6C     	 ldr r3,[r3,#72]
 2189 0050 1B78     	 ldrb r3,[r3]
 2190 0052 03F00103 	 and r3,r3,#1
 2191 0056 DBB2     	 uxtb r3,r3
 2192 0058 002B     	 cmp r3,#0
 2193 005a 02D0     	 beq .L82
 608:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 609:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = period >> 1U;/*divide by 2*/
 2194              	 .loc 2 609 0
 2195 005c 3B6A     	 ldr r3,[r7,#32]
 2196 005e 5B08     	 lsrs r3,r3,#1
 2197 0060 3B62     	 str r3,[r7,#32]
 2198              	.L82:
 610:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 611:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 612:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 2199              	 .loc 2 612 0
 2200 0062 3B6A     	 ldr r3,[r7,#32]
 2201 0064 002B     	 cmp r3,#0
 2202 0066 48D0     	 beq .L81
 2203              	 .loc 2 612 0 is_stmt 0 discriminator 1
 2204 0068 3B6A     	 ldr r3,[r7,#32]
 2205 006a B3F5803F 	 cmp r3,#65536
 2206 006e 44D2     	 bcs .L81
 613:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 614:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         /*Calculate the current duty cycle in no-timer concatenation mode*/
 615:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = ((period * (PWM_CCU8_DUTY_FULL_SCALE - duty_ch1)) / PWM_CCU8_DUTY_FULL_SCALE)
 2207              	 .loc 2 615 0 is_stmt 1
 2208 0070 7B68     	 ldr r3,[r7,#4]
 2209 0072 C3F51C53 	 rsb r3,r3,#9984
 2210 0076 1033     	 adds r3,r3,#16
 2211 0078 3A6A     	 ldr r2,[r7,#32]
 2212 007a 02FB03F3 	 mul r3,r2,r3
 2213 007e 224A     	 ldr r2,.L84
 2214 0080 A2FB0323 	 umull r2,r3,r2,r3
 2215 0084 5B0B     	 lsrs r3,r3,#13
 2216 0086 BB61     	 str r3,[r7,#24]
 616:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = ((period * (PWM_CCU8_DUTY_FULL_SCALE - duty_ch2)) / PWM_CCU8_DUTY_FULL_SCALE)
 2217              	 .loc 2 616 0
 2218 0088 3B68     	 ldr r3,[r7]
 2219 008a C3F51C53 	 rsb r3,r3,#9984
 2220 008e 1033     	 adds r3,r3,#16
 2221 0090 3A6A     	 ldr r2,[r7,#32]
 2222 0092 02FB03F3 	 mul r3,r2,r3
 2223 0096 1C4A     	 ldr r2,.L84
 2224 0098 A2FB0323 	 umull r2,r3,r2,r3
 2225 009c 5B0B     	 lsrs r3,r3,#13
 2226 009e 7B61     	 str r3,[r7,#20]
 617:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 618:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 2227              	 .loc 2 618 0
 2228 00a0 FB68     	 ldr r3,[r7,#12]
 2229 00a2 9A68     	 ldr r2,[r3,#8]
 2230 00a4 3B6A     	 ldr r3,[r7,#32]
 2231 00a6 9BB2     	 uxth r3,r3
 2232 00a8 013B     	 subs r3,r3,#1
 2233 00aa 9BB2     	 uxth r3,r3
 2234 00ac 1046     	 mov r0,r2
 2235 00ae 1946     	 mov r1,r3
 2236 00b0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 619:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2237              	 .loc 2 619 0
 2238 00b4 FB68     	 ldr r3,[r7,#12]
 2239 00b6 9A68     	 ldr r2,[r3,#8]
 2240 00b8 BB69     	 ldr r3,[r7,#24]
 2241 00ba 9BB2     	 uxth r3,r3
 2242 00bc 1046     	 mov r0,r2
 2243 00be 0021     	 movs r1,#0
 2244 00c0 1A46     	 mov r2,r3
 2245 00c2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 620:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch1);
 621:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2246              	 .loc 2 621 0
 2247 00c6 FB68     	 ldr r3,[r7,#12]
 2248 00c8 9A68     	 ldr r2,[r3,#8]
 2249 00ca 7B69     	 ldr r3,[r7,#20]
 2250 00cc 9BB2     	 uxth r3,r3
 2251 00ce 1046     	 mov r0,r2
 2252 00d0 0121     	 movs r1,#1
 2253 00d2 1A46     	 mov r2,r3
 2254 00d4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 622:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch2);
 623:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2255              	 .loc 2 623 0
 2256 00d8 FB68     	 ldr r3,[r7,#12]
 2257 00da 5A68     	 ldr r2,[r3,#4]
 2258 00dc FB68     	 ldr r3,[r7,#12]
 2259 00de 1B69     	 ldr r3,[r3,#16]
 2260 00e0 1046     	 mov r0,r2
 2261 00e2 1946     	 mov r1,r3
 2262 00e4 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 624:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 625:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty1 = duty_ch1;
 2263              	 .loc 2 625 0
 2264 00e8 FB68     	 ldr r3,[r7,#12]
 2265 00ea 7A68     	 ldr r2,[r7,#4]
 2266 00ec 5A62     	 str r2,[r3,#36]
 626:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty2 = duty_ch2;
 2267              	 .loc 2 626 0
 2268 00ee FB68     	 ldr r3,[r7,#12]
 2269 00f0 3A68     	 ldr r2,[r7]
 2270 00f2 9A62     	 str r2,[r3,#40]
 627:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 628:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleSymmetric:frequency set");
 629:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 2271              	 .loc 2 629 0
 2272 00f4 0023     	 movs r3,#0
 2273 00f6 87F82730 	 strb r3,[r7,#39]
 2274              	.L81:
 630:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 631:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 632:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 633:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2275              	 .loc 2 633 0
 2276 00fa 97F82730 	 ldrb r3,[r7,#39]
 634:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 635:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetFreqAndDutyCycleSymmetric() api */
 2277              	 .loc 2 635 0
 2278 00fe 1846     	 mov r0,r3
 2279 0100 2837     	 adds r7,r7,#40
 2280              	.LCFI137:
 2281              	 .cfi_def_cfa_offset 8
 2282 0102 BD46     	 mov sp,r7
 2283              	.LCFI138:
 2284              	 .cfi_def_cfa_register 13
 2285              	 
 2286 0104 80BD     	 pop {r7,pc}
 2287              	.L85:
 2288 0106 00BF     	 .align 2
 2289              	.L84:
 2290 0108 5917B7D1 	 .word -776530087
 2291              	 .cfi_endproc
 2292              	.LFE259:
 2294              	 .section .text.PWM_CCU8_SetFreqAsymmetric,"ax",%progbits
 2295              	 .align 2
 2296              	 .global PWM_CCU8_SetFreqAsymmetric
 2297              	 .thumb
 2298              	 .thumb_func
 2300              	PWM_CCU8_SetFreqAsymmetric:
 2301              	.LFB260:
 636:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 637:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 638:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 639:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency for CCU8_CC8 slice Asymmetric Mode. */
 640:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqAsymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_hz)
 641:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2302              	 .loc 2 641 0
 2303              	 .cfi_startproc
 2304              	 
 2305              	 
 2306 0000 80B5     	 push {r7,lr}
 2307              	.LCFI139:
 2308              	 .cfi_def_cfa_offset 8
 2309              	 .cfi_offset 7,-8
 2310              	 .cfi_offset 14,-4
 2311 0002 8AB0     	 sub sp,sp,#40
 2312              	.LCFI140:
 2313              	 .cfi_def_cfa_offset 48
 2314 0004 00AF     	 add r7,sp,#0
 2315              	.LCFI141:
 2316              	 .cfi_def_cfa_register 7
 2317 0006 7860     	 str r0,[r7,#4]
 2318 0008 3960     	 str r1,[r7]
 642:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 643:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 644:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 645:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t duty_cycle;
 646:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t shift;
 647:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 648:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 649:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 650:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2319              	 .loc 2 650 0
 2320 000a 0123     	 movs r3,#1
 2321 000c 87F82730 	 strb r3,[r7,#39]
 651:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 2322              	 .loc 2 651 0
 2323 0010 0023     	 movs r3,#0
 2324 0012 3B62     	 str r3,[r7,#32]
 652:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqAsymmetric:handle_ptr NULL", (handle_ptr != NULL));
 653:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2325              	 .loc 2 653 0
 2326 0014 7B68     	 ldr r3,[r7,#4]
 2327 0016 1B7F     	 ldrb r3,[r3,#28]
 2328 0018 002B     	 cmp r3,#0
 2329 001a 00F0AF80 	 beq .L87
 654:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 655:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 2330              	 .loc 2 655 0
 2331 001e 3B68     	 ldr r3,[r7]
 2332 0020 002B     	 cmp r3,#0
 2333 0022 00F0AB80 	 beq .L87
 656:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 657:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetPwmFreq:cannot set frequency 0Hz");
 658:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 659:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 660:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 661:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 2334              	 .loc 2 661 0
 2335 0026 7B68     	 ldr r3,[r7,#4]
 2336 0028 1B6A     	 ldr r3,[r3,#32]
 2337 002a 3B62     	 str r3,[r7,#32]
 662:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 2338              	 .loc 2 662 0
 2339 002c 3A6A     	 ldr r2,[r7,#32]
 2340 002e 3B68     	 ldr r3,[r7]
 2341 0030 B2FBF3F3 	 udiv r3,r2,r3
 2342 0034 FB61     	 str r3,[r7,#28]
 663:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 664:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       duty_cycle = handle_ptr->asym_duty;
 2343              	 .loc 2 664 0
 2344 0036 7B68     	 ldr r3,[r7,#4]
 2345 0038 DB6A     	 ldr r3,[r3,#44]
 2346 003a BB61     	 str r3,[r7,#24]
 665:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       shift = handle_ptr->asym_shift;
 2347              	 .loc 2 665 0
 2348 003c 7B68     	 ldr r3,[r7,#4]
 2349 003e 1B6B     	 ldr r3,[r3,#48]
 2350 0040 7B61     	 str r3,[r7,#20]
 666:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 667:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 2351              	 .loc 2 667 0
 2352 0042 7B68     	 ldr r3,[r7,#4]
 2353 0044 1B68     	 ldr r3,[r3]
 2354 0046 9B6C     	 ldr r3,[r3,#72]
 2355 0048 1B78     	 ldrb r3,[r3]
 2356 004a 03F00103 	 and r3,r3,#1
 2357 004e DBB2     	 uxtb r3,r3
 2358 0050 002B     	 cmp r3,#0
 2359 0052 50D0     	 beq .L88
 668:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 669:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = period >> 1U;/*divide by 2*/
 2360              	 .loc 2 669 0
 2361 0054 FB69     	 ldr r3,[r7,#28]
 2362 0056 5B08     	 lsrs r3,r3,#1
 2363 0058 FB61     	 str r3,[r7,#28]
 670:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 671:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 2364              	 .loc 2 671 0
 2365 005a FB69     	 ldr r3,[r7,#28]
 2366 005c 002B     	 cmp r3,#0
 2367 005e 00F08D80 	 beq .L87
 2368              	 .loc 2 671 0 is_stmt 0 discriminator 1
 2369 0062 FB69     	 ldr r3,[r7,#28]
 2370 0064 B3F5803F 	 cmp r3,#65536
 2371 0068 80F08880 	 bcs .L87
 672:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 673:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = (2U * period * shift);
 2372              	 .loc 2 673 0 is_stmt 1
 2373 006c FB69     	 ldr r3,[r7,#28]
 2374 006e 7A69     	 ldr r2,[r7,#20]
 2375 0070 02FB03F3 	 mul r3,r2,r3
 2376 0074 5B00     	 lsls r3,r3,#1
 2377 0076 3B61     	 str r3,[r7,#16]
 674:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = compare_ch1 / PWM_CCU8_DUTY_FULL_SCALE;
 2378              	 .loc 2 674 0
 2379 0078 3B69     	 ldr r3,[r7,#16]
 2380 007a 434A     	 ldr r2,.L91
 2381 007c A2FB0323 	 umull r2,r3,r2,r3
 2382 0080 5B0B     	 lsrs r3,r3,#13
 2383 0082 3B61     	 str r3,[r7,#16]
 675:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = (2U * period * (PWM_CCU8_DUTY_FULL_SCALE - (shift + duty_cycle)));
 2384              	 .loc 2 675 0
 2385 0084 7A69     	 ldr r2,[r7,#20]
 2386 0086 BB69     	 ldr r3,[r7,#24]
 2387 0088 1344     	 add r3,r3,r2
 2388 008a C3F51C53 	 rsb r3,r3,#9984
 2389 008e 1033     	 adds r3,r3,#16
 2390 0090 FA69     	 ldr r2,[r7,#28]
 2391 0092 02FB03F3 	 mul r3,r2,r3
 2392 0096 5B00     	 lsls r3,r3,#1
 2393 0098 FB60     	 str r3,[r7,#12]
 676:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = compare_ch2 / PWM_CCU8_DUTY_FULL_SCALE;
 2394              	 .loc 2 676 0
 2395 009a FB68     	 ldr r3,[r7,#12]
 2396 009c 3A4A     	 ldr r2,.L91
 2397 009e A2FB0323 	 umull r2,r3,r2,r3
 2398 00a2 5B0B     	 lsrs r3,r3,#13
 2399 00a4 FB60     	 str r3,[r7,#12]
 677:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 678:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 2400              	 .loc 2 678 0
 2401 00a6 7B68     	 ldr r3,[r7,#4]
 2402 00a8 9A68     	 ldr r2,[r3,#8]
 2403 00aa FB69     	 ldr r3,[r7,#28]
 2404 00ac 9BB2     	 uxth r3,r3
 2405 00ae 013B     	 subs r3,r3,#1
 2406 00b0 9BB2     	 uxth r3,r3
 2407 00b2 1046     	 mov r0,r2
 2408 00b4 1946     	 mov r1,r3
 2409 00b6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 679:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2410              	 .loc 2 679 0
 2411 00ba 7B68     	 ldr r3,[r7,#4]
 2412 00bc 9A68     	 ldr r2,[r3,#8]
 2413 00be 3B69     	 ldr r3,[r7,#16]
 2414 00c0 9BB2     	 uxth r3,r3
 2415 00c2 1046     	 mov r0,r2
 2416 00c4 0021     	 movs r1,#0
 2417 00c6 1A46     	 mov r2,r3
 2418 00c8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 680:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch1);
 681:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2419              	 .loc 2 681 0
 2420 00cc 7B68     	 ldr r3,[r7,#4]
 2421 00ce 9A68     	 ldr r2,[r3,#8]
 2422 00d0 FB68     	 ldr r3,[r7,#12]
 2423 00d2 9BB2     	 uxth r3,r3
 2424 00d4 1046     	 mov r0,r2
 2425 00d6 0121     	 movs r1,#1
 2426 00d8 1A46     	 mov r2,r3
 2427 00da FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 682:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch2);
 683:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2428              	 .loc 2 683 0
 2429 00de 7B68     	 ldr r3,[r7,#4]
 2430 00e0 5A68     	 ldr r2,[r3,#4]
 2431 00e2 7B68     	 ldr r3,[r7,#4]
 2432 00e4 1B69     	 ldr r3,[r3,#16]
 2433 00e6 1046     	 mov r0,r2
 2434 00e8 1946     	 mov r1,r3
 2435 00ea FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 684:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetPwmFreq:frequency set center aligned mode");
 685:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           status = PWM_CCU8_STATUS_SUCCESS;
 2436              	 .loc 2 685 0
 2437 00ee 0023     	 movs r3,#0
 2438 00f0 87F82730 	 strb r3,[r7,#39]
 2439 00f4 42E0     	 b .L87
 2440              	.L88:
 686:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 687:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 688:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 689:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 690:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if (period <= PWM_CCU8_MAX_TIMER_COUNT)
 2441              	 .loc 2 690 0
 2442 00f6 FB69     	 ldr r3,[r7,#28]
 2443 00f8 B3F5803F 	 cmp r3,#65536
 2444 00fc 3ED2     	 bcs .L87
 691:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 692:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = period * shift;
 2445              	 .loc 2 692 0
 2446 00fe FB69     	 ldr r3,[r7,#28]
 2447 0100 7A69     	 ldr r2,[r7,#20]
 2448 0102 02FB03F3 	 mul r3,r2,r3
 2449 0106 3B61     	 str r3,[r7,#16]
 693:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = compare_ch1 / PWM_CCU8_DUTY_FULL_SCALE;
 2450              	 .loc 2 693 0
 2451 0108 3B69     	 ldr r3,[r7,#16]
 2452 010a 1F4A     	 ldr r2,.L91
 2453 010c A2FB0323 	 umull r2,r3,r2,r3
 2454 0110 5B0B     	 lsrs r3,r3,#13
 2455 0112 3B61     	 str r3,[r7,#16]
 694:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = period * (shift + duty_cycle);
 2456              	 .loc 2 694 0
 2457 0114 7A69     	 ldr r2,[r7,#20]
 2458 0116 BB69     	 ldr r3,[r7,#24]
 2459 0118 1344     	 add r3,r3,r2
 2460 011a FA69     	 ldr r2,[r7,#28]
 2461 011c 02FB03F3 	 mul r3,r2,r3
 2462 0120 FB60     	 str r3,[r7,#12]
 695:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = compare_ch2 / PWM_CCU8_DUTY_FULL_SCALE;
 2463              	 .loc 2 695 0
 2464 0122 FB68     	 ldr r3,[r7,#12]
 2465 0124 184A     	 ldr r2,.L91
 2466 0126 A2FB0323 	 umull r2,r3,r2,r3
 2467 012a 5B0B     	 lsrs r3,r3,#13
 2468 012c FB60     	 str r3,[r7,#12]
 696:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 697:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 2469              	 .loc 2 697 0
 2470 012e 7B68     	 ldr r3,[r7,#4]
 2471 0130 9A68     	 ldr r2,[r3,#8]
 2472 0132 FB69     	 ldr r3,[r7,#28]
 2473 0134 9BB2     	 uxth r3,r3
 2474 0136 013B     	 subs r3,r3,#1
 2475 0138 9BB2     	 uxth r3,r3
 2476 013a 1046     	 mov r0,r2
 2477 013c 1946     	 mov r1,r3
 2478 013e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 698:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2479              	 .loc 2 698 0
 2480 0142 7B68     	 ldr r3,[r7,#4]
 2481 0144 9A68     	 ldr r2,[r3,#8]
 2482 0146 3B69     	 ldr r3,[r7,#16]
 2483 0148 9BB2     	 uxth r3,r3
 2484 014a 1046     	 mov r0,r2
 2485 014c 0021     	 movs r1,#0
 2486 014e 1A46     	 mov r2,r3
 2487 0150 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 699:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch1);
 700:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2488              	 .loc 2 700 0
 2489 0154 7B68     	 ldr r3,[r7,#4]
 2490 0156 9A68     	 ldr r2,[r3,#8]
 2491 0158 FB68     	 ldr r3,[r7,#12]
 2492 015a 9BB2     	 uxth r3,r3
 2493 015c 1046     	 mov r0,r2
 2494 015e 0121     	 movs r1,#1
 2495 0160 1A46     	 mov r2,r3
 2496 0162 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 701:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch2);
 702:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2497              	 .loc 2 702 0
 2498 0166 7B68     	 ldr r3,[r7,#4]
 2499 0168 5A68     	 ldr r2,[r3,#4]
 2500 016a 7B68     	 ldr r3,[r7,#4]
 2501 016c 1B69     	 ldr r3,[r3,#16]
 2502 016e 1046     	 mov r0,r2
 2503 0170 1946     	 mov r1,r3
 2504 0172 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 703:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetPwmFreq:frequency set edge aligned mode");
 704:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           status = PWM_CCU8_STATUS_SUCCESS;
 2505              	 .loc 2 704 0
 2506 0176 0023     	 movs r3,#0
 2507 0178 87F82730 	 strb r3,[r7,#39]
 2508              	.L87:
 705:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 706:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 707:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 708:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 709:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2509              	 .loc 2 709 0
 2510 017c 97F82730 	 ldrb r3,[r7,#39]
 710:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetFreqAsymmetric() api */
 2511              	 .loc 2 710 0
 2512 0180 1846     	 mov r0,r3
 2513 0182 2837     	 adds r7,r7,#40
 2514              	.LCFI142:
 2515              	 .cfi_def_cfa_offset 8
 2516 0184 BD46     	 mov sp,r7
 2517              	.LCFI143:
 2518              	 .cfi_def_cfa_register 13
 2519              	 
 2520 0186 80BD     	 pop {r7,pc}
 2521              	.L92:
 2522              	 .align 2
 2523              	.L91:
 2524 0188 5917B7D1 	 .word -776530087
 2525              	 .cfi_endproc
 2526              	.LFE260:
 2528              	 .section .text.PWM_CCU8_SetDutyCycleAsymmetric,"ax",%progbits
 2529              	 .align 2
 2530              	 .global PWM_CCU8_SetDutyCycleAsymmetric
 2531              	 .thumb
 2532              	 .thumb_func
 2534              	PWM_CCU8_SetDutyCycleAsymmetric:
 2535              	.LFB261:
 711:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 712:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 713:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 714:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the duty cycle and shift (uint32_t) for CCU8_CC8 slice in Asymmetric mode. */
 715:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*(shift + duty_cycle <= 100)  and (shift + duty_cycle >= 50) */
 716:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetDutyCycleAsymmetric(PWM_CCU8_t* handle_ptr, uint32_t shift, uint32_t 
 717:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2536              	 .loc 2 717 0
 2537              	 .cfi_startproc
 2538              	 
 2539              	 
 2540 0000 80B5     	 push {r7,lr}
 2541              	.LCFI144:
 2542              	 .cfi_def_cfa_offset 8
 2543              	 .cfi_offset 7,-8
 2544              	 .cfi_offset 14,-4
 2545 0002 88B0     	 sub sp,sp,#32
 2546              	.LCFI145:
 2547              	 .cfi_def_cfa_offset 40
 2548 0004 00AF     	 add r7,sp,#0
 2549              	.LCFI146:
 2550              	 .cfi_def_cfa_register 7
 2551 0006 F860     	 str r0,[r7,#12]
 2552 0008 B960     	 str r1,[r7,#8]
 2553 000a 7A60     	 str r2,[r7,#4]
 718:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 719:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 720:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 721:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 722:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 723:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2554              	 .loc 2 723 0
 2555 000c 0123     	 movs r3,#1
 2556 000e FB77     	 strb r3,[r7,#31]
 724:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDutyCycleAsymmetric:handle_ptr NULL", (handle_ptr != NULL));
 725:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2557              	 .loc 2 725 0
 2558 0010 FB68     	 ldr r3,[r7,#12]
 2559 0012 1B7F     	 ldrb r3,[r3,#28]
 2560 0014 002B     	 cmp r3,#0
 2561 0016 00F0A680 	 beq .L94
 726:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 727:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_tim
 2562              	 .loc 2 727 0
 2563 001a FB68     	 ldr r3,[r7,#12]
 2564 001c 1B68     	 ldr r3,[r3]
 2565 001e 9B6C     	 ldr r3,[r3,#72]
 2566 0020 1B78     	 ldrb r3,[r3]
 2567 0022 03F00103 	 and r3,r3,#1
 2568 0026 DBB2     	 uxtb r3,r3
 2569 0028 002B     	 cmp r3,#0
 2570 002a 58D0     	 beq .L95
 728:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 729:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /*center aligned mode*/
 730:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if (((shift + duty_cycle) > PWM_CCU8_ASYM_CA_MAX) || ((shift + duty_cycle) < PWM_CCU8_ASYM_CA
 2571              	 .loc 2 730 0
 2572 002c BA68     	 ldr r2,[r7,#8]
 2573 002e 7B68     	 ldr r3,[r7,#4]
 2574 0030 1344     	 add r3,r3,r2
 2575 0032 42F21072 	 movw r2,#10000
 2576 0036 9342     	 cmp r3,r2
 2577 0038 00F29580 	 bhi .L94
 2578              	 .loc 2 730 0 is_stmt 0 discriminator 1
 2579 003c BA68     	 ldr r2,[r7,#8]
 2580 003e 7B68     	 ldr r3,[r7,#4]
 2581 0040 1344     	 add r3,r3,r2
 2582 0042 41F28732 	 movw r2,#4999
 2583 0046 9342     	 cmp r3,r2
 2584 0048 40F28D80 	 bls .L94
 731:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 732:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode 50%% < (shift + d
 733:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 734:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else if (shift >= PWM_CCU8_ASYM_CA_SHIFT_MAX)
 2585              	 .loc 2 734 0 is_stmt 1
 2586 004c BB68     	 ldr r3,[r7,#8]
 2587 004e 41F28732 	 movw r2,#4999
 2588 0052 9342     	 cmp r3,r2
 2589 0054 00F28780 	 bhi .L94
 735:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 736:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode shift > 50%%");
 737:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 738:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 739:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 740:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = (uint32_t) XMC_CCU8_SLICE_GetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr);
 2590              	 .loc 2 740 0
 2591 0058 FB68     	 ldr r3,[r7,#12]
 2592 005a 9B68     	 ldr r3,[r3,#8]
 2593 005c 1846     	 mov r0,r3
 2594 005e FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerPeriodMatch
 2595 0062 0346     	 mov r3,r0
 2596 0064 BB61     	 str r3,[r7,#24]
 741:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 742:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = ((2U * period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2597              	 .loc 2 742 0
 2598 0066 BB69     	 ldr r3,[r7,#24]
 2599 0068 BA68     	 ldr r2,[r7,#8]
 2600 006a 02FB03F3 	 mul r3,r2,r3
 2601 006e 5B00     	 lsls r3,r3,#1
 2602 0070 3F4A     	 ldr r2,.L98
 2603 0072 A2FB0323 	 umull r2,r3,r2,r3
 2604 0076 5B0B     	 lsrs r3,r3,#13
 2605 0078 7B61     	 str r3,[r7,#20]
 743:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = ((2U * period * (PWM_CCU8_DUTY_FULL_SCALE - (shift + duty_cycle))) / PWM_CCU8
 2606              	 .loc 2 743 0
 2607 007a BA68     	 ldr r2,[r7,#8]
 2608 007c 7B68     	 ldr r3,[r7,#4]
 2609 007e 1344     	 add r3,r3,r2
 2610 0080 C3F51C53 	 rsb r3,r3,#9984
 2611 0084 1033     	 adds r3,r3,#16
 2612 0086 BA69     	 ldr r2,[r7,#24]
 2613 0088 02FB03F3 	 mul r3,r2,r3
 2614 008c 5B00     	 lsls r3,r3,#1
 2615 008e 384A     	 ldr r2,.L98
 2616 0090 A2FB0323 	 umull r2,r3,r2,r3
 2617 0094 5B0B     	 lsrs r3,r3,#13
 2618 0096 3B61     	 str r3,[r7,#16]
 744:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 745:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2619              	 .loc 2 745 0
 2620 0098 FB68     	 ldr r3,[r7,#12]
 2621 009a 9A68     	 ldr r2,[r3,#8]
 2622 009c 7B69     	 ldr r3,[r7,#20]
 2623 009e 9BB2     	 uxth r3,r3
 2624 00a0 1046     	 mov r0,r2
 2625 00a2 0021     	 movs r1,#0
 2626 00a4 1A46     	 mov r2,r3
 2627 00a6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 746:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch1);
 747:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2628              	 .loc 2 747 0
 2629 00aa FB68     	 ldr r3,[r7,#12]
 2630 00ac 9A68     	 ldr r2,[r3,#8]
 2631 00ae 3B69     	 ldr r3,[r7,#16]
 2632 00b0 9BB2     	 uxth r3,r3
 2633 00b2 1046     	 mov r0,r2
 2634 00b4 0121     	 movs r1,#1
 2635 00b6 1A46     	 mov r2,r3
 2636 00b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 748:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch2);
 749:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2637              	 .loc 2 749 0
 2638 00bc FB68     	 ldr r3,[r7,#12]
 2639 00be 5A68     	 ldr r2,[r3,#4]
 2640 00c0 FB68     	 ldr r3,[r7,#12]
 2641 00c2 1B69     	 ldr r3,[r3,#16]
 2642 00c4 1046     	 mov r0,r2
 2643 00c6 1946     	 mov r1,r3
 2644 00c8 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 750:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 751:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_duty = duty_cycle;
 2645              	 .loc 2 751 0
 2646 00cc FB68     	 ldr r3,[r7,#12]
 2647 00ce 7A68     	 ldr r2,[r7,#4]
 2648 00d0 DA62     	 str r2,[r3,#44]
 752:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_shift = shift;
 2649              	 .loc 2 752 0
 2650 00d2 FB68     	 ldr r3,[r7,#12]
 2651 00d4 BA68     	 ldr r2,[r7,#8]
 2652 00d6 1A63     	 str r2,[r3,#48]
 753:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 754:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:dutycycle set center aligned mode");
 755:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 2653              	 .loc 2 755 0
 2654 00d8 0023     	 movs r3,#0
 2655 00da FB77     	 strb r3,[r7,#31]
 2656 00dc 43E0     	 b .L94
 2657              	.L95:
 756:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 757:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 758:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 759:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 760:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 761:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /*edge aligned mode*/
 762:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if (((shift + duty_cycle) > PWM_CCU8_ASYM_EA_MAX))
 2658              	 .loc 2 762 0
 2659 00de BA68     	 ldr r2,[r7,#8]
 2660 00e0 7B68     	 ldr r3,[r7,#4]
 2661 00e2 1344     	 add r3,r3,r2
 2662 00e4 42F21072 	 movw r2,#10000
 2663 00e8 9342     	 cmp r3,r2
 2664 00ea 3CD8     	 bhi .L94
 763:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 764:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set edge aligned mode (shift + duty_cycle
 765:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 766:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 767:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 768:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = (uint32_t) XMC_CCU8_SLICE_GetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr);
 2665              	 .loc 2 768 0
 2666 00ec FB68     	 ldr r3,[r7,#12]
 2667 00ee 9B68     	 ldr r3,[r3,#8]
 2668 00f0 1846     	 mov r0,r3
 2669 00f2 FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerPeriodMatch
 2670 00f6 0346     	 mov r3,r0
 2671 00f8 BB61     	 str r3,[r7,#24]
 769:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 770:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = ((period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2672              	 .loc 2 770 0
 2673 00fa BB69     	 ldr r3,[r7,#24]
 2674 00fc BA68     	 ldr r2,[r7,#8]
 2675 00fe 02FB03F3 	 mul r3,r2,r3
 2676 0102 1B4A     	 ldr r2,.L98
 2677 0104 A2FB0323 	 umull r2,r3,r2,r3
 2678 0108 5B0B     	 lsrs r3,r3,#13
 2679 010a 7B61     	 str r3,[r7,#20]
 771:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = ((period * (shift + duty_cycle)) / PWM_CCU8_DUTY_FULL_SCALE);
 2680              	 .loc 2 771 0
 2681 010c BA68     	 ldr r2,[r7,#8]
 2682 010e 7B68     	 ldr r3,[r7,#4]
 2683 0110 1344     	 add r3,r3,r2
 2684 0112 BA69     	 ldr r2,[r7,#24]
 2685 0114 02FB03F3 	 mul r3,r2,r3
 2686 0118 154A     	 ldr r2,.L98
 2687 011a A2FB0323 	 umull r2,r3,r2,r3
 2688 011e 5B0B     	 lsrs r3,r3,#13
 2689 0120 3B61     	 str r3,[r7,#16]
 772:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 773:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2690              	 .loc 2 773 0
 2691 0122 FB68     	 ldr r3,[r7,#12]
 2692 0124 9A68     	 ldr r2,[r3,#8]
 2693 0126 7B69     	 ldr r3,[r7,#20]
 2694 0128 9BB2     	 uxth r3,r3
 2695 012a 1046     	 mov r0,r2
 2696 012c 0021     	 movs r1,#0
 2697 012e 1A46     	 mov r2,r3
 2698 0130 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 774:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch1);
 775:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2699              	 .loc 2 775 0
 2700 0134 FB68     	 ldr r3,[r7,#12]
 2701 0136 9A68     	 ldr r2,[r3,#8]
 2702 0138 3B69     	 ldr r3,[r7,#16]
 2703 013a 9BB2     	 uxth r3,r3
 2704 013c 1046     	 mov r0,r2
 2705 013e 0121     	 movs r1,#1
 2706 0140 1A46     	 mov r2,r3
 2707 0142 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 776:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch2);
 777:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2708              	 .loc 2 777 0
 2709 0146 FB68     	 ldr r3,[r7,#12]
 2710 0148 5A68     	 ldr r2,[r3,#4]
 2711 014a FB68     	 ldr r3,[r7,#12]
 2712 014c 1B69     	 ldr r3,[r3,#16]
 2713 014e 1046     	 mov r0,r2
 2714 0150 1946     	 mov r1,r3
 2715 0152 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 778:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 779:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_duty = duty_cycle;
 2716              	 .loc 2 779 0
 2717 0156 FB68     	 ldr r3,[r7,#12]
 2718 0158 7A68     	 ldr r2,[r7,#4]
 2719 015a DA62     	 str r2,[r3,#44]
 780:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_shift = shift;
 2720              	 .loc 2 780 0
 2721 015c FB68     	 ldr r3,[r7,#12]
 2722 015e BA68     	 ldr r2,[r7,#8]
 2723 0160 1A63     	 str r2,[r3,#48]
 781:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 782:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:dutycycle set edge aligned mode");
 783:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 2724              	 .loc 2 783 0
 2725 0162 0023     	 movs r3,#0
 2726 0164 FB77     	 strb r3,[r7,#31]
 2727              	.L94:
 784:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 785:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 786:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 787:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2728              	 .loc 2 787 0
 2729 0166 FB7F     	 ldrb r3,[r7,#31]
 788:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetDutyCycleAsymmetric() api */
 2730              	 .loc 2 788 0
 2731 0168 1846     	 mov r0,r3
 2732 016a 2037     	 adds r7,r7,#32
 2733              	.LCFI147:
 2734              	 .cfi_def_cfa_offset 8
 2735 016c BD46     	 mov sp,r7
 2736              	.LCFI148:
 2737              	 .cfi_def_cfa_register 13
 2738              	 
 2739 016e 80BD     	 pop {r7,pc}
 2740              	.L99:
 2741              	 .align 2
 2742              	.L98:
 2743 0170 5917B7D1 	 .word -776530087
 2744              	 .cfi_endproc
 2745              	.LFE261:
 2747              	 .section .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric,"ax",%progbits
 2748              	 .align 2
 2749              	 .global PWM_CCU8_SetFreqAndDutyCycleAsymmetric
 2750              	 .thumb
 2751              	 .thumb_func
 2753              	PWM_CCU8_SetFreqAndDutyCycleAsymmetric:
 2754              	.LFB262:
 789:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 790:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 791:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 792:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency, (uint32_t)shift and (uint32_t)duty cycle for CCU8_CC8 slice Asymmetric Mode. 
 793:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqAndDutyCycleAsymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_
 794:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                          uint32_t duty_cycle)
 795:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2755              	 .loc 2 795 0
 2756              	 .cfi_startproc
 2757              	 
 2758              	 
 2759 0000 80B5     	 push {r7,lr}
 2760              	.LCFI149:
 2761              	 .cfi_def_cfa_offset 8
 2762              	 .cfi_offset 7,-8
 2763              	 .cfi_offset 14,-4
 2764 0002 8AB0     	 sub sp,sp,#40
 2765              	.LCFI150:
 2766              	 .cfi_def_cfa_offset 48
 2767 0004 00AF     	 add r7,sp,#0
 2768              	.LCFI151:
 2769              	 .cfi_def_cfa_register 7
 2770 0006 F860     	 str r0,[r7,#12]
 2771 0008 B960     	 str r1,[r7,#8]
 2772 000a 7A60     	 str r2,[r7,#4]
 2773 000c 3B60     	 str r3,[r7]
 796:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 797:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 798:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 799:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 800:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 801:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 802:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2774              	 .loc 2 802 0
 2775 000e 0123     	 movs r3,#1
 2776 0010 87F82730 	 strb r3,[r7,#39]
 803:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 2777              	 .loc 2 803 0
 2778 0014 0023     	 movs r3,#0
 2779 0016 3B62     	 str r3,[r7,#32]
 804:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:handle_ptr NULL", (handle_ptr != NULL));
 805:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2780              	 .loc 2 805 0
 2781 0018 FB68     	 ldr r3,[r7,#12]
 2782 001a 1B7F     	 ldrb r3,[r3,#28]
 2783 001c 002B     	 cmp r3,#0
 2784 001e 00F0CA80 	 beq .L101
 806:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 807:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 2785              	 .loc 2 807 0
 2786 0022 BB68     	 ldr r3,[r7,#8]
 2787 0024 002B     	 cmp r3,#0
 2788 0026 00F0C680 	 beq .L101
 808:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 809:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:cannot set frequency 0Hz");
 810:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 811:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 812:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 813:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 2789              	 .loc 2 813 0
 2790 002a FB68     	 ldr r3,[r7,#12]
 2791 002c 1B6A     	 ldr r3,[r3,#32]
 2792 002e 3B62     	 str r3,[r7,#32]
 814:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 2793              	 .loc 2 814 0
 2794 0030 3A6A     	 ldr r2,[r7,#32]
 2795 0032 BB68     	 ldr r3,[r7,#8]
 2796 0034 B2FBF3F3 	 udiv r3,r2,r3
 2797 0038 FB61     	 str r3,[r7,#28]
 815:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 816:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 2798              	 .loc 2 816 0
 2799 003a FB68     	 ldr r3,[r7,#12]
 2800 003c 1B68     	 ldr r3,[r3]
 2801 003e 9B6C     	 ldr r3,[r3,#72]
 2802 0040 1B78     	 ldrb r3,[r3]
 2803 0042 03F00103 	 and r3,r3,#1
 2804 0046 DBB2     	 uxtb r3,r3
 2805 0048 002B     	 cmp r3,#0
 2806 004a 68D0     	 beq .L102
 817:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 818:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if (((shift + duty_cycle) > PWM_CCU8_ASYM_CA_MAX) || ((shift + duty_cycle) < PWM_CCU8_ASYM_
 2807              	 .loc 2 818 0
 2808 004c 7A68     	 ldr r2,[r7,#4]
 2809 004e 3B68     	 ldr r3,[r7]
 2810 0050 1344     	 add r3,r3,r2
 2811 0052 42F21072 	 movw r2,#10000
 2812 0056 9342     	 cmp r3,r2
 2813 0058 00F2AD80 	 bhi .L101
 2814              	 .loc 2 818 0 is_stmt 0 discriminator 1
 2815 005c 7A68     	 ldr r2,[r7,#4]
 2816 005e 3B68     	 ldr r3,[r7]
 2817 0060 1344     	 add r3,r3,r2
 2818 0062 41F28732 	 movw r2,#4999
 2819 0066 9342     	 cmp r3,r2
 2820 0068 40F2A580 	 bls .L101
 819:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 820:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode 50%% < (shift +
 821:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 822:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         else if (shift >= PWM_CCU8_ASYM_CA_SHIFT_MAX)
 2821              	 .loc 2 822 0 is_stmt 1
 2822 006c 7B68     	 ldr r3,[r7,#4]
 2823 006e 41F28732 	 movw r2,#4999
 2824 0072 9342     	 cmp r3,r2
 2825 0074 00F29F80 	 bhi .L101
 823:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 824:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode shift > 50%%");
 825:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 826:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         else
 827:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 828:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           period = period >> 1U;/*divide by 2*/
 2826              	 .loc 2 828 0
 2827 0078 FB69     	 ldr r3,[r7,#28]
 2828 007a 5B08     	 lsrs r3,r3,#1
 2829 007c FB61     	 str r3,[r7,#28]
 829:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 830:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 2830              	 .loc 2 830 0
 2831 007e FB69     	 ldr r3,[r7,#28]
 2832 0080 002B     	 cmp r3,#0
 2833 0082 00F09880 	 beq .L101
 2834              	 .loc 2 830 0 is_stmt 0 discriminator 1
 2835 0086 FB69     	 ldr r3,[r7,#28]
 2836 0088 B3F5803F 	 cmp r3,#65536
 2837 008c 80F09380 	 bcs .L101
 831:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           {
 832:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch1 = ((2U * period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2838              	 .loc 2 832 0 is_stmt 1
 2839 0090 FB69     	 ldr r3,[r7,#28]
 2840 0092 7A68     	 ldr r2,[r7,#4]
 2841 0094 02FB03F3 	 mul r3,r2,r3
 2842 0098 5B00     	 lsls r3,r3,#1
 2843 009a 4A4A     	 ldr r2,.L105
 2844 009c A2FB0323 	 umull r2,r3,r2,r3
 2845 00a0 5B0B     	 lsrs r3,r3,#13
 2846 00a2 BB61     	 str r3,[r7,#24]
 833:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch2 =
 834:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                 ((2U * period * (PWM_CCU8_DUTY_FULL_SCALE - (shift + duty_cycle))) / PWM_CCU8_DUTY_
 2847              	 .loc 2 834 0
 2848 00a4 7A68     	 ldr r2,[r7,#4]
 2849 00a6 3B68     	 ldr r3,[r7]
 2850 00a8 1344     	 add r3,r3,r2
 2851 00aa C3F51C53 	 rsb r3,r3,#9984
 2852 00ae 1033     	 adds r3,r3,#16
 2853 00b0 FA69     	 ldr r2,[r7,#28]
 2854 00b2 02FB03F3 	 mul r3,r2,r3
 2855 00b6 5B00     	 lsls r3,r3,#1
 833:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch2 =
 2856              	 .loc 2 833 0
 2857 00b8 424A     	 ldr r2,.L105
 2858 00ba A2FB0323 	 umull r2,r3,r2,r3
 2859 00be 5B0B     	 lsrs r3,r3,#13
 2860 00c0 7B61     	 str r3,[r7,#20]
 835:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 836:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U))
 2861              	 .loc 2 836 0
 2862 00c2 FB68     	 ldr r3,[r7,#12]
 2863 00c4 9A68     	 ldr r2,[r3,#8]
 2864 00c6 FB69     	 ldr r3,[r7,#28]
 2865 00c8 9BB2     	 uxth r3,r3
 2866 00ca 013B     	 subs r3,r3,#1
 2867 00cc 9BB2     	 uxth r3,r3
 2868 00ce 1046     	 mov r0,r2
 2869 00d0 1946     	 mov r1,r3
 2870 00d2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 837:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2871              	 .loc 2 837 0
 2872 00d6 FB68     	 ldr r3,[r7,#12]
 2873 00d8 9A68     	 ldr r2,[r3,#8]
 2874 00da BB69     	 ldr r3,[r7,#24]
 2875 00dc 9BB2     	 uxth r3,r3
 2876 00de 1046     	 mov r0,r2
 2877 00e0 0021     	 movs r1,#0
 2878 00e2 1A46     	 mov r2,r3
 2879 00e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 838:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch1);
 839:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2880              	 .loc 2 839 0
 2881 00e8 FB68     	 ldr r3,[r7,#12]
 2882 00ea 9A68     	 ldr r2,[r3,#8]
 2883 00ec 7B69     	 ldr r3,[r7,#20]
 2884 00ee 9BB2     	 uxth r3,r3
 2885 00f0 1046     	 mov r0,r2
 2886 00f2 0121     	 movs r1,#1
 2887 00f4 1A46     	 mov r2,r3
 2888 00f6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 840:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch2);
 841:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk)
 2889              	 .loc 2 841 0
 2890 00fa FB68     	 ldr r3,[r7,#12]
 2891 00fc 5A68     	 ldr r2,[r3,#4]
 2892 00fe FB68     	 ldr r3,[r7,#12]
 2893 0100 1B69     	 ldr r3,[r3,#16]
 2894 0102 1046     	 mov r0,r2
 2895 0104 1946     	 mov r1,r3
 2896 0106 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 842:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 843:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_duty = duty_cycle;
 2897              	 .loc 2 843 0
 2898 010a FB68     	 ldr r3,[r7,#12]
 2899 010c 3A68     	 ldr r2,[r7]
 2900 010e DA62     	 str r2,[r3,#44]
 844:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_shift = shift;
 2901              	 .loc 2 844 0
 2902 0110 FB68     	 ldr r3,[r7,#12]
 2903 0112 7A68     	 ldr r2,[r7,#4]
 2904 0114 1A63     	 str r2,[r3,#48]
 845:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 846:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:frequency and duty set center aligned
 847:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             status = PWM_CCU8_STATUS_SUCCESS;
 2905              	 .loc 2 847 0
 2906 0116 0023     	 movs r3,#0
 2907 0118 87F82730 	 strb r3,[r7,#39]
 2908 011c 4BE0     	 b .L101
 2909              	.L102:
 848:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           }
 849:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 850:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 851:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 852:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 853:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if (period <= PWM_CCU8_MAX_TIMER_COUNT)
 2910              	 .loc 2 853 0
 2911 011e FB69     	 ldr r3,[r7,#28]
 2912 0120 B3F5803F 	 cmp r3,#65536
 2913 0124 47D2     	 bcs .L101
 854:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 855:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           if (((shift + duty_cycle) > PWM_CCU8_ASYM_EA_MAX))
 2914              	 .loc 2 855 0
 2915 0126 7A68     	 ldr r2,[r7,#4]
 2916 0128 3B68     	 ldr r3,[r7]
 2917 012a 1344     	 add r3,r3,r2
 2918 012c 42F21072 	 movw r2,#10000
 2919 0130 9342     	 cmp r3,r2
 2920 0132 40D8     	 bhi .L101
 856:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           {
 857:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set edge aligned mode (shift + duty_c
 858:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           }
 859:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           else
 860:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           {
 861:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch1 = ((period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2921              	 .loc 2 861 0
 2922 0134 FB69     	 ldr r3,[r7,#28]
 2923 0136 7A68     	 ldr r2,[r7,#4]
 2924 0138 02FB03F3 	 mul r3,r2,r3
 2925 013c 214A     	 ldr r2,.L105
 2926 013e A2FB0323 	 umull r2,r3,r2,r3
 2927 0142 5B0B     	 lsrs r3,r3,#13
 2928 0144 BB61     	 str r3,[r7,#24]
 862:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch2 = ((period * (shift + duty_cycle)) / PWM_CCU8_DUTY_FULL_SCALE);
 2929              	 .loc 2 862 0
 2930 0146 7A68     	 ldr r2,[r7,#4]
 2931 0148 3B68     	 ldr r3,[r7]
 2932 014a 1344     	 add r3,r3,r2
 2933 014c FA69     	 ldr r2,[r7,#28]
 2934 014e 02FB03F3 	 mul r3,r2,r3
 2935 0152 1C4A     	 ldr r2,.L105
 2936 0154 A2FB0323 	 umull r2,r3,r2,r3
 2937 0158 5B0B     	 lsrs r3,r3,#13
 2938 015a 7B61     	 str r3,[r7,#20]
 863:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 864:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U))
 2939              	 .loc 2 864 0
 2940 015c FB68     	 ldr r3,[r7,#12]
 2941 015e 9A68     	 ldr r2,[r3,#8]
 2942 0160 FB69     	 ldr r3,[r7,#28]
 2943 0162 9BB2     	 uxth r3,r3
 2944 0164 013B     	 subs r3,r3,#1
 2945 0166 9BB2     	 uxth r3,r3
 2946 0168 1046     	 mov r0,r2
 2947 016a 1946     	 mov r1,r3
 2948 016c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 865:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2949              	 .loc 2 865 0
 2950 0170 FB68     	 ldr r3,[r7,#12]
 2951 0172 9A68     	 ldr r2,[r3,#8]
 2952 0174 BB69     	 ldr r3,[r7,#24]
 2953 0176 9BB2     	 uxth r3,r3
 2954 0178 1046     	 mov r0,r2
 2955 017a 0021     	 movs r1,#0
 2956 017c 1A46     	 mov r2,r3
 2957 017e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 866:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch1);
 867:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2958              	 .loc 2 867 0
 2959 0182 FB68     	 ldr r3,[r7,#12]
 2960 0184 9A68     	 ldr r2,[r3,#8]
 2961 0186 7B69     	 ldr r3,[r7,#20]
 2962 0188 9BB2     	 uxth r3,r3
 2963 018a 1046     	 mov r0,r2
 2964 018c 0121     	 movs r1,#1
 2965 018e 1A46     	 mov r2,r3
 2966 0190 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 868:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch2);
 869:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk)
 2967              	 .loc 2 869 0
 2968 0194 FB68     	 ldr r3,[r7,#12]
 2969 0196 5A68     	 ldr r2,[r3,#4]
 2970 0198 FB68     	 ldr r3,[r7,#12]
 2971 019a 1B69     	 ldr r3,[r3,#16]
 2972 019c 1046     	 mov r0,r2
 2973 019e 1946     	 mov r1,r3
 2974 01a0 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 870:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 871:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_duty = duty_cycle;
 2975              	 .loc 2 871 0
 2976 01a4 FB68     	 ldr r3,[r7,#12]
 2977 01a6 3A68     	 ldr r2,[r7]
 2978 01a8 DA62     	 str r2,[r3,#44]
 872:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_shift = shift;
 2979              	 .loc 2 872 0
 2980 01aa FB68     	 ldr r3,[r7,#12]
 2981 01ac 7A68     	 ldr r2,[r7,#4]
 2982 01ae 1A63     	 str r2,[r3,#48]
 873:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 874:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:frequency and duty set edge aligned m
 875:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             status = PWM_CCU8_STATUS_SUCCESS;
 2983              	 .loc 2 875 0
 2984 01b0 0023     	 movs r3,#0
 2985 01b2 87F82730 	 strb r3,[r7,#39]
 2986              	.L101:
 876:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           }
 877:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 878:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 879:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 880:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 881:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 882:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2987              	 .loc 2 882 0
 2988 01b6 97F82730 	 ldrb r3,[r7,#39]
 883:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetFreqAndDutyCycleAsymmetric() api */
 2989              	 .loc 2 883 0
 2990 01ba 1846     	 mov r0,r3
 2991 01bc 2837     	 adds r7,r7,#40
 2992              	.LCFI152:
 2993              	 .cfi_def_cfa_offset 8
 2994 01be BD46     	 mov sp,r7
 2995              	.LCFI153:
 2996              	 .cfi_def_cfa_register 13
 2997              	 
 2998 01c0 80BD     	 pop {r7,pc}
 2999              	.L106:
 3000 01c2 00BF     	 .align 2
 3001              	.L105:
 3002 01c4 5917B7D1 	 .word -776530087
 3003              	 .cfi_endproc
 3004              	.LFE262:
 3006              	 .section .text.PWM_CCU8_SetDither,"ax",%progbits
 3007              	 .align 2
 3008              	 .global PWM_CCU8_SetDither
 3009              	 .thumb
 3010              	 .thumb_func
 3012              	PWM_CCU8_SetDither:
 3013              	.LFB263:
 884:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 885:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 886:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 887:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the dither value, enables the dither. */
 888:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_SetDither(PWM_CCU8_t* handle_ptr, bool dither_period, bool dither_comp, uint8_t dithe
 889:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3014              	 .loc 2 889 0
 3015              	 .cfi_startproc
 3016              	 
 3017              	 
 3018 0000 80B5     	 push {r7,lr}
 3019              	.LCFI154:
 3020              	 .cfi_def_cfa_offset 8
 3021              	 .cfi_offset 7,-8
 3022              	 .cfi_offset 14,-4
 3023 0002 82B0     	 sub sp,sp,#8
 3024              	.LCFI155:
 3025              	 .cfi_def_cfa_offset 16
 3026 0004 00AF     	 add r7,sp,#0
 3027              	.LCFI156:
 3028              	 .cfi_def_cfa_register 7
 3029 0006 7860     	 str r0,[r7,#4]
 3030 0008 0846     	 mov r0,r1
 3031 000a 1146     	 mov r1,r2
 3032 000c 1A46     	 mov r2,r3
 3033 000e 0346     	 mov r3,r0
 3034 0010 FB70     	 strb r3,[r7,#3]
 3035 0012 0B46     	 mov r3,r1
 3036 0014 BB70     	 strb r3,[r7,#2]
 3037 0016 1346     	 mov r3,r2
 3038 0018 7B70     	 strb r3,[r7,#1]
 890:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 891:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDither:handle_ptr NULL", (handle_ptr != NULL));
 892:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_EnableDithering(handle_ptr->ccu8_slice_ptr, dither_period, dither_comp, dither_val
 3039              	 .loc 2 892 0
 3040 001a 7B68     	 ldr r3,[r7,#4]
 3041 001c 9868     	 ldr r0,[r3,#8]
 3042 001e F978     	 ldrb r1,[r7,#3]
 3043 0020 BA78     	 ldrb r2,[r7,#2]
 3044 0022 7B78     	 ldrb r3,[r7,#1]
 3045 0024 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableDithering
 893:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->dither_shadow_txfr_msk);
 3046              	 .loc 2 893 0
 3047 0028 7B68     	 ldr r3,[r7,#4]
 3048 002a 5A68     	 ldr r2,[r3,#4]
 3049 002c 7B68     	 ldr r3,[r7,#4]
 3050 002e 5B69     	 ldr r3,[r3,#20]
 3051 0030 1046     	 mov r0,r2
 3052 0032 1946     	 mov r1,r3
 3053 0034 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 894:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_SetDither:dither compare value set");
 895:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 896:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetDither() api */
 3054              	 .loc 2 896 0
 3055 0038 0837     	 adds r7,r7,#8
 3056              	.LCFI157:
 3057              	 .cfi_def_cfa_offset 8
 3058 003a BD46     	 mov sp,r7
 3059              	.LCFI158:
 3060              	 .cfi_def_cfa_register 13
 3061              	 
 3062 003c 80BD     	 pop {r7,pc}
 3063              	 .cfi_endproc
 3064              	.LFE263:
 3066 003e 00BF     	 .section .text.PWM_CCU8_ClearTrap,"ax",%progbits
 3067              	 .align 2
 3068              	 .global PWM_CCU8_ClearTrap
 3069              	 .thumb
 3070              	 .thumb_func
 3072              	PWM_CCU8_ClearTrap:
 3073              	.LFB264:
 897:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 898:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*exits trap condition if trap signal is inactive */
 899:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_ClearTrap(PWM_CCU8_t* handle_ptr)
 900:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3074              	 .loc 2 900 0
 3075              	 .cfi_startproc
 3076              	 
 3077              	 
 3078 0000 80B5     	 push {r7,lr}
 3079              	.LCFI159:
 3080              	 .cfi_def_cfa_offset 8
 3081              	 .cfi_offset 7,-8
 3082              	 .cfi_offset 14,-4
 3083 0002 82B0     	 sub sp,sp,#8
 3084              	.LCFI160:
 3085              	 .cfi_def_cfa_offset 16
 3086 0004 00AF     	 add r7,sp,#0
 3087              	.LCFI161:
 3088              	 .cfi_def_cfa_register 7
 3089 0006 7860     	 str r0,[r7,#4]
 901:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 902:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_ClearTrap:handle_ptr NULL", (handle_ptr != NULL));
 903:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ClearEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2);
 3090              	 .loc 2 903 0
 3091 0008 7B68     	 ldr r3,[r7,#4]
 3092 000a 9B68     	 ldr r3,[r3,#8]
 3093 000c 1846     	 mov r0,r3
 3094 000e 0A21     	 movs r1,#10
 3095 0010 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 904:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_ClearTrap:trap event cleared");
 905:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 906:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_ClearTrap() api */
 3096              	 .loc 2 906 0
 3097 0014 0837     	 adds r7,r7,#8
 3098              	.LCFI162:
 3099              	 .cfi_def_cfa_offset 8
 3100 0016 BD46     	 mov sp,r7
 3101              	.LCFI163:
 3102              	 .cfi_def_cfa_register 13
 3103              	 
 3104 0018 80BD     	 pop {r7,pc}
 3105              	 .cfi_endproc
 3106              	.LFE264:
 3108 001a 00BF     	 .section .text.PWM_CCU8_SetDeadTime,"ax",%progbits
 3109              	 .align 2
 3110              	 .global PWM_CCU8_SetDeadTime
 3111              	 .thumb
 3112              	 .thumb_func
 3114              	PWM_CCU8_SetDeadTime:
 3115              	.LFB265:
 907:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 908:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the dead time*/
 909:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_SetDeadTime(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel, uint8_t
 910:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                           uint8_t fall_value)
 911:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3116              	 .loc 2 911 0
 3117              	 .cfi_startproc
 3118              	 
 3119              	 
 3120 0000 80B5     	 push {r7,lr}
 3121              	.LCFI164:
 3122              	 .cfi_def_cfa_offset 8
 3123              	 .cfi_offset 7,-8
 3124              	 .cfi_offset 14,-4
 3125 0002 82B0     	 sub sp,sp,#8
 3126              	.LCFI165:
 3127              	 .cfi_def_cfa_offset 16
 3128 0004 00AF     	 add r7,sp,#0
 3129              	.LCFI166:
 3130              	 .cfi_def_cfa_register 7
 3131 0006 7860     	 str r0,[r7,#4]
 3132 0008 0846     	 mov r0,r1
 3133 000a 1146     	 mov r1,r2
 3134 000c 1A46     	 mov r2,r3
 3135 000e 0346     	 mov r3,r0
 3136 0010 FB70     	 strb r3,[r7,#3]
 3137 0012 0B46     	 mov r3,r1
 3138 0014 BB70     	 strb r3,[r7,#2]
 3139 0016 1346     	 mov r3,r2
 3140 0018 7B70     	 strb r3,[r7,#1]
 912:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDeadTime:handle_ptr NULL", (handle_ptr != NULL));
 913:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetDeadTimeValue(handle_ptr->ccu8_slice_ptr, channel, rise_value, fall_value);
 3141              	 .loc 2 913 0
 3142 001a 7B68     	 ldr r3,[r7,#4]
 3143 001c 9868     	 ldr r0,[r3,#8]
 3144 001e F978     	 ldrb r1,[r7,#3]
 3145 0020 BA78     	 ldrb r2,[r7,#2]
 3146 0022 7B78     	 ldrb r3,[r7,#1]
 3147 0024 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDeadTimeValue
 914:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_SetDeadTime:dead time set");
 915:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetDeadTime() api */
 3148              	 .loc 2 915 0
 3149 0028 0837     	 adds r7,r7,#8
 3150              	.LCFI167:
 3151              	 .cfi_def_cfa_offset 8
 3152 002a BD46     	 mov sp,r7
 3153              	.LCFI168:
 3154              	 .cfi_def_cfa_register 13
 3155              	 
 3156 002c 80BD     	 pop {r7,pc}
 3157              	 .cfi_endproc
 3158              	.LFE265:
 3160 002e 00BF     	 .section .text.PWM_CCU8_GetInterruptStatus,"ax",%progbits
 3161              	 .align 2
 3162              	 .global PWM_CCU8_GetInterruptStatus
 3163              	 .thumb
 3164              	 .thumb_func
 3166              	PWM_CCU8_GetInterruptStatus:
 3167              	.LFB266:
 916:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 917:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Gets the interrupt status of  CCU8_CC8 slice. */
 918:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** bool PWM_CCU8_GetInterruptStatus(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_IRQ_ID_t pwm_interrupt)
 919:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3168              	 .loc 2 919 0
 3169              	 .cfi_startproc
 3170              	 
 3171              	 
 3172 0000 80B5     	 push {r7,lr}
 3173              	.LCFI169:
 3174              	 .cfi_def_cfa_offset 8
 3175              	 .cfi_offset 7,-8
 3176              	 .cfi_offset 14,-4
 3177 0002 84B0     	 sub sp,sp,#16
 3178              	.LCFI170:
 3179              	 .cfi_def_cfa_offset 24
 3180 0004 00AF     	 add r7,sp,#0
 3181              	.LCFI171:
 3182              	 .cfi_def_cfa_register 7
 3183 0006 7860     	 str r0,[r7,#4]
 3184 0008 0B46     	 mov r3,r1
 3185 000a FB70     	 strb r3,[r7,#3]
 920:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   bool status = (bool) false;
 3186              	 .loc 2 920 0
 3187 000c 0023     	 movs r3,#0
 3188 000e FB73     	 strb r3,[r7,#15]
 921:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_GetInterruptStatus:handle_ptr NULL", (handle_ptr != NULL));
 922:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = XMC_CCU8_SLICE_GetEvent(handle_ptr->ccu8_slice_ptr, pwm_interrupt);
 3189              	 .loc 2 922 0
 3190 0010 7B68     	 ldr r3,[r7,#4]
 3191 0012 9A68     	 ldr r2,[r3,#8]
 3192 0014 FB78     	 ldrb r3,[r7,#3]
 3193 0016 1046     	 mov r0,r2
 3194 0018 1946     	 mov r1,r3
 3195 001a FFF7FEFF 	 bl XMC_CCU8_SLICE_GetEvent
 3196 001e 0346     	 mov r3,r0
 3197 0020 FB73     	 strb r3,[r7,#15]
 923:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 3198              	 .loc 2 923 0
 3199 0022 FB7B     	 ldrb r3,[r7,#15]
 924:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_GetInterruptStatus() api */
 3200              	 .loc 2 924 0
 3201 0024 1846     	 mov r0,r3
 3202 0026 1037     	 adds r7,r7,#16
 3203              	.LCFI172:
 3204              	 .cfi_def_cfa_offset 8
 3205 0028 BD46     	 mov sp,r7
 3206              	.LCFI173:
 3207              	 .cfi_def_cfa_register 13
 3208              	 
 3209 002a 80BD     	 pop {r7,pc}
 3210              	 .cfi_endproc
 3211              	.LFE266:
 3213              	 .section .text.PWM_CCU8_ClearEvent,"ax",%progbits
 3214              	 .align 2
 3215              	 .global PWM_CCU8_ClearEvent
 3216              	 .thumb
 3217              	 .thumb_func
 3219              	PWM_CCU8_ClearEvent:
 3220              	.LFB267:
 925:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 926:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Acknowledges the interrupt of  CCU8_CC8 slice. */
 927:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_ClearEvent(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_IRQ_ID_t pwm_interrupt)
 928:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3221              	 .loc 2 928 0
 3222              	 .cfi_startproc
 3223              	 
 3224              	 
 3225 0000 80B5     	 push {r7,lr}
 3226              	.LCFI174:
 3227              	 .cfi_def_cfa_offset 8
 3228              	 .cfi_offset 7,-8
 3229              	 .cfi_offset 14,-4
 3230 0002 82B0     	 sub sp,sp,#8
 3231              	.LCFI175:
 3232              	 .cfi_def_cfa_offset 16
 3233 0004 00AF     	 add r7,sp,#0
 3234              	.LCFI176:
 3235              	 .cfi_def_cfa_register 7
 3236 0006 7860     	 str r0,[r7,#4]
 3237 0008 0B46     	 mov r3,r1
 3238 000a FB70     	 strb r3,[r7,#3]
 929:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_ClearEvent:handle_ptr NULL", (handle_ptr != NULL));
 930:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ClearEvent(handle_ptr->ccu8_slice_ptr, pwm_interrupt);
 3239              	 .loc 2 930 0
 3240 000c 7B68     	 ldr r3,[r7,#4]
 3241 000e 9A68     	 ldr r2,[r3,#8]
 3242 0010 FB78     	 ldrb r3,[r7,#3]
 3243 0012 1046     	 mov r0,r2
 3244 0014 1946     	 mov r1,r3
 3245 0016 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 931:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_ClearEvent:Acknowledge Interrupt");
 932:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_ClearEvent() api */
 3246              	 .loc 2 932 0
 3247 001a 0837     	 adds r7,r7,#8
 3248              	.LCFI177:
 3249              	 .cfi_def_cfa_offset 8
 3250 001c BD46     	 mov sp,r7
 3251              	.LCFI178:
 3252              	 .cfi_def_cfa_register 13
 3253              	 
 3254 001e 80BD     	 pop {r7,pc}
 3255              	 .cfi_endproc
 3256              	.LFE267:
 3258              	 .text
 3259              	.Letext0:
 3260              	 .file 3 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3261              	 .file 4 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3262              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 3263              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc/xmc_gpio.h"
 3264              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc/xmc4_gpio.h"
 3265              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc/xmc4_scu.h"
 3266              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/DAVE_Common.h"
 3267              	 .file 10 "../Dave/Generated/PWM_CCU8/../GLOBAL_CCU8/global_ccu8.h"
 3268              	 .file 11 "../Dave/Generated/PWM_CCU8/pwm_ccu8.h"
 3269              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/CMSIS/Include/cmsis_gcc.h"
 3270              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/CMSIS/Include/core_cm4.h"
 3271              	 .file 14 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwm_ccu8.c
    {standard input}:20     .text.XMC_CCU8_EnableClock:00000000 $t
    {standard input}:24     .text.XMC_CCU8_EnableClock:00000000 XMC_CCU8_EnableClock
    {standard input}:68     .text.XMC_CCU8_SLICE_EnableTrap:00000000 $t
    {standard input}:72     .text.XMC_CCU8_SLICE_EnableTrap:00000000 XMC_CCU8_SLICE_EnableTrap
    {standard input}:116    .text.XMC_CCU8_SLICE_IsTimerRunning:00000000 $t
    {standard input}:120    .text.XMC_CCU8_SLICE_IsTimerRunning:00000000 XMC_CCU8_SLICE_IsTimerRunning
    {standard input}:165    .text.XMC_CCU8_SLICE_StartTimer:00000000 $t
    {standard input}:169    .text.XMC_CCU8_SLICE_StartTimer:00000000 XMC_CCU8_SLICE_StartTimer
    {standard input}:208    .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:212    .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:251    .text.XMC_CCU8_SLICE_ClearTimer:00000000 $t
    {standard input}:255    .text.XMC_CCU8_SLICE_ClearTimer:00000000 XMC_CCU8_SLICE_ClearTimer
    {standard input}:294    .text.XMC_CCU8_SLICE_GetTimerPeriodMatch:00000000 $t
    {standard input}:298    .text.XMC_CCU8_SLICE_GetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_GetTimerPeriodMatch
    {standard input}:338    .text.XMC_CCU8_EnableShadowTransfer:00000000 $t
    {standard input}:342    .text.XMC_CCU8_EnableShadowTransfer:00000000 XMC_CCU8_EnableShadowTransfer
    {standard input}:382    .text.XMC_CCU8_SLICE_GetTimerValue:00000000 $t
    {standard input}:386    .text.XMC_CCU8_SLICE_GetTimerValue:00000000 XMC_CCU8_SLICE_GetTimerValue
    {standard input}:426    .text.XMC_CCU8_SLICE_EnableEvent:00000000 $t
    {standard input}:430    .text.XMC_CCU8_SLICE_EnableEvent:00000000 XMC_CCU8_SLICE_EnableEvent
    {standard input}:476    .text.XMC_CCU8_SLICE_ClearEvent:00000000 $t
    {standard input}:480    .text.XMC_CCU8_SLICE_ClearEvent:00000000 XMC_CCU8_SLICE_ClearEvent
    {standard input}:523    .text.XMC_CCU8_SLICE_GetEvent:00000000 $t
    {standard input}:527    .text.XMC_CCU8_SLICE_GetEvent:00000000 XMC_CCU8_SLICE_GetEvent
    {standard input}:576    .text.XMC_CCU8_SLICE_SetShadowTransferMode:00000000 $t
    {standard input}:580    .text.XMC_CCU8_SLICE_SetShadowTransferMode:00000000 XMC_CCU8_SLICE_SetShadowTransferMode
    {standard input}:629    .text.PWM_CCU8_GetAppVersion:00000000 $t
    {standard input}:634    .text.PWM_CCU8_GetAppVersion:00000000 PWM_CCU8_GetAppVersion
    {standard input}:695    .text.PWM_CCU8_Init:00000000 $t
    {standard input}:700    .text.PWM_CCU8_Init:00000000 PWM_CCU8_Init
    {standard input}:1318   .text.PWM_CCU8_lConfigure_Events:00000000 PWM_CCU8_lConfigure_Events
    {standard input}:931    .text.PWM_CCU8_lInit_Interrupt:00000000 PWM_CCU8_lInit_Interrupt
    {standard input}:1191   .text.PWM_CCU8_lInit_GPIO:00000000 PWM_CCU8_lInit_GPIO
    {standard input}:1604   .text.PWM_CCU8_Start:00000000 PWM_CCU8_Start
    {standard input}:927    .text.PWM_CCU8_lInit_Interrupt:00000000 $t
    {standard input}:1187   .text.PWM_CCU8_lInit_GPIO:00000000 $t
    {standard input}:1314   .text.PWM_CCU8_lConfigure_Events:00000000 $t
    {standard input}:1599   .text.PWM_CCU8_Start:00000000 $t
    {standard input}:1680   .text.PWM_CCU8_Stop:00000000 $t
    {standard input}:1685   .text.PWM_CCU8_Stop:00000000 PWM_CCU8_Stop
    {standard input}:1745   .text.PWM_CCU8_GetTimerValue:00000000 $t
    {standard input}:1750   .text.PWM_CCU8_GetTimerValue:00000000 PWM_CCU8_GetTimerValue
    {standard input}:1791   .text.PWM_CCU8_GetTimerStatus:00000000 $t
    {standard input}:1796   .text.PWM_CCU8_GetTimerStatus:00000000 PWM_CCU8_GetTimerStatus
    {standard input}:1837   .text.PWM_CCU8_SetFreqSymmetric:00000000 $t
    {standard input}:1842   .text.PWM_CCU8_SetFreqSymmetric:00000000 PWM_CCU8_SetFreqSymmetric
    {standard input}:2006   .text.PWM_CCU8_SetFreqSymmetric:000000fc $d
    {standard input}:2011   .text.PWM_CCU8_SetDutyCycleSymmetric:00000000 $t
    {standard input}:2016   .text.PWM_CCU8_SetDutyCycleSymmetric:00000000 PWM_CCU8_SetDutyCycleSymmetric
    {standard input}:2120   .text.PWM_CCU8_SetDutyCycleSymmetric:00000094 $d
    {standard input}:2125   .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric:00000000 $t
    {standard input}:2130   .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric:00000000 PWM_CCU8_SetFreqAndDutyCycleSymmetric
    {standard input}:2290   .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric:00000108 $d
    {standard input}:2295   .text.PWM_CCU8_SetFreqAsymmetric:00000000 $t
    {standard input}:2300   .text.PWM_CCU8_SetFreqAsymmetric:00000000 PWM_CCU8_SetFreqAsymmetric
    {standard input}:2524   .text.PWM_CCU8_SetFreqAsymmetric:00000188 $d
    {standard input}:2529   .text.PWM_CCU8_SetDutyCycleAsymmetric:00000000 $t
    {standard input}:2534   .text.PWM_CCU8_SetDutyCycleAsymmetric:00000000 PWM_CCU8_SetDutyCycleAsymmetric
    {standard input}:2743   .text.PWM_CCU8_SetDutyCycleAsymmetric:00000170 $d
    {standard input}:2748   .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric:00000000 $t
    {standard input}:2753   .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric:00000000 PWM_CCU8_SetFreqAndDutyCycleAsymmetric
    {standard input}:3002   .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric:000001c4 $d
    {standard input}:3007   .text.PWM_CCU8_SetDither:00000000 $t
    {standard input}:3012   .text.PWM_CCU8_SetDither:00000000 PWM_CCU8_SetDither
    {standard input}:3067   .text.PWM_CCU8_ClearTrap:00000000 $t
    {standard input}:3072   .text.PWM_CCU8_ClearTrap:00000000 PWM_CCU8_ClearTrap
    {standard input}:3109   .text.PWM_CCU8_SetDeadTime:00000000 $t
    {standard input}:3114   .text.PWM_CCU8_SetDeadTime:00000000 PWM_CCU8_SetDeadTime
    {standard input}:3161   .text.PWM_CCU8_GetInterruptStatus:00000000 $t
    {standard input}:3166   .text.PWM_CCU8_GetInterruptStatus:00000000 PWM_CCU8_GetInterruptStatus
    {standard input}:3214   .text.PWM_CCU8_ClearEvent:00000000 $t
    {standard input}:3219   .text.PWM_CCU8_ClearEvent:00000000 PWM_CCU8_ClearEvent
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
GLOBAL_CCU8_Init
XMC_CCU8_SLICE_CompareInit
XMC_CCU8_SLICE_SetTimerPeriodMatch
XMC_CCU8_SLICE_SetTimerCompareMatch
XMC_CCU8_SetMultiChannelShadowTransferMode
XMC_CCU8_SLICE_DeadTimeInit
XMC_CCU8_SLICE_SetInterruptNode
XMC_GPIO_Init
XMC_CCU8_SLICE_ConfigureEvent
XMC_CCU8_SLICE_StartConfig
XMC_CCU8_SLICE_StopConfig
XMC_CCU8_SLICE_DirectionConfig
XMC_CCU8_SLICE_GateConfig
XMC_CCU8_SLICE_CountConfig
XMC_CCU8_SLICE_LoadConfig
XMC_CCU8_SLICE_LoadSelector
XMC_CCU8_SLICE_ModulationConfig
XMC_CCU8_SLICE_TrapConfig
XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
XMC_CCU8_SLICE_StatusBitOverrideConfig
XMC_CCU8_SLICE_EnableDithering
XMC_CCU8_SLICE_SetDeadTimeValue
