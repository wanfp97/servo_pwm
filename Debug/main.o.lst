   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_GetInput:
  25              	.LFB142:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** {
 258:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 261:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** }
 262:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** {
 284:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 287:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** }
 288:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** {
 310:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 313:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** }
 314:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 315:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 316:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 317:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 318:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 319:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 320:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 321:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 323:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 324:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 326:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 327:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 328:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 329:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 330:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 331:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 332:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 333:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 334:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 334 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 335:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 336:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** 
 337:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
  45              	 .loc 1 337 0
  46 000c 7B68     	 ldr r3,[r7,#4]
  47 000e 5A6A     	 ldr r2,[r3,#36]
  48 0010 FB78     	 ldrb r3,[r7,#3]
  49 0012 22FA03F3 	 lsr r3,r2,r3
  50 0016 03F00103 	 and r3,r3,#1
 338:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 338 0
  52 001a 1846     	 mov r0,r3
  53 001c 0C37     	 adds r7,r7,#12
  54              	.LCFI3:
  55              	 .cfi_def_cfa_offset 4
  56 001e BD46     	 mov sp,r7
  57              	.LCFI4:
  58              	 .cfi_def_cfa_register 13
  59              	 
  60 0020 5DF8047B 	 ldr r7,[sp],#4
  61              	.LCFI5:
  62              	 .cfi_restore 7
  63              	 .cfi_def_cfa_offset 0
  64 0024 7047     	 bx lr
  65              	 .cfi_endproc
  66              	.LFE142:
  68 0026 00BF     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
  69              	 .align 2
  70              	 .thumb
  71              	 .thumb_func
  73              	PIN_INTERRUPT_GetPinValue:
  74              	.LFB153:
  75              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2016-03-02
   4:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.2 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016, Infineon Technologies AG
  14:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  45:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  47:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  48:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  49:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  50:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  51:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  52:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  53:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  54:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  55:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_scu.h>
  56:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  57:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_gpio.h>
  58:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_eru.h>
  59:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <DAVE_Common.h>
  60:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  61:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  62:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  63:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  64:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  65:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       (XMC_LIB_MINOR_VERSION >= 1U) && \
  66:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       (XMC_LIB_PATCH_VERSION >= 6U)))
  67:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  68:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  69:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  70:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  71:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  72:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  73:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  74:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  75:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  76:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  77:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  79:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  80:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  81:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  83:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  84:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  85:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  86:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  87:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  88:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  89:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
  90:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
  91:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  92:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
  93:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
  94:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
  95:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
  96:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
  97:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  98:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 100:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 101:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 102:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 103:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 104:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 105:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 106:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 107:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 108:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 109:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 110:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 111:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 112:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 114:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 115:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 116:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 117:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 118:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 119:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 120:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 121:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 122:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 123:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 124:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 125:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 126:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 127:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 128:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 129:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 131:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 133:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 134:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 135:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 136:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 137:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 138:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 139:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 140:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 141:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 142:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 143:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 144:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 145:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 146:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 147:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 148:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 149:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 150:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 151:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 152:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 153:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 154:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 155:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 157:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 158:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 160:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 161:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 162:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 163:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 164:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 165:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 166:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 167:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 168:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 169:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 170:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include <DAVE.h>
 171:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 172:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) {
 173:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 174:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 175:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 176:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 177:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 178:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 179:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 180:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 181:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 182:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 183:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 184:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 185:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 186:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 187:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 188:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // More code here
 189:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 190:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 191:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 192:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 193:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 194:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 195:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 197:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 198:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 199:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 200:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 201:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 202:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 203:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 204:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 205:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 206:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 207:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 208:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 209:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 210:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 211:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 212:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include <DAVE.h>
 213:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 214:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 215:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 216:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 217:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 218:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 219:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 220:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 221:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 222:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 223:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 224:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 225:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 226:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 227:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 228:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 229:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 230:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 231:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 232:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 233:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 234:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 235:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 236:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 237:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 238:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 239:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 240:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 241:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 242:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include <DAVE.h>
 243:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 244:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 245:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 246:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 247:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 248:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 249:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 250:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 251:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 252:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 253:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 254:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    while(1)
 255:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {}
 256:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 257:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 258:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 259:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 260:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 261:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 262:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 263:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 264:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 265:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 266:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 267:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 268:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 269:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 270:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 271:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 272:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 273:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 274:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 275:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include <DAVE.h>
 276:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 277:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 278:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 279:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 280:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 281:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 282:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 283:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 284:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 285:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 286:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 287:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 288:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    while(1)
 289:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {}
 290:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 291:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 292:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 293:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 294:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 295:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 296:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 297:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 298:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 299:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 300:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 301:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 302:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 303:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 304:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 305:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 306:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 307:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 308:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 309:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 310:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 311:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 312:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 313:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 314:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 315:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 316:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 317:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 318:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 319:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 320:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if(status == DAVE_STATUS_SUCCESS)
 321:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 322:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 323:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 324:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 325:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 326:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 327:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 328:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 329:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 330:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 331:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 332:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 333:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 334:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 335:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if(pin_status == 1)
 336:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 337:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 338:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 339:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 340:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 341:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 342:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 345:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 346:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 347:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 348:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 349:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
  76              	 .loc 2 349 0
  77              	 .cfi_startproc
  78              	 
  79              	 
  80 0000 80B5     	 push {r7,lr}
  81              	.LCFI6:
  82              	 .cfi_def_cfa_offset 8
  83              	 .cfi_offset 7,-8
  84              	 .cfi_offset 14,-4
  85 0002 82B0     	 sub sp,sp,#8
  86              	.LCFI7:
  87              	 .cfi_def_cfa_offset 16
  88 0004 00AF     	 add r7,sp,#0
  89              	.LCFI8:
  90              	 .cfi_def_cfa_register 7
  91 0006 7860     	 str r0,[r7,#4]
 350:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 351:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
  92              	 .loc 2 351 0
  93 0008 7B68     	 ldr r3,[r7,#4]
  94 000a 5A68     	 ldr r2,[r3,#4]
  95 000c 7B68     	 ldr r3,[r7,#4]
  96 000e 93F82130 	 ldrb r3,[r3,#33]
  97 0012 1046     	 mov r0,r2
  98 0014 1946     	 mov r1,r3
  99 0016 FFF7FEFF 	 bl XMC_GPIO_GetInput
 100 001a 0346     	 mov r3,r0
 352:C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 101              	 .loc 2 352 0
 102 001c 1846     	 mov r0,r3
 103 001e 0837     	 adds r7,r7,#8
 104              	.LCFI9:
 105              	 .cfi_def_cfa_offset 8
 106 0020 BD46     	 mov sp,r7
 107              	.LCFI10:
 108              	 .cfi_def_cfa_register 13
 109              	 
 110 0022 80BD     	 pop {r7,pc}
 111              	 .cfi_endproc
 112              	.LFE153:
 114              	 .global pin_status
 115              	 .section .bss.pin_status,"aw",%nobits
 116              	 .align 2
 119              	pin_status:
 120 0000 00000000 	 .space 4
 121              	 .section .text.main,"ax",%progbits
 122              	 .align 2
 123              	 .global main
 124              	 .thumb
 125              	 .thumb_func
 127              	main:
 128              	.LFB238:
 129              	 .file 3 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2020 Aug 08 20:28:24
   5:../main.c     ****  *  Author: FORGE-15R
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** 
  10:../main.c     **** 
  11:../main.c     **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
  12:../main.c     **** 
  13:../main.c     **** /**
  14:../main.c     **** 
  15:../main.c     ****  * @brief main() - Application entry point
  16:../main.c     ****  *
  17:../main.c     ****  * <b>Details of function</b><br>
  18:../main.c     ****  * This routine is the application entry point. It is invoked by the device startup code. It is res
  19:../main.c     ****  * invoking the APP initialization dispatcher routine - DAVE_Init() and hosting the place-holder fo
  20:../main.c     ****  * code.
  21:../main.c     ****  */
  22:../main.c     **** 
  23:../main.c     ****   // data type declaration
  24:../main.c     ****   	volatile uint32_t pin_status = 0;
  25:../main.c     **** 
  26:../main.c     **** 
  27:../main.c     **** // function prototype declaration
  28:../main.c     **** /*	void clamp_open_IRQHandler(void);
  29:../main.c     **** 	void clamp_close_IRQHandler(void);
  30:../main.c     **** 	void clamp_up_IRQHandler(void);
  31:../main.c     **** 	void clamp_down_IRQHandler(void);*/
  32:../main.c     **** 
  33:../main.c     **** 
  34:../main.c     **** int main(void)
  35:../main.c     **** {
 130              	 .loc 3 35 0
 131              	 .cfi_startproc
 132              	 
 133              	 
 134 0000 80B5     	 push {r7,lr}
 135              	.LCFI11:
 136              	 .cfi_def_cfa_offset 8
 137              	 .cfi_offset 7,-8
 138              	 .cfi_offset 14,-4
 139 0002 82B0     	 sub sp,sp,#8
 140              	.LCFI12:
 141              	 .cfi_def_cfa_offset 16
 142 0004 00AF     	 add r7,sp,#0
 143              	.LCFI13:
 144              	 .cfi_def_cfa_register 7
  36:../main.c     ****   DAVE_STATUS_t status;
  37:../main.c     **** 
  38:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 145              	 .loc 3 38 0
 146 0006 FFF7FEFF 	 bl DAVE_Init
 147 000a 0346     	 mov r3,r0
 148 000c FB71     	 strb r3,[r7,#7]
  39:../main.c     **** 
  40:../main.c     ****   if(status != DAVE_STATUS_SUCCESS)
 149              	 .loc 3 40 0
 150 000e FB79     	 ldrb r3,[r7,#7]
 151 0010 002B     	 cmp r3,#0
 152 0012 00D0     	 beq .L6
 153              	.L7:
  41:../main.c     ****   {
  42:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
  43:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
  44:../main.c     **** 
  45:../main.c     ****     while(1U)
  46:../main.c     ****     {
  47:../main.c     **** 
  48:../main.c     ****     }
 154              	 .loc 3 48 0 discriminator 1
 155 0014 FEE7     	 b .L7
 156              	.L6:
  49:../main.c     ****   }
  50:../main.c     **** 
  51:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
  52:../main.c     ****   while(1U)
  53:../main.c     ****   {
  54:../main.c     **** 
  55:../main.c     ****   }
 157              	 .loc 3 55 0 discriminator 2
 158 0016 FEE7     	 b .L6
 159              	 .cfi_endproc
 160              	.LFE238:
 162              	 .section .text.ERU0_0_IRQHandler,"ax",%progbits
 163              	 .align 2
 164              	 .global ERU0_0_IRQHandler
 165              	 .thumb
 166              	 .thumb_func
 168              	ERU0_0_IRQHandler:
 169              	.LFB239:
  56:../main.c     **** }
  57:../main.c     **** 
  58:../main.c     **** 
  59:../main.c     **** void clamp_open_IRQHandler(void)
  60:../main.c     **** {
 170              	 .loc 3 60 0
 171              	 .cfi_startproc
 172              	 
 173              	 
 174 0000 80B5     	 push {r7,lr}
 175              	.LCFI14:
 176              	 .cfi_def_cfa_offset 8
 177              	 .cfi_offset 7,-8
 178              	 .cfi_offset 14,-4
 179 0002 00AF     	 add r7,sp,#0
 180              	.LCFI15:
 181              	 .cfi_def_cfa_register 7
  61:../main.c     ****      pin_status = PIN_INTERRUPT_GetPinValue(&clamp_open);
 182              	 .loc 3 61 0
 183 0004 0B48     	 ldr r0,.L11
 184 0006 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 185 000a 0246     	 mov r2,r0
 186 000c 0A4B     	 ldr r3,.L11+4
 187 000e 1A60     	 str r2,[r3]
  62:../main.c     ****      if(pin_status == 1)
 188              	 .loc 3 62 0
 189 0010 094B     	 ldr r3,.L11+4
 190 0012 1B68     	 ldr r3,[r3]
 191 0014 012B     	 cmp r3,#1
 192 0016 04D1     	 bne .L9
  63:../main.c     ****      {
  64:../main.c     ****  	  	// sets the duty to 2%.
  65:../main.c     ****     	// clamp open
  66:../main.c     ****     	 PWM_SetDutyCycle(&pwm_clamp_open_and_close,200);
 193              	 .loc 3 66 0
 194 0018 0848     	 ldr r0,.L11+8
 195 001a C821     	 movs r1,#200
 196 001c FFF7FEFF 	 bl PWM_SetDutyCycle
 197 0020 03E0     	 b .L10
 198              	.L9:
  67:../main.c     ****      }
  68:../main.c     **** 
  69:../main.c     ****      else
  70:../main.c     ****      {
  71:../main.c     ****     	 // sets the channel duty to 10%.
  72:../main.c     ****     	 // clamp maintain
  73:../main.c     ****     	 PWM_SetDutyCycle(&pwm_clamp_open_and_close,0);
 199              	 .loc 3 73 0
 200 0022 0648     	 ldr r0,.L11+8
 201 0024 0021     	 movs r1,#0
 202 0026 FFF7FEFF 	 bl PWM_SetDutyCycle
 203              	.L10:
  74:../main.c     ****      }
  75:../main.c     **** 
  76:../main.c     ****  	pin_status = 0;
 204              	 .loc 3 76 0
 205 002a 034B     	 ldr r3,.L11+4
 206 002c 0022     	 movs r2,#0
 207 002e 1A60     	 str r2,[r3]
  77:../main.c     **** 
  78:../main.c     **** }
 208              	 .loc 3 78 0
 209 0030 80BD     	 pop {r7,pc}
 210              	.L12:
 211 0032 00BF     	 .align 2
 212              	.L11:
 213 0034 00000000 	 .word clamp_open
 214 0038 00000000 	 .word pin_status
 215 003c 00000000 	 .word pwm_clamp_open_and_close
 216              	 .cfi_endproc
 217              	.LFE239:
 219              	 .section .text.ERU0_3_IRQHandler,"ax",%progbits
 220              	 .align 2
 221              	 .global ERU0_3_IRQHandler
 222              	 .thumb
 223              	 .thumb_func
 225              	ERU0_3_IRQHandler:
 226              	.LFB240:
  79:../main.c     **** 
  80:../main.c     **** void clamp_close_IRQHandler(void)
  81:../main.c     **** {
 227              	 .loc 3 81 0
 228              	 .cfi_startproc
 229              	 
 230              	 
 231 0000 80B5     	 push {r7,lr}
 232              	.LCFI16:
 233              	 .cfi_def_cfa_offset 8
 234              	 .cfi_offset 7,-8
 235              	 .cfi_offset 14,-4
 236 0002 00AF     	 add r7,sp,#0
 237              	.LCFI17:
 238              	 .cfi_def_cfa_register 7
  82:../main.c     ****      pin_status = PIN_INTERRUPT_GetPinValue(&clamp_close);
 239              	 .loc 3 82 0
 240 0004 0B48     	 ldr r0,.L16
 241 0006 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 242 000a 0246     	 mov r2,r0
 243 000c 0A4B     	 ldr r3,.L16+4
 244 000e 1A60     	 str r2,[r3]
  83:../main.c     ****      if(pin_status == 1)
 245              	 .loc 3 83 0
 246 0010 094B     	 ldr r3,.L16+4
 247 0012 1B68     	 ldr r3,[r3]
 248 0014 012B     	 cmp r3,#1
 249 0016 05D1     	 bne .L14
  84:../main.c     ****      {
  85:../main.c     ****  	  	// sets the channel duty to 10%.
  86:../main.c     ****     	// clamp close
  87:../main.c     ****     	 PWM_SetDutyCycle(&pwm_clamp_open_and_close,1200);
 250              	 .loc 3 87 0
 251 0018 0848     	 ldr r0,.L16+8
 252 001a 4FF49661 	 mov r1,#1200
 253 001e FFF7FEFF 	 bl PWM_SetDutyCycle
 254 0022 03E0     	 b .L15
 255              	.L14:
  88:../main.c     ****      }
  89:../main.c     **** 
  90:../main.c     ****      else
  91:../main.c     ****      {
  92:../main.c     ****     	 // sets the channel duty to 10%.
  93:../main.c     ****     	 // clamp maintain
  94:../main.c     ****     	 PWM_SetDutyCycle(&pwm_clamp_open_and_close,0);
 256              	 .loc 3 94 0
 257 0024 0548     	 ldr r0,.L16+8
 258 0026 0021     	 movs r1,#0
 259 0028 FFF7FEFF 	 bl PWM_SetDutyCycle
 260              	.L15:
  95:../main.c     ****      }
  96:../main.c     **** 
  97:../main.c     **** 
  98:../main.c     **** 	pin_status = 0;
 261              	 .loc 3 98 0
 262 002c 024B     	 ldr r3,.L16+4
 263 002e 0022     	 movs r2,#0
 264 0030 1A60     	 str r2,[r3]
  99:../main.c     **** 
 100:../main.c     **** }
 265              	 .loc 3 100 0
 266 0032 80BD     	 pop {r7,pc}
 267              	.L17:
 268              	 .align 2
 269              	.L16:
 270 0034 00000000 	 .word clamp_close
 271 0038 00000000 	 .word pin_status
 272 003c 00000000 	 .word pwm_clamp_open_and_close
 273              	 .cfi_endproc
 274              	.LFE240:
 276              	 .section .text.ERU0_2_IRQHandler,"ax",%progbits
 277              	 .align 2
 278              	 .global ERU0_2_IRQHandler
 279              	 .thumb
 280              	 .thumb_func
 282              	ERU0_2_IRQHandler:
 283              	.LFB241:
 101:../main.c     **** void clamp_up_IRQHandler(void)
 102:../main.c     **** {
 284              	 .loc 3 102 0
 285              	 .cfi_startproc
 286              	 
 287              	 
 288 0000 80B5     	 push {r7,lr}
 289              	.LCFI18:
 290              	 .cfi_def_cfa_offset 8
 291              	 .cfi_offset 7,-8
 292              	 .cfi_offset 14,-4
 293 0002 00AF     	 add r7,sp,#0
 294              	.LCFI19:
 295              	 .cfi_def_cfa_register 7
 103:../main.c     **** 
 104:../main.c     ****      {
 105:../main.c     ****  	  	// sets the duty to 2%.
 106:../main.c     ****     	// clamp open
 107:../main.c     ****     	 PWM_SetDutyCycle(&pwm_clamp_up_and_down,200);
 296              	 .loc 3 107 0
 297 0004 0248     	 ldr r0,.L19
 298 0006 C821     	 movs r1,#200
 299 0008 FFF7FEFF 	 bl PWM_SetDutyCycle
 108:../main.c     ****      }
 109:../main.c     **** 
 110:../main.c     **** }
 300              	 .loc 3 110 0
 301 000c 80BD     	 pop {r7,pc}
 302              	.L20:
 303 000e 00BF     	 .align 2
 304              	.L19:
 305 0010 00000000 	 .word pwm_clamp_up_and_down
 306              	 .cfi_endproc
 307              	.LFE241:
 309              	 .section .text.ERU1_0_IRQHandler,"ax",%progbits
 310              	 .align 2
 311              	 .global ERU1_0_IRQHandler
 312              	 .thumb
 313              	 .thumb_func
 315              	ERU1_0_IRQHandler:
 316              	.LFB242:
 111:../main.c     **** 
 112:../main.c     **** void clamp_down_IRQHandler(void)
 113:../main.c     **** {
 317              	 .loc 3 113 0
 318              	 .cfi_startproc
 319              	 
 320              	 
 321 0000 80B5     	 push {r7,lr}
 322              	.LCFI20:
 323              	 .cfi_def_cfa_offset 8
 324              	 .cfi_offset 7,-8
 325              	 .cfi_offset 14,-4
 326 0002 00AF     	 add r7,sp,#0
 327              	.LCFI21:
 328              	 .cfi_def_cfa_register 7
 114:../main.c     **** 
 115:../main.c     ****      {
 116:../main.c     ****  	  	// sets the channel duty to 10%.
 117:../main.c     ****     	// clamp close
 118:../main.c     ****     	 PWM_SetDutyCycle(&pwm_clamp_up_and_down,900);
 329              	 .loc 3 118 0
 330 0004 0248     	 ldr r0,.L22
 331 0006 4FF46171 	 mov r1,#900
 332 000a FFF7FEFF 	 bl PWM_SetDutyCycle
 119:../main.c     ****      }
 120:../main.c     **** 
 121:../main.c     **** }
 333              	 .loc 3 121 0
 334 000e 80BD     	 pop {r7,pc}
 335              	.L23:
 336              	 .align 2
 337              	.L22:
 338 0010 00000000 	 .word pwm_clamp_up_and_down
 339              	 .cfi_endproc
 340              	.LFE242:
 342              	 .text
 343              	.Letext0:
 344              	 .file 4 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 345              	 .file 5 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 346              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 347              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc/xmc4_gpio.h"
 348              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc/xmc_eru.h"
 349              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc/xmc4_scu.h"
 350              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/XMCLib/inc/xmc_ccu4.h"
 351              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 352              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PWM/pwm.h"
 353              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/DAVE.h"
 354              	 .file 14 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/CMSIS/Include/cmsis_gcc.h"
 355              	 .file 15 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/CMSIS/Include/core_cm4.h"
 356              	 .file 16 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 357              	 .file 17 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
 358              	 .file 18 "C:/Workspaces/DAVE-4.4.2-64Bit/test/servo_pwm/Dave/Generated/PWM/PWM_Extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:24     .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:69     .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:73     .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:119    .bss.pin_status:00000000 pin_status
    {standard input}:116    .bss.pin_status:00000000 $d
    {standard input}:122    .text.main:00000000 $t
    {standard input}:127    .text.main:00000000 main
    {standard input}:163    .text.ERU0_0_IRQHandler:00000000 $t
    {standard input}:168    .text.ERU0_0_IRQHandler:00000000 ERU0_0_IRQHandler
    {standard input}:213    .text.ERU0_0_IRQHandler:00000034 $d
    {standard input}:220    .text.ERU0_3_IRQHandler:00000000 $t
    {standard input}:225    .text.ERU0_3_IRQHandler:00000000 ERU0_3_IRQHandler
    {standard input}:270    .text.ERU0_3_IRQHandler:00000034 $d
    {standard input}:277    .text.ERU0_2_IRQHandler:00000000 $t
    {standard input}:282    .text.ERU0_2_IRQHandler:00000000 ERU0_2_IRQHandler
    {standard input}:305    .text.ERU0_2_IRQHandler:00000010 $d
    {standard input}:310    .text.ERU1_0_IRQHandler:00000000 $t
    {standard input}:315    .text.ERU1_0_IRQHandler:00000000 ERU1_0_IRQHandler
    {standard input}:338    .text.ERU1_0_IRQHandler:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
PWM_SetDutyCycle
clamp_open
pwm_clamp_open_and_close
clamp_close
pwm_clamp_up_and_down
